<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<xsd:schema targetNamespace="urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:ext"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:daf="urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:ext"
  xmlns:dafint="urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:int"
  attributeFormDefault="unqualified" elementFormDefault="qualified"
  xsi:schemaLocation="http://www.w3.org/2001/XMLSchema XMLSchema.xsd
  urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:int xsd/dafint.xsd">

  <xsd:import namespace="urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:int"/>

  <xsd:attribute name="parseUnparsePolicy" type="daf:ParseUnparsePolicyEnum"/>

  
  <xsd:simpleType name="ParseUnparsePolicyEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="parseOnly" />
      <xsd:enumeration value="unparseOnly" />
      <xsd:enumeration value="both" />
    </xsd:restriction>
  </xsd:simpleType>
  
  <xsd:attribute name="emptyElementParsePolicy" type="daf:EmptyElementParsePolicyEnum"/>
  
  <xsd:simpleType name="EmptyElementParsePolicyEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="treatAsMissing" />
      <xsd:enumeration value="treatAsEmpty" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:element name="property" type="daf:PropertyType" />

  <xsd:complexType name="PropertyType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="name" type="daf:PropertyNameType" use='required'/>
        <xsd:attributeGroup ref="dafint:daffodilAG"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:simpleType name="PropertyNameType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="parseUnparsePolicy"/>
      <xsd:enumeration value="emptyElementParsePolicy"/>
    </xsd:restriction>
  </xsd:simpleType>


  <!-- properties related to daffodil configuration -->

  <xsd:element name="externalVariableBindings" type="daf:externalVarType" />
  <xsd:complexType name="externalVarType">
    <xsd:sequence>
      <xsd:element ref="daf:bind" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:complexType>

  <xsd:element name="bind" type="daf:bindType" />

  <xsd:simpleType name="bindNameType">
    <xsd:restriction base="xsd:string" />
  </xsd:simpleType>
  <xsd:complexType name="bindType">
    <xsd:simpleContent>
      <xsd:extension base="daf:bindNameType">
        <xsd:attribute name="name" use="required">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string" />
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:element name="tunables">
      <xsd:complexType>
      <xsd:all><!-- any order but only 0 or 1 time each -->
        <xsd:element name="requireBitOrderProperty" minOccurs="0" type="xsd:boolean" />
        <xsd:element name="requireEncodingErrorPolicyProperty" minOccurs="0" type="xsd:boolean" />
        <xsd:element name="requireTextBidiProperty" minOccurs="0" type="xsd:boolean" />
        <xsd:element name="requireFloatingProperty" minOccurs="0" type="xsd:boolean" />
        <xsd:element name="maxFieldContentLengthInBytes" minOccurs="0" type="xsd:int" />
        <xsd:element name="maxOccursBounds" minOccurs="0" type="xsd:int" />
        <xsd:element name="maxSkipLengthInBytes" minOccurs="0" type="xsd:int" />
        <xsd:element name="maxBinaryDecimalVirtualPoint" minOccurs="0" type="xsd:int" />
        <xsd:element name="minBinaryDecimalVirtualPoint" minOccurs="0" type="xsd:int" />
        <xsd:element name="generatedNamespacePrefixStem" minOccurs="0" type="xsd:string" />
        <xsd:element name="readerByteBufferSize" minOccurs="0" type="xsd:int" />
        <xsd:element name="maxLengthForVariableLengthDelimiterDisplay" minOccurs="0" type="xsd:int" />
        <xsd:element name="inputFileMemoryMapLowThreshold" minOccurs="0" type="xsd:int" />
        <xsd:element name="maximumSimpleElementSizeInCharacters" minOccurs="0" type="xsd:int" />
        <xsd:element name="initialRegexMatchLimitInCharacters" minOccurs="0" type="xsd:int" />
        <xsd:element name="maximumRegexMatchLengthInCharacters" minOccurs="0" type="xsd:int" />
        <xsd:element name="parseUnparsePolicy" minOccurs="0" type="daf:ParseUnparsePolicyEnum"/>
        <xsd:element name="unqualifiedPathStepPolicy" minOccurs="0">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:enumeration value="noNamespace" />
              <xsd:enumeration value="defaultNamespace" />
              <xsd:enumeration value="preferDefaultNamespace" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="suppressSchemaDefinitionWarnings" minOccurs="0">
           <xsd:simpleType>
           <xsd:list>
             <xsd:simpleType>
               <xsd:restriction base="xsd:token">
                 <xsd:enumeration value="all"/>
                 <!-- 
                    Please keep these in alphabetical order
                     -->
                 <xsd:enumeration value="alignmentNotSame"/>
                 <xsd:enumeration value="appinfoDFDLSourceWrong"/>
                 <xsd:enumeration value="appinfoNoSource"/>
                 <xsd:enumeration value="choiceInsideHiddenGroup" />
                 <xsd:enumeration value="deprecatedBuiltInFormats"/>
                 <xsd:enumeration value="deprecatedEncodingNameUSASCII7BitPacked"/>
                 <xsd:enumeration value="deprecatedFunctionDAFError"/>
                 <xsd:enumeration value="deprecatedPropertySeparatorPolicy" />
                 <xsd:enumeration value="deprecatedExpressionResultCoercion" />
                 <xsd:enumeration value="emptyElementPolicyError" />
                 <xsd:enumeration value="encodingErrorPolicyError"/>
                 <xsd:enumeration value="escapeSchemeRefUndefined"/>
                 <xsd:enumeration value="facetExplicitLengthOutOfRange"/>
                 <xsd:enumeration value="inconsistentLengthKind"/>
                 <xsd:enumeration value="multipleChoiceBranches"/>
                 <xsd:enumeration value="namespaceDifferencesOnly"/>
                 <xsd:enumeration value="noEmptyDefault"/>
                 <xsd:enumeration value="pathNotToArray" />
                 <xsd:enumeration value="patternEncodingSlashW"/>
                 <xsd:enumeration value="queryStylePathExpression"/>
                 <xsd:enumeration value="regexPatternZeroLength" />
                 <xsd:enumeration value="unsupportedAttributeBlockDefault" />
                 <xsd:enumeration value="unsupportedAttributeFinalDefault" />
                 <xsd:enumeration value="unsupportedAttributeFormDefault" />
                 <xsd:enumeration value="unsupportedAttributeSchemaLocation" />
               </xsd:restriction>
             </xsd:simpleType>
           </xsd:list>
           </xsd:simpleType>
        </xsd:element>
        <xsd:element name="allowExpressionResultCoercion" minOccurs="0" type="xsd:boolean" />
        <xsd:element name="defaultEmptyElementParsePolicy" minOccurs="0" type="daf:EmptyElementParsePolicyEnum"/>
        <xsd:element name="requireEmptyElementParsePolicyProperty" minOccurs="0" type="xsd:boolean" />
      </xsd:all>
    </xsd:complexType>
  </xsd:element>

</xsd:schema>
