<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://example.com"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:ex="http://example.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.ogf.org/dfdl/dfdl-1.0/ xsd/DFDL_part3_model.xsd 
  http://www.w3.org/2001/XMLSchema xsd/XMLSchema_for_DFDL.xsd">

  <!-- <xsd:element name="hereForXSI_DoNotRemove" type="xsd:int"
    xml:lang="en"
    xsi:schemaLocation="http://www.ogf.org/dfdl/dfdl-1.0/ DFDL_part3_model.xsd" />
   -->
  <!--
    Uncomment this to see strict error checking

    <xsd:element name="t1" type="xsd:int" dfdl:representation="invalidShortForm">
    <xsd:annotation>
    <xsd:appinfo>
    <dfdl:element byteOrder="invalidLongForm" encoding="ascii"
    invalidPropName="foobar" />
    </xsd:appinfo>
    </xsd:annotation>
    </xsd:element>
  -->



  <xsd:simpleType name="myInt">
    <xsd:annotation>
      <xsd:appinfo>
        <dfdl:simpleType alignment="implicit"
          bitOrder="mostSignificantBitFirst"
          alignmentUnits="bits" byteOrder="littleEndian" encoding="ascii"
          escapeSchemeRef="ex:foo" fillByte="1" initiator=""

          leadingSkip="1" length="{}" lengthKind="implicit"
          lengthPattern="" lengthUnits="bits" outputNewLine=""

          prefixIncludesPrefixLength="yes" prefixLengthType="QName"
          representation="binary" terminator="" textBooleanFalseRep=""
          textBooleanTrueRep="" textNumberJustification="right"
          textStringJustification="right" textTrimKind="none"
          trailingSkip="1">
          <dfdl:property name="terminator">!</dfdl:property>
        </dfdl:simpleType>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:maxExclusive value="25" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:annotation>
    <xsd:appinfo>
      <dfdl:defineFormat name="myFormat">
        <dfdl:format alignment="implicit" alignmentUnits="bits"
          byteOrder="littleEndian" encoding="ascii" escapeSchemeRef="myScheme"
          fillByte="-128" documentFinalTerminatorCanBeMissing="yes"
          initiator="" inputValueCalc="{ }" length="{ 5 }" lengthKind="implicit"
          lengthPattern="" lengthUnits="bits" nilKind="literalValue"
          nilValueDelimiterPolicy="both" nilValue="NIL" occursCount="{ 0 }"
          occursCountKind="stopValue" occursStopValue="" outputNewLine=""
          outputValueCalc="{ 42 }" prefixIncludesPrefixLength="yes"
          prefixLengthType="ex:myPrefixType" representation="binary"
          separator="" separatorSuppressionPolicy="never" separatorPosition="infix"
          textBooleanFalseRep="" textBooleanTrueRep=""
          textNumberJustification="right" textStringJustification="right"
          textTrimKind="none" trailingSkip="1" useNilForDefault="yes"
          ref="myBaseFormat" encodingErrorPolicy='replace'>
          <dfdl:property name="terminator">##;;</dfdl:property>
        </dfdl:format>
      </dfdl:defineFormat>
    </xsd:appinfo>
  </xsd:annotation>



  <xsd:simpleType name="mySimpleType" dfdl:alignment="implicit"
    dfdl:alignmentUnits="bits" dfdl:byteOrder="littleEndian"
    dfdl:encoding="ascii" dfdl:ignoreCase="yes" dfdl:leadingSkip="1"
    dfdl:length="3" dfdl:lengthKind="implicit" dfdl:lengthPattern=""
    dfdl:lengthUnits="bits" dfdl:outputNewLine=""
    dfdl:prefixIncludesPrefixLength="yes" dfdl:prefixLengthType="QName"
    dfdl:representation="binary" dfdl:terminator=""
    dfdl:textBooleanFalseRep="" dfdl:textBooleanTrueRep=""
    dfdl:textNumberJustification="right" dfdl:textStringJustification="right"
    dfdl:textTrimKind="none" dfdl:trailingSkip="1">
    <xsd:restriction base="xsd:int" />
  </xsd:simpleType>


  <xsd:group name="myGroup">
    <xsd:sequence>
      <xsd:element name="e1" type="xsd:hexBinary" />
    </xsd:sequence>
  </xsd:group>

  <xsd:element name="t1" type="xsd:int" dfdl:representation="text">
    <xsd:annotation>
      <xsd:appinfo>
        <dfdl:discriminator test="{ ../tns:zoneNumber = '1' }" />
        <dfdl:element byteOrder="bigEndian" encoding="ascii" />
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="t2">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:appinfo>
            <dfdl:sequence initiator="" separator=""
              ignoreCase="yes" separatorSuppressionPolicy="never"
              separatorPosition="infix" sequenceKind="ordered"
              terminator="">
              <dfdl:property name="terminator">;</dfdl:property>
            </dfdl:sequence>
          </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice>
          <xsd:annotation>
            <xsd:appinfo>
              <dfdl:choice choiceLengthKind="implicit">
                <dfdl:property name="terminator">;;;</dfdl:property>
              </dfdl:choice>
            </xsd:appinfo>
          </xsd:annotation>
          <xsd:element name="f1" type="xsd:int" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:appinfo>
                <dfdl:element alignment="implicit"
                  alignmentUnits="bits" byteOrder="littleEndian"
                  emptyValueDelimiterPolicy="both" encoding="ascii"
                  escapeSchemeRef="" fillByte="1" initiator=""
                  inputValueCalc="{ }" leadingSkip="1" length="{ 42 }"
                  lengthKind="implicit" lengthPattern="" lengthUnits="bits"
                  nilKind="literalValue" nilValueDelimiterPolicy="both"
                  nilValue="" occursCount="{ 0 }" occursCountKind="stopValue"
                  occursStopValue="" outputNewLine="" outputValueCalc="{ }"
                  prefixIncludesPrefixLength="yes" prefixLengthType="ex:myPrefixLengthType"
                  representation="binary" terminator=""
                  textBooleanFalseRep="" textBooleanTrueRep=""
                  textNumberJustification="right"
                  textStringJustification="right" textTrimKind="none"
                  trailingSkip="1" useNilForDefault="yes">
                  <dfdl:property name="terminator">!</dfdl:property>
                </dfdl:element>
              </xsd:appinfo>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="t3">
    <xsd:complexType>
      <xsd:sequence dfdl:initiator="" dfdl:separator=""
        dfdl:separatorSuppressionPolicy="never" dfdl:separatorPosition="infix"
        dfdl:sequenceKind="ordered" dfdl:terminator="">

        <xsd:choice dfdl:choiceLengthKind="implicit"
          dfdl:terminator="">

          <xsd:element name="f1" type="xsd:int" maxOccurs="unbounded"
            dfdl:alignment="implicit" dfdl:alignmentUnits="bits"
            dfdl:byteOrder="littleEndian"
            dfdl:emptyValueDelimiterPolicy="both" dfdl:encoding="ascii"
            dfdl:escapeSchemeRef="ex:myScheme" dfdl:fillByte="1"

            dfdl:initiator="" dfdl:inputValueCalc="{ 5 }"
            dfdl:leadingSkip="1" dfdl:length="7" dfdl:lengthKind="implicit"
            dfdl:lengthPattern="" dfdl:lengthUnits="bits" dfdl:nilKind="literalValue"
            dfdl:nilValueDelimiterPolicy="both" dfdl:nilValue=""
            dfdl:occursCount="{ 0 }" dfdl:occursCountKind="stopValue"
            dfdl:occursStopValue="" dfdl:outputNewLine=""
            dfdl:outputValueCalc="{ 5 }"
            dfdl:prefixIncludesPrefixLength="yes" dfdl:prefixLengthType="QName"
            dfdl:representation="binary" dfdl:terminator=""
            dfdl:ignoreCase="yes" dfdl:textBooleanFalseRep=""
            dfdl:textBooleanTrueRep="" dfdl:textNumberJustification="right"

            dfdl:textStringJustification="right" dfdl:textTrimKind="none"
            dfdl:useNilForDefault="yes">
          </xsd:element>
        </xsd:choice>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>



</xsd:schema>
