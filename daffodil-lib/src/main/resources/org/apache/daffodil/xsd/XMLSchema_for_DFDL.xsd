<?xml version='1.0' encoding='UTF-8'?>
<!--
  Copyright © 2018 World Wide Web Consortium, (Massachusetts
  Institute of Technology, European Research Consortium for Informatics and
  Mathematics, Keio University, Beihang). All Rights Reserved. This work is
  distributed under the W3C® Software License [1] in the hope that it will be
  useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231
-->

<!-- 

To get enforcement of the XML Schema Subset for DFDL, but at the 
same time let users use the original XML Schema namespace URI, we
give this schema the XML Schema URI as its namespace, and we use 
this to validate when we load a DFDL Schema.

 -->
<!-- XML Schema schema for XML Schemas: Part 1: Structures -->
<!-- Note this schema is NOT the normative structures schema. -->
<!-- The prose copy in the structures REC is the normative -->
<!-- version (which shouldn't differ from this one except for -->
<!-- this comment and entity expansions, but just in case -->

<xsd:schema  
  targetNamespace="http://www.w3.org/2001/XMLSchema"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  blockDefault="#all" elementFormDefault="qualified" version="1.0"
  xml:lang="EN" xmlns:xml="http://www.w3.org/XML/1998/namespace"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:dfdlx="http://www.ogf.org/dfdl/dfdl-1.0/extensions">
  <!-- Use the real URI for this, not the subset URI
   "http://www.w3.org/2001/XMLSchema"
  -->

  <xsd:import namespace="http://www.ogf.org/dfdl/dfdl-1.0/"/>

  <xsd:import namespace="http://www.ogf.org/dfdl/dfdl-1.0/extensions"/>

  <xsd:import namespace="urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:int"/>

  <xsd:annotation>
    <xsd:documentation>
      Part 1 version: Id: structures.xsd,v 1.2 2004/01/15 11:34:25 ht Exp
      Part 2 version: Id: datatypes.xsd,v 1.3 2004/01/23 18:11:13 ht Exp
    </xsd:documentation>
  </xsd:annotation>

  <xsd:annotation>
    <xsd:documentation
      source="http://www.w3.org/TR/2004/PER-xmlschema-1-20040318/structures.html">
      The schema corresponding to this document is normative,
      with respect to the syntactic constraints it expresses in the
      XML Schema language. The documentation (within &lt;documentation>
      elements)
      below, is not normative, but rather highlights important aspects of
      the W3C Recommendation of which this is a part
    </xsd:documentation>
  </xsd:annotation>

  <xsd:annotation>
    <xsd:documentation>
      The simpleType element and all of its members are defined
      towards the end
      of this schema document
    </xsd:documentation>
  </xsd:annotation>

  <xsd:import namespace="http://www.w3.org/XML/1998/namespace"
    schemaLocation="./xml.xsd">
    <xsd:annotation>
      <xsd:documentation>
        Get access to the xml: attribute groups for xml:lang
        as declared on 'schema' and 'documentation' below
      </xsd:documentation>
    </xsd:annotation>
  </xsd:import>

  <xsd:complexType name="openAttrs">
    <xsd:annotation>
      <xsd:documentation>
        This type is extended by almost all schema types
        to allow attributes from other namespaces to be
        added to user schemas.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="xsd:anyType">
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="annotated">
    <xsd:annotation>
      <xsd:documentation>
        This type is extended by all types which allow annotation
        other than &lt;schema&gt; itself
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="xsd:openAttrs">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:ID" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:group name="schemaTop">
    <xsd:annotation>
      <xsd:documentation>
        This group is for the
        elements which occur freely at the top level of schemas.
        All of their types are based on the "annotated" type by extension.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:group ref="xsd:redefinable" />
      <xsd:element ref="xsd:element" />
      <!-- <xsd:element ref="xsd:attribute"/> -->
      <!-- <xsd:element ref="xsd:notation"/> -->
    </xsd:choice>
  </xsd:group>

  <xsd:group name="redefinable">
    <xsd:annotation>
      <xsd:documentation>
        This group is for the
        elements which can self-redefine (see &lt;redefine> below).
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="xsd:simpleType" />
      <xsd:element ref="xsd:complexType" />
      <xsd:element ref="xsd:group" />
      <!-- <xsd:element ref="xsd:attributeGroup"/> -->
    </xsd:choice>
  </xsd:group>

  <xsd:simpleType name="formChoice">
    <xsd:annotation>
      <xsd:documentation>
        A utility type, not for public use
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="qualified" />
      <xsd:enumeration value="unqualified" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="reducedDerivationControl">
    <xsd:annotation>
      <xsd:documentation>
        A utility type, not for public use
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:derivationControl">
      <!-- <xsd:enumeration value="extension"/> -->
      <xsd:enumeration value="restriction" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="derivationSet">
    <xsd:annotation>
      <xsd:documentation>
        A utility type, not for public use
      </xsd:documentation>
      <xsd:documentation>
        #all or (possibly empty) subset of {extension, restriction}
      </xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:token">
          <xsd:enumeration value="#all" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:list itemType="xsd:reducedDerivationControl" />
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>

  <xsd:simpleType name="typeDerivationControl">
    <xsd:annotation>
      <xsd:documentation>
        A utility type, not for public use
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:derivationControl">
      <!-- <xsd:enumeration value="extension"/> -->
      <xsd:enumeration value="restriction" />
      <!-- <xsd:enumeration value="list"/> -->
      <xsd:enumeration value="union" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="fullDerivationSet">
    <xsd:annotation>
      <xsd:documentation>
        A utility type, not for public use
      </xsd:documentation>
      <xsd:documentation>
        #all or (possibly empty) subset of {extension, restriction, list, union}
      </xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:token">
          <xsd:enumeration value="#all" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:list itemType="xsd:typeDerivationControl" />
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>

  <xsd:element name="schema" id="schema">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-1/#element-schema" />
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="xsd:openAttrs">
          <xsd:sequence>
            <xsd:choice minOccurs="0" maxOccurs="unbounded">
              <xsd:element ref="xsd:include" />
              <xsd:element ref="xsd:import" />
              <!-- <xsd:element ref="xsd:redefine"/> -->
              <xsd:element ref="xsd:annotation" />
            </xsd:choice>
            <xsd:sequence minOccurs="0" maxOccurs="unbounded">
              <xsd:group ref="xsd:schemaTop" />
              <xsd:element ref="xsd:annotation" minOccurs="0"
                maxOccurs="unbounded" />
            </xsd:sequence>
          </xsd:sequence>
          <xsd:attribute name="targetNamespace" type="xsd:anyURI" />
          <xsd:attribute name="version" type="xsd:token" />
          <!-- <xsd:attribute name="finalDefault" type="xsd:fullDerivationSet" 
            use="optional" default=""/>
            <xsd:attribute name="blockDefault" type="xsd:blockSet" use="optional" 
            default=""/>
          -->
          <xsd:attribute name="attributeFormDefault" type="xsd:formChoice"
            use="optional" default="unqualified" />
          <xsd:attribute name="elementFormDefault" type="xsd:formChoice"
            use="optional" default="unqualified" />
          <xsd:attribute name="id" type="xsd:ID" />
          <xsd:attribute ref="xml:lang" />
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>

    <xsd:key name="element">
      <xsd:selector xpath="xsd:element" />
      <xsd:field xpath="@name" />
    </xsd:key>

    <xsd:key name="attribute">
      <xsd:selector xpath="xsd:attribute" />
      <xsd:field xpath="@name" />
    </xsd:key>

    <xsd:key name="type">
      <xsd:selector xpath="xsd:complexType|xsd:simpleType" />
      <xsd:field xpath="@name" />
    </xsd:key>

    <xsd:key name="group">
      <xsd:selector xpath="xsd:group" />
      <xsd:field xpath="@name" />
    </xsd:key>

    <xsd:key name="attributeGroup">
      <xsd:selector xpath="xsd:attributeGroup" />
      <xsd:field xpath="@name" />
    </xsd:key>

    <!-- not in DFDL v1.0
      <xsd:key name="notation">
      <xsd:selector xpath="xsd:notation"/>
      <xsd:field xpath="@name"/>
      </xsd:key>


      <xsd:key name="identityConstraint">
      <xsd:selector xpath=".//xsd:key|.//xsd:unique|.//xsd:keyref"/>
      <xsd:field xpath="@name"/>
      </xsd:key>
    -->
  </xsd:element>

  <xsd:simpleType name="allNNI">
    <xsd:annotation>
      <xsd:documentation>
        for maxOccurs
      </xsd:documentation>
    </xsd:annotation>
    <xsd:union memberTypes="xsd:nonNegativeInteger">
      <xsd:simpleType>
        <xsd:restriction base="xsd:NMTOKEN">
          <xsd:enumeration value="unbounded" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>

  <xsd:attributeGroup name="occurs">
    <xsd:annotation>
      <xsd:documentation>
        for all particles
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="minOccurs" type="xsd:nonNegativeInteger"
      use="optional" default="1" />
    <xsd:attribute name="maxOccurs" type="xsd:allNNI" use="optional"
      default="1" />
  </xsd:attributeGroup>

  <xsd:attributeGroup name="defRef">
    <xsd:annotation>
      <xsd:documentation>
        for element, group and attributeGroup,
        which both define and reference
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" type="xsd:NCName" />
    <xsd:attribute name="ref" type="xsd:QName" />
  </xsd:attributeGroup>

  <xsd:group name="typeDefParticle">
    <xsd:annotation>
      <xsd:documentation>
        'complexType' uses this
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="group" type="xsd:groupRef" />
      <!-- <xsd:element ref="xsd:all"/> -->
      <xsd:element ref="xsd:choice" />
      <xsd:element ref="xsd:sequence" />
    </xsd:choice>
  </xsd:group>



  <xsd:group name="nestedParticle">
    <xsd:choice>
      <xsd:element name="element" type="xsd:localElement" />
      <xsd:element name="group" type="xsd:groupRef" />
      <xsd:element ref="xsd:choice" />
      <xsd:element ref="xsd:sequence" />
      <!-- <xsd:element ref="xsd:any"/> -->
    </xsd:choice>
  </xsd:group>

  <xsd:group name="particle">
    <xsd:choice>
      <xsd:element name="element" type="xsd:localElement" />
      <xsd:element name="group" type="xsd:groupRef" />
      <!-- <xsd:element ref="xsd:all"/> -->
      <xsd:element ref="xsd:choice" />
      <xsd:element ref="xsd:sequence" />
      <!-- <xsd:element ref="xsd:any"/> -->
    </xsd:choice>
  </xsd:group>

  <!-- No attributes in DFDL v1.0
    <xsd:complexType name="attribute">
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">
    <xsd:sequence>
    <xsd:element name="simpleType" minOccurs="0" type="xsd:localSimpleType"/>
    </xsd:sequence>
    <xsd:attributeGroup ref="xsd:defRef"/>
    <xsd:attribute name="type" type="xsd:QName"/>
    <xsd:attribute name="use" use="optional" default="optional">
    <xsd:simpleType>
    <xsd:restriction base="xsd:NMTOKEN">
    <xsd:enumeration value="prohibited"/>
    <xsd:enumeration value="optional"/>
    <xsd:enumeration value="required"/>
    </xsd:restriction>
    </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="default" type="xsd:string"/>
    <xsd:attribute name="fixed" type="xsd:string"/>
    <xsd:attribute name="form" type="xsd:formChoice"/>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="topLevelAttribute">
    <xsd:complexContent>
    <xsd:restriction base="xsd:attribute">
    <xsd:sequence>
    <xsd:element ref="xsd:annotation" minOccurs="0"/>
    <xsd:element name="simpleType" minOccurs="0" type="xsd:localSimpleType"/>
    </xsd:sequence>
    <xsd:attribute name="ref" use="prohibited"/>
    <xsd:attribute name="form" use="prohibited"/>
    <xsd:attribute name="use" use="prohibited"/>
    <xsd:attribute name="name" use="required" type="xsd:NCName"/>
    <xsd:attributeGroup ref="xsd:anyOther"/>
    </xsd:restriction>
    </xsd:complexContent>
    </xsd:complexType>
  -->

  <!-- No attribute decls of any sort in DFDL v1.0
    <xsd:group name="attrDecls">
    <xsd:sequence>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
    <xsd:element name="attribute" type="xsd:attribute"/>
    <xsd:element name="attributeGroup" type="xsd:attributeGroupRef"/>
    </xsd:choice>
    <xsd:element ref="xsd:anyAttribute" minOccurs="0"/>
    </xsd:sequence>
    </xsd:group>
  -->
  <!--
    <xsd:element name="anyAttribute" type="xsd:wildcard" id="anyAttribute">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-anyAttribute"/>
    </xsd:annotation>
    </xsd:element>
  -->
  <xsd:group name="complexTypeModel">
    <xsd:choice>
      <!-- <xsd:element ref="xsd:simpleContent"/> Not DFDL v1.0 -->
      <!-- <xsd:element ref="xsd:complexContent"/> Not DFDL v1.0 -->
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>
            This branch is short for
            &lt;complexContent>
            &lt;restriction base="xsd:anyType">
            ...
            &lt;/restriction>
            &lt;/complexContent></xsd:documentation>
        </xsd:annotation>
        <xsd:group ref="xsd:typeDefParticle" minOccurs="0" />
        <!-- <xsd:group ref="xsd:attrDecls"/> --> <!-- no attributes in DFDL -->
      </xsd:sequence>
    </xsd:choice>
  </xsd:group>

  <xsd:complexType name="complexType" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="xsd:annotated">
        <xsd:group ref="xsd:complexTypeModel" />
        <xsd:attribute name="name" type="xsd:NCName">
          <xsd:annotation>
            <xsd:documentation>
              Will be restricted to required or forbidden
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- No type derivation (for complex types in DFDL v1.0
          <xsd:attribute name="mixed" type="xsd:boolean" use="optional" default="false">
          <xsd:annotation>
          <xsd:documentation>
          Not allowed if simpleContent child is chosen.
          May be overriden by setting on complexContent child.</xsd:documentation>
          </xsd:annotation>
          </xsd:attribute>
        -->
        <!-- none of these make sense in DFDL v1.0. Changed to "prohibited" -->
        <xsd:attribute name="abstract" type="xsd:boolean"
          use="prohibited" /> <!-- default="false" -->
        <xsd:attribute name="final" type="xsd:derivationSet"
          use="prohibited" />
        <xsd:attribute name="block" type="xsd:derivationSet"
          use="prohibited" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <!--
    <xsd:complexType name="restrictionType">
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">
    <xsd:sequence>
    <xsd:choice minOccurs="0">
    <xsd:group ref="xsd:typeDefParticle"/>
    <xsd:group ref="xsd:simpleRestrictionModel"/>
    </xsd:choice>
    <xsd:group ref="xsd:attrDecls"/>
    </xsd:sequence>
    <xsd:attribute name="base" type="xsd:QName" use="required"/>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>



    <xsd:complexType name="extensionType">
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">
    <xsd:sequence>
    <xsd:group ref="xsd:typeDefParticle" minOccurs="0"/>
    <xsd:group ref="xsd:attrDecls"/>
    </xsd:sequence>
    <xsd:attribute name="base" type="xsd:QName" use="required"/>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>
  -->


  <!--
    <xsd:complexType name="simpleExtensionType">
    <xsd:complexContent>
    <xsd:restriction base="xsd:extensionType">
    <xsd:sequence>
    <xsd:annotation>
    <xsd:documentation>
    No typeDefParticle group reference</xsd:documentation>
    </xsd:annotation>
    <xsd:element ref="xsd:annotation" minOccurs="0"/>
    <xsd:group ref="xsd:attrDecls"/>
    </xsd:sequence>
    <xsd:attributeGroup ref="xsd:anyOther"/>
    </xsd:restriction>
    </xsd:complexContent>
    </xsd:complexType>


    <xsd:element name="simpleContent" id="simpleContent">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-simpleContent"/>
    </xsd:annotation>
    <xsd:complexType>
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">
    <xsd:choice>
    <xsd:element name="restriction" type="xsd:simpleRestrictionType"/>
    <xsd:element name="extension" type="xsd:simpleExtensionType"/>
    </xsd:choice>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>
    </xsd:element>
  -->

  <xsd:attributeGroup name="anyOther">
    <!--
    IBM's DFDL Schemas have ibm-specific attributes on them that we 
    need to tolerate. Users may want to decorate their DFDL schemas with
    other non-native and non-DFDL attributes and annotation sub-elements.
    
    The default XSD behavior (commented out below) is to allow any additional
    attributes on a schema by performing lax validation on anything not in the
    XSD namespace.
    
    The problem: since DFDL short form properties are not in the XSD namespace,
    they are not validated. This means common typographical errors or forgetting
    the dfdl: prefix are often not caught.

    So instead, we reference an attributeGroup that has the same anyAttribute line,
    but is in a schema with a dfdl target namespace. This means we will perform lax
    validation for attributes not in the dfdl namespace, but all dfdl properties
    will be strictly validated.
    -->
    <!-- <xsd:anyAttribute namespace="##other" processContents="lax"/> -->
    <xsd:attributeGroup ref="dfdl:anyOther" />
  </xsd:attributeGroup>

  <xsd:complexType name="topLevelComplexType">
    <xsd:complexContent>
      <xsd:restriction base="xsd:complexType">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
          <xsd:group ref="xsd:complexTypeModel" />
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName" use="required" />
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="localComplexType">
    <xsd:complexContent>
      <xsd:restriction base="xsd:complexType">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
          <xsd:group ref="xsd:complexTypeModel" />
        </xsd:sequence>
        <xsd:attribute name="name" use="prohibited" />
        <xsd:attribute name="abstract" use="prohibited" />
        <xsd:attribute name="final" use="prohibited" />
        <xsd:attribute name="block" use="prohibited" />
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>


  <!--
    <xsd:complexType name="complexRestrictionType">
    <xsd:complexContent>
    <xsd:restriction base="xsd:restrictionType">
    <xsd:sequence>
    <xsd:element ref="xsd:annotation" minOccurs="0"/>
    <xsd:choice minOccurs="0">
    <xsd:annotation>
    <xsd:documentation>This choice is added simply to
    make this a valid restriction per the REC</xsd:documentation>
    </xsd:annotation>
    <xsd:group ref="xsd:typeDefParticle"/>
    </xsd:choice>
    <xsd:group ref="xsd:attrDecls"/>
    </xsd:sequence>
    <xsd:attributeGroup ref="xsd:anyOther"/>
    </xsd:restriction>
    </xsd:complexContent>
    </xsd:complexType>
  -->

  <!--
    <xsd:element name="complexContent" id="complexContent">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-complexContent"/>
    </xsd:annotation>
    <xsd:complexType>
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">

    <xsd:choice>
    <xsd:element name="restriction" type="xsd:complexRestrictionType"/>
    <xsd:element name="extension" type="xsd:extensionType"/>
    </xsd:choice>

    No mixed content in DFDL v1.0
    <xsd:attribute name="mixed" type="xsd:boolean">
    <xsd:annotation>
    <xsd:documentation>
    Overrides any setting on complexType parent.</xsd:documentation>
    </xsd:annotation>
    </xsd:attribute>

    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>
    </xsd:element>
  -->
  <!--
    <xsd:complexType name="simpleRestrictionType">
    <xsd:complexContent>
    <xsd:restriction base="xsd:restrictionType">
    <xsd:sequence>
    <xsd:element ref="xsd:annotation" minOccurs="0"/>
    <xsd:choice minOccurs="0">
    <xsd:annotation>
    <xsd:documentation>This choice is added simply to
    make this a valid restriction per the REC</xsd:documentation>
    </xsd:annotation>
    <xsd:group ref="xsd:simpleRestrictionModel"/>
    </xsd:choice>
    <xsd:group ref="xsd:attrDecls"/>
    </xsd:sequence>
    <xsd:attributeGroup ref="xsd:anyOther"/>
    </xsd:restriction>
    </xsd:complexContent>
    </xsd:complexType>
  -->

  <xsd:element name="complexType" type="xsd:topLevelComplexType"
    id="complexType">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-1/#element-complexType" />
    </xsd:annotation>
  </xsd:element>

  <xsd:simpleType name="__blockSet">
    <xsd:annotation>
      <xsd:documentation>
        A utility type, not for public use
      </xsd:documentation>
      <xsd:documentation>
        #all or (possibly empty) subset of {substitution, extension,
        restriction}
      </xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:token">
          <xsd:enumeration value="#all" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:list>
          <xsd:simpleType>
            <xsd:restriction base="xsd:derivationControl">
              <!-- <xsd:enumeration value="extension"/> -->
              <xsd:enumeration value="restriction" />
              <!-- <xsd:enumeration value="substitution"/> -->
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:list>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>

  <xsd:complexType name="element" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        The element element can be used either
        at the top level to define an element-type binding globally,
        or within a content model to either reference a globally-defined
        element or type or declare an element-type binding locally.
        The ref form is not allowed at the top level.
      </xsd:documentation>
    </xsd:annotation>

    <xsd:complexContent>
      <xsd:extension base="xsd:annotated">
        <xsd:sequence>
          <xsd:choice minOccurs="0" maxOccurs="1">
            <xsd:element name="simpleType" type="xsd:localSimpleType" />
            <xsd:element name="complexType" type="xsd:localComplexType" />
          </xsd:choice>
          <!-- <xsd:group ref="xsd:identityConstraint" minOccurs="0" maxOccurs="unbounded"/> 
            Not in DFDL v1.0 -->
        </xsd:sequence>
        <xsd:attributeGroup ref="xsd:defRef" />
        <xsd:attribute name="type" type="xsd:QName" />
        <!-- <xsd:attribute name="substitutionGroup" type="xsd:QName"/> Not 
          in DFDL v1.0 -->
        <xsd:attributeGroup ref="xsd:occurs" />
        <xsd:attribute name="default" type="xsd:string" />
        <xsd:attribute name="fixed" type="xsd:string" />
        <!-- remove default="false" because Xerces is inserting that
        as part of its parsing, and that ends up being incorrect since
        element references cannot have nillable -->
        <xsd:attribute name="nillable" type="xsd:boolean" />
        <!-- Not in DFDL v1.0
          <xsd:attribute name="abstract" type="xsd:boolean" use="optional" 
          default="false"/>
          <xsd:attribute name="final" type="xsd:derivationSet"/>
          <xsd:attribute name="block" type="xsd:blockSet"/>
          <xsd:attribute name="form" type="xsd:formChoice"/>
        -->
        <!--
          Include short-form DFDL Attributes.
        -->
        <xsd:attributeGroup ref="dfdl:BaseAGQualified" />
        <xsd:attributeGroup ref="dfdl:CommonAGQualified" />
        <xsd:attributeGroup ref="dfdl:AlignmentAGQualified" />
        <xsd:attributeGroup ref="dfdl:MarkupAGQualified" />
        <xsd:attributeGroup ref="dfdl:ElementAGQualified" />

      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="topLevelElement">
    <xsd:complexContent>
      <xsd:restriction base="xsd:element">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="simpleType" type="xsd:localSimpleType" />
            <xsd:element name="complexType" type="xsd:localComplexType" />
          </xsd:choice>
          <!-- <xsd:group ref="xsd:identityConstraint" minOccurs="0" maxOccurs="unbounded"/> 
            Not in DFDL v1.0 -->
        </xsd:sequence>
        <xsd:attribute name="ref" use="prohibited" />
        <xsd:attribute name="form" use="prohibited" />
        <xsd:attribute name="minOccurs" use="prohibited" />
        <xsd:attribute name="maxOccurs" use="prohibited" />
        <xsd:attribute name="name" use="required" type="xsd:NCName" />
        <xsd:attributeGroup ref="xsd:anyOther" />

      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="localElement">
    <xsd:complexContent>
      <xsd:restriction base="xsd:element">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="simpleType" type="xsd:localSimpleType" />
            <xsd:element name="complexType" type="xsd:localComplexType" />
          </xsd:choice>
          <!-- <xsd:group ref="xsd:identityConstraint" minOccurs="0" maxOccurs="unbounded"/> 
            Not in DFDL v1.0 -->
        </xsd:sequence>
        <xsd:attribute name="substitutionGroup" use="prohibited" />
        <xsd:attribute name="final" use="prohibited" />
        <xsd:attribute name="abstract" use="prohibited" />
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="element" type="xsd:topLevelElement" id="element">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-1/#element-element" />
    </xsd:annotation>
  </xsd:element>

  <xsd:complexType name="group" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        group type for explicit groups, named top-level groups and
        group references
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="xsd:annotated">
        <xsd:group ref="xsd:particle" minOccurs="0" maxOccurs="unbounded" />
        <xsd:attributeGroup ref="xsd:defRef" />
        <!-- No Occurs except on elements in DFDL v1.0
          <xsd:attributeGroup ref="xsd:occurs"/>
        -->
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="realGroup">
    <xsd:complexContent>
      <xsd:restriction base="xsd:group">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
          <xsd:choice minOccurs="0" maxOccurs="1">
            <xsd:element ref="xsd:choice" />
            <xsd:element ref="xsd:sequence" />
          </xsd:choice>
        </xsd:sequence>
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="namedGroup">
    <xsd:complexContent>
      <xsd:extension base="xsd:realGroup">
        <!-- <xsd:attribute name="name" use="required" type="xsd:NCName"/> -->
        <xsd:attribute name="ref" use="prohibited" />
        <xsd:attribute name="minOccurs" use="prohibited" />
        <xsd:attribute name="maxOccurs" use="prohibited" />
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="groupRef">
    <xsd:complexContent>
      <xsd:extension base="xsd:annotated">
        <xsd:attribute name="ref" use="required" type="xsd:QName" />
        <xsd:attribute name="name" use="prohibited" />
        <xsd:attributeGroup ref="xsd:anyOther" />

        <!-- DFDL -->

        <xsd:attributeGroup ref="dfdl:BaseAGQualified" />
        <xsd:attributeGroup ref="dfdl:CommonAGQualified" />
        <xsd:attributeGroup ref="dfdl:AlignmentAGQualified" />
        <xsd:attributeGroup ref="dfdl:MarkupAGQualified" />
        <xsd:attributeGroup ref="dfdl:GroupAGQualified" />

      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="explicitGroup">
    <xsd:annotation>
      <xsd:documentation>
        group type for the three kinds of group
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="xsd:annotation" minOccurs="0" />
      <xsd:group ref="xsd:nestedParticle" minOccurs="0"
        maxOccurs="unbounded" />
    </xsd:sequence>
    <xsd:attributeGroup ref="xsd:anyOther" />

    <!-- DFDL attributes for short form -->
    <xsd:attributeGroup ref="dfdl:BaseAGQualified" />
    <xsd:attributeGroup ref="dfdl:CommonAGQualified" />
    <xsd:attributeGroup ref="dfdl:AlignmentAGQualified" />
    <xsd:attributeGroup ref="dfdl:MarkupAGQualified" />
    <xsd:attributeGroup ref="dfdl:GroupCommonAGQualified" />
  </xsd:complexType>

  <xsd:complexType name="simpleExplicitGroup">
    <xsd:complexContent>
      <xsd:restriction base="xsd:explicitGroup">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
          <xsd:group ref="xsd:nestedParticle" minOccurs="0"
            maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute name="minOccurs" use="prohibited" />
        <xsd:attribute name="maxOccurs" use="prohibited" />
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <!-- No ALL groups in DFDL v1.0
    <xsd:group name="allModel">
    <xsd:sequence>
    <xsd:element ref="xsd:annotation" minOccurs="0"/>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
    <xsd:annotation>
    <xsd:documentation>This choice with min/max is here to
    avoid a pblm with the Elt:All/Choice/Seq
    Particle derivation constraint</xsd:documentation>
    </xsd:annotation>
    <xsd:element name="element" type="xsd:narrowMaxMin"/>
    </xsd:choice>
    </xsd:sequence>
    </xsd:group>
  -->

  <xsd:complexType name="narrowMaxMin">
    <xsd:annotation>
      <xsd:documentation>restricted max/min</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:restriction base="xsd:localElement">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="simpleType" type="xsd:localSimpleType" />
            <xsd:element name="complexType" type="xsd:localComplexType" />
          </xsd:choice>
          <!-- <xsd:group ref="xsd:identityConstraint" minOccurs="0" maxOccurs="unbounded"/> 
            Not in DFDL v1.0 -->
        </xsd:sequence>
        <xsd:attribute name="minOccurs" use="optional"
          default="1">
          <xsd:simpleType>
            <xsd:restriction base="xsd:nonNegativeInteger">
              <xsd:enumeration value="0" />
              <xsd:enumeration value="1" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="maxOccurs" use="optional"
          default="1">
          <xsd:simpleType>
            <xsd:restriction base="xsd:allNNI">
              <xsd:enumeration value="0" />
              <xsd:enumeration value="1" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="explicitChoiceGroup">
    <xsd:complexContent>
      <xsd:extension base="xsd:explicitGroup">
        <!-- DFDL -->
        <xsd:attributeGroup ref="dfdl:ChoiceAGQualified" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="choice" type="xsd:explicitChoiceGroup"
    id="choice">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-1/#element-choice" />
    </xsd:annotation>
  </xsd:element>

  <xsd:complexType name="explicitSequenceGroup">
    <xsd:complexContent>
      <xsd:extension base="xsd:explicitGroup">
        <!-- DFDL -->
        <xsd:attributeGroup ref="dfdl:SequenceAGQualified" />
        <xsd:attributeGroup ref="dfdl:SeparatorAGQualified" />
        <xsd:attributeGroup ref="dfdl:LayeringAGQualified" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="sequence" type="xsd:explicitSequenceGroup"
    id="sequence">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-1/#element-sequence" />
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="group" type="xsd:namedGroup" id="group">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-1/#element-group" />
    </xsd:annotation>
  </xsd:element>

  <!-- <xsd:complexType name="wildcard">
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">
    <xsd:attribute name="namespace" type="xsd:namespaceList" use="optional" 
    default="##any"/>
  -->
  <!-- Chapter 21: processContents not allowed in v1
    <xsd:attribute name="processContents" use="optional" default="strict">
    <xsd:simpleType>
    <xsd:restriction base="xsd:NMTOKEN">
    <xsd:enumeration value="skip"/>
    <xsd:enumeration value="lax"/>
    <xsd:enumeration value="strict"/>
    </xsd:restriction>
    </xsd:simpleType>
    </xsd:attribute>
  --> <!--
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>
  -->
  <!-- No ANY wildcards in DFDL v1.0
    <xsd:element name="any" id="any">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-any"/>
    </xsd:annotation>
    <xsd:complexType>
    <xsd:complexContent>
    <xsd:extension base="xsd:wildcard">
    <xsd:attributeGroup ref="xsd:occurs"/>
    <xsd:attributeGroup ref="xsd:anyOther"/>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>
    </xsd:element>
  -->
  <!--
    <xsd:annotation>
    <xsd:documentation>
    simple type for the value of the 'namespace' attr of
    'any' and 'anyAttribute'</xsd:documentation>
    </xsd:annotation>
    <xsd:annotation>
    <xsd:documentation>
    Value is
    ##any - - any non-conflicting WFXML/attribute at all

    ##other - - any non-conflicting WFXML/attribute from
    namespace other than targetNS

    ##local - - any unqualified non-conflicting WFXML/attribute

    one or - - any non-conflicting WFXML/attribute from
    more URI the listed namespaces
    references
    (space separated)

    ##targetNamespace or ##local may appear in the above list, to
    refer to the targetNamespace of the enclosing
    schema or an absent targetNamespace respectively</xsd:documentation>
    </xsd:annotation>

    <xsd:simpleType name="namespaceList">
    <xsd:annotation>
    <xsd:documentation>
    A utility type, not for public use</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
    <xsd:simpleType>
    <xsd:restriction base="xsd:token">
    <xsd:enumeration value="##any"/>
    <xsd:enumeration value="##other"/>
    </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType>
    <xsd:list>
    <xsd:simpleType>
    <xsd:union memberTypes="xsd:anyURI">
    <xsd:simpleType>
    <xsd:restriction base="xsd:token">
    <xsd:enumeration value="##targetNamespace"/>
    <xsd:enumeration value="##local"/>
    </xsd:restriction>
    </xsd:simpleType>
    </xsd:union>
    </xsd:simpleType>
    </xsd:list>
    </xsd:simpleType>
    </xsd:union>
    </xsd:simpleType>
  -->
  <!--
    <xsd:element name="attribute" type="xsd:topLevelAttribute" id="attribute">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-attribute"/>
    </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="attributeGroup" abstract="true">
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">
    <xsd:group ref="xsd:attrDecls"/>
    <xsd:attributeGroup ref="xsd:defRef"/>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="namedAttributeGroup">
    <xsd:complexContent>
    <xsd:restriction base="xsd:attributeGroup">
    <xsd:sequence>
    <xsd:element ref="xsd:annotation" minOccurs="0"/>
    <xsd:group ref="xsd:attrDecls"/>
    </xsd:sequence>
    <xsd:attribute name="name" use="required" type="xsd:NCName"/>
    <xsd:attribute name="ref" use="prohibited"/>
    <xsd:attributeGroup ref="xsd:anyOther"/>
    </xsd:restriction>
    </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="attributeGroupRef">
    <xsd:complexContent>
    <xsd:restriction base="xsd:attributeGroup">
    <xsd:sequence>
    <xsd:element ref="xsd:annotation" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="ref" use="required" type="xsd:QName"/>
    <xsd:attribute name="name" use="prohibited"/>
    <xsd:attributeGroup ref="xsd:anyOther"/>
    </xsd:restriction>
    </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="attributeGroup" type="xsd:namedAttributeGroup" id="attributeGroup">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-attributeGroup"/>
    </xsd:annotation>
    </xsd:element>
  -->

  <xsd:element name="include" id="include">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-1/#element-include" />
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="xsd:annotated">
          <xsd:attribute name="schemaLocation" type="xsd:anyURI"
            use="required" />
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>

  <!--
    <xsd:element name="redefine" id="redefine">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-redefine"/>
    </xsd:annotation>
    <xsd:complexType>
    <xsd:complexContent>
    <xsd:extension base="xsd:openAttrs">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
    <xsd:element ref="xsd:annotation"/>
    <xsd:group ref="xsd:redefinable"/>
    </xsd:choice>
    <xsd:attribute name="schemaLocation" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="id" type="xsd:ID"/>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>
    </xsd:element>
  -->

  <xsd:element name="import" id="import">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-1/#element-import" />
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="xsd:annotated">
          <xsd:attribute name="namespace" type="xsd:anyURI" />
          <xsd:attribute name="schemaLocation" type="xsd:anyURI" />
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>

  <!--
    <xsd:element name="__selector" id="selector">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-selector"/>
    </xsd:annotation>
    <xsd:complexType>
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">
    <xsd:attribute name="xpath" use="required">
    <xsd:simpleType>
    <xsd:annotation>
    <xsd:documentation>A subset of XPath expressions for use
    in selectors</xsd:documentation>
    <xsd:documentation>A utility type, not for public
    use</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token">
    <xsd:annotation>
    <xsd:documentation>The following pattern is intended to allow XPath
    expressions per the following EBNF:
    Selector ::= Path ( '|' Path )*
    Path ::= ('.//')? Step ( '/' Step )*
    Step ::= '.' | NameTest
    NameTest ::= QName | '*' | NCName ':' '*'
    child:: is also allowed
    </xsd:documentation>
    </xsd:annotation>
    <xsd:pattern value="(\.//)?(((child::)?((\i\c*:)?(\i\c*|\*)))|\.)(/(((child::)?((\i\c*:)?(\i\c*|\*)))|\.))*(\|(\.//)?(((child::)?((\i\c*:)?(\i\c*|\*)))|\.)(/(((child::)?((\i\c*:)?(\i\c*|\*)))|\.))*)*">
    </xsd:pattern>
    </xsd:restriction>
    </xsd:simpleType>
    </xsd:attribute>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>
    </xsd:element>

    <xsd:element name="__field" id="field">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-field"/>
    </xsd:annotation>
    <xsd:complexType>
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">
    <xsd:attribute name="xpath" use="required">
    <xsd:simpleType>
    <xsd:annotation>
    <xsd:documentation>A subset of XPath expressions for use
    in fields</xsd:documentation>
    <xsd:documentation>A utility type, not for public
    use</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token">
    <xsd:annotation>
    <xsd:documentation>The following pattern is intended to allow XPath
    expressions per the same EBNF as for selector,
    with the following change:
    Path ::= ('.//')? ( Step '/' )* ( Step | '@' NameTest )
    </xsd:documentation>
    </xsd:annotation>
    <xsd:pattern value="(\.//)?((((child::)?((\i\c*:)?(\i\c*|\*)))|\.)/)*((((child::)?((\i\c*:)?(\i\c*|\*)))|\.)|((attribute::|@)((\i\c*:)?(\i\c*|\*))))(\|(\.//)?((((child::)?((\i\c*:)?(\i\c*|\*)))|\.)/)*((((child::)?((\i\c*:)?(\i\c*|\*)))|\.)|((attribute::|@)((\i\c*:)?(\i\c*|\*)))))*">
    </xsd:pattern>
    </xsd:restriction>
    </xsd:simpleType>
    </xsd:attribute>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>
    </xsd:element>

    <xsd:complexType name="__keybase">
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">
    <xsd:sequence>
    <xsd:element ref="xsd:selector"/>
    <xsd:element ref="xsd:field" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>

    <xsd:group name="__identityConstraint">
    <xsd:annotation>
    <xsd:documentation>The three kinds of identity constraints, all with
    type of or derived from 'keybase'.
    </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
    <xsd:element ref="xsd:unique"/>
    <xsd:element ref="xsd:key"/>
    <xsd:element ref="xsd:keyref"/>
    </xsd:choice>
    </xsd:group>

    <xsd:element name="__unique" type="xsd:keybase" id="unique">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-unique"/>
    </xsd:annotation>
    </xsd:element>
    <xsd:element name="__key" type="xsd:keybase" id="key">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-key"/>
    </xsd:annotation>
    </xsd:element>
    <xsd:element name="__keyref" id="keyref">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-keyref"/>
    </xsd:annotation>
    <xsd:complexType>
    <xsd:complexContent>
    <xsd:extension base="xsd:keybase">
    <xsd:attribute name="refer" type="xsd:QName" use="required"/>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>
    </xsd:element>

    <xsd:element name="__notation" id="notation">
    <xsd:annotation>
    <xsd:documentation source="http://www.w3.org/TR/xmlschema-1/#element-notation"/>
    </xsd:annotation>
    <xsd:complexType>
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
    <xsd:attribute name="public" type="xsd:public"/>
    <xsd:attribute name="system" type="xsd:anyURI"/>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>
    </xsd:element>

    <xsd:simpleType name="public">
    <xsd:annotation>
    <xsd:documentation>
    A utility type, not for public use</xsd:documentation>
    <xsd:documentation>
    A public identifier, per ISO 8879</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token"/>
    </xsd:simpleType>
  -->
  <xsd:element name="appinfo" id="appinfo">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-1/#element-appinfo" />
    </xsd:annotation>
    <xsd:complexType mixed="true">
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <!--
          Some users may want to provide appinfo annotations specific to their
          use-case in addition to the DFDL annotations. Normal XML schema allows
          any elements with lax validation using the commented out line below.
          However, we want to perform extra validation on the dfdl elements. So
          the DFDLAppInfoGroup defines all the DFDL specific attribute-form
          elements that are allowed in an xs:appinfo and what attributes they may
          have. The dfdl:anyOther group reference is used to allow elements from any
          other namespace with lax validation.
        -->
        <!--<xsd:any processContents="lax" />-->
        <xsd:group ref="dfdl:DFDLAppInfoGroup" />
        <xsd:group ref="dfdl:anyOther" />
      </xsd:choice>
      <xsd:attribute name="source" type="xsd:anyURI" />
      <xsd:attributeGroup ref="xsd:anyOther" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="documentation" id="documentation">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-1/#element-documentation" />
    </xsd:annotation>
    <xsd:complexType mixed="true">
      <xsd:sequence minOccurs="0" maxOccurs="unbounded">
        <xsd:any processContents="lax" />
      </xsd:sequence>
      <xsd:attribute name="source" type="xsd:anyURI" />
      <xsd:attribute ref="xml:lang" />
      <xsd:attributeGroup ref="xsd:anyOther" />
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="annotation" id="annotation">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-1/#element-annotation" />
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="xsd:openAttrs">
          <xsd:choice minOccurs="0" maxOccurs="unbounded">
            <xsd:element ref="xsd:appinfo" />
            <xsd:element ref="xsd:documentation" />
          </xsd:choice>
          <xsd:attribute name="id" type="xsd:ID" />
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>



  <xsd:simpleType name="derivationControl">
    <xsd:annotation>
      <xsd:documentation>
        A utility type, not for public use
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <!-- <xsd:enumeration value="substitution"/> -->
      <!-- <xsd:enumeration value="extension"/> -->
      <xsd:enumeration value="restriction" />
      <!-- <xsd:enumeration value="list"/> -->
      <xsd:enumeration value="union" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:group name="simpleDerivation">
    <xsd:choice>
      <xsd:element ref="xsd:restriction" />
      <!-- <xsd:element ref="xsd:list"/> Not in DFDL v1.0 -->
      <xsd:element ref="xsd:union" />
    </xsd:choice>
  </xsd:group>



  <xsd:simpleType name="simpleDerivationSet">
    <xsd:annotation>
      <xsd:documentation>
        #all or (possibly empty) subset of {restriction, union, list}
      </xsd:documentation>
      <xsd:documentation>
        A utility type, not for public use
      </xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:token">
          <xsd:enumeration value="#all" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:list>
          <xsd:simpleType>
            <xsd:restriction base="xsd:derivationControl">
              <!-- <xsd:enumeration value="list"/> -->
              <xsd:enumeration value="union" />
              <xsd:enumeration value="restriction" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:list>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>

  <xsd:complexType name="simpleType" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="xsd:annotated">
        <xsd:group ref="xsd:simpleDerivation" />
        <xsd:attribute name="final" type="xsd:simpleDerivationSet" />
        <xsd:attribute name="name" type="xsd:NCName">
          <xsd:annotation>
            <xsd:documentation>
              Can be restricted to required or
              forbidden
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>

        <!-- DFDL -->
        <xsd:attributeGroup ref="dfdl:BaseAGQualified" />
        <xsd:attributeGroup ref="dfdl:CommonAGQualified" />
        <xsd:attributeGroup ref="dfdl:AlignmentAGQualified" />
        <xsd:attributeGroup ref="dfdl:MarkupAGQualified" />
        <xsd:attributeGroup ref="dfdl:SimpleTypeAGQualified" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:complexType name="topLevelSimpleType">
    <xsd:complexContent>
      <xsd:restriction base="xsd:simpleType">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
          <xsd:group ref="xsd:simpleDerivation" />
        </xsd:sequence>
        <xsd:attribute name="name" use="required" type="xsd:NCName">
          <xsd:annotation>
            <xsd:documentation>
              Required at the top level
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="localSimpleType">
    <xsd:complexContent>
      <xsd:restriction base="xsd:simpleType">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
          <xsd:group ref="xsd:simpleDerivation" />
        </xsd:sequence>
        <xsd:attribute name="name" use="prohibited">
          <xsd:annotation>
            <xsd:documentation>
              Forbidden when nested
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="final" use="prohibited" />
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="simpleType" type="xsd:topLevelSimpleType"
    id="simpleType">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-simpleType" />
    </xsd:annotation>
  </xsd:element>

  <xsd:group name="facets">
    <xsd:annotation>
      <xsd:documentation>
        We should use a substitution group for facets, but
        that's ruled out because it would allow users to
        add their own, which we're not ready for yet.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="xsd:minExclusive" />
      <xsd:element ref="xsd:minInclusive" />
      <xsd:element ref="xsd:maxExclusive" />
      <xsd:element ref="xsd:maxInclusive" />
      <xsd:element ref="xsd:totalDigits" />
      <xsd:element ref="xsd:fractionDigits" />
      <xsd:element ref="xsd:length" />
      <xsd:element ref="xsd:minLength" />
      <xsd:element ref="xsd:maxLength" />
      <xsd:element ref="xsd:enumeration" />
      <!-- <xsd:element ref="xsd:whiteSpace"/> -->
      <xsd:element ref="xsd:pattern" />
    </xsd:choice>
  </xsd:group>

  <xsd:group name="simpleRestrictionModel">
    <xsd:sequence>
      <xsd:element name="simpleType" type="xsd:localSimpleType"
        minOccurs="0" />
      <xsd:group ref="xsd:facets" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:group>

  <xsd:element name="restriction" id="restriction">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation
          source="http://www.w3.org/TR/xmlschema-2/#element-restriction">
          base attribute and simpleType child are mutually
          exclusive, but one or other is required
        </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
        <xsd:extension base="xsd:annotated">
          <xsd:group ref="xsd:simpleRestrictionModel" />
          <xsd:attribute name="base" type="xsd:QName" use="optional" />
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>

  <!--
    <xsd:element name="list" id="list">
    <xsd:complexType>
    <xsd:annotation>
    <xsd:documentation
    source="http://www.w3.org/TR/xmlschema-2/#element-list">
    itemType attribute and simpleType child are mutually
    exclusive, but one or other is required
    </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
    <xsd:extension base="xsd:annotated">
    <xsd:sequence>
    <xsd:element name="simpleType" type="xsd:localSimpleType"
    minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="itemType" type="xsd:QName" use="optional"/>
    </xsd:extension>
    </xsd:complexContent>
    </xsd:complexType>
    </xsd:element>
  -->
  <xsd:element name="union" id="union">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation
          source="http://www.w3.org/TR/xmlschema-2/#element-union">
          memberTypes attribute must be non-empty or there must
          be
          at least one simpleType child
        </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
        <xsd:extension base="xsd:annotated">
          <xsd:sequence>
            <xsd:element name="simpleType" type="xsd:localSimpleType"
              minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
          <xsd:attribute name="memberTypes" use="optional">
            <xsd:simpleType>
              <xsd:list itemType="xsd:QName" />
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>

  <xsd:complexType name="facet">
    <xsd:complexContent>
      <xsd:extension base="xsd:annotated">
        <xsd:attribute name="value" use="required" />
        <xsd:attribute name="fixed" type="xsd:boolean"
          use="optional" default="false" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="noFixedFacet">
    <xsd:complexContent>
      <xsd:restriction base="xsd:facet">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
        </xsd:sequence>
        <xsd:attribute name="fixed" use="prohibited" />
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="minExclusive" id="minExclusive" type="xsd:facet">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-minExclusive" />
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="minInclusive" id="minInclusive" type="xsd:facet">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-minInclusive" />
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="maxExclusive" id="maxExclusive" type="xsd:facet">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-maxExclusive" />
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="maxInclusive" id="maxInclusive" type="xsd:facet">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-maxInclusive" />
    </xsd:annotation>
  </xsd:element>

  <xsd:complexType name="numFacet">
    <xsd:complexContent>
      <xsd:restriction base="xsd:facet">
        <xsd:sequence>
          <xsd:element ref="xsd:annotation" minOccurs="0" />
        </xsd:sequence>
        <xsd:attribute name="value" type="xsd:nonNegativeInteger"
          use="required" />
        <xsd:attributeGroup ref="xsd:anyOther" />
      </xsd:restriction>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="totalDigits" id="totalDigits">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-totalDigits" />
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="xsd:numFacet">
          <xsd:sequence>
            <xsd:element ref="xsd:annotation" minOccurs="0" />
          </xsd:sequence>
          <xsd:attribute name="value" type="xsd:positiveInteger"
            use="required" />
          <xsd:attributeGroup ref="xsd:anyOther" />
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="fractionDigits" id="fractionDigits"
    type="xsd:numFacet">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-fractionDigits" />
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="length" id="length" type="xsd:numFacet">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-length" />
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="minLength" id="minLength" type="xsd:numFacet">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-minLength" />
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="maxLength" id="maxLength" type="xsd:numFacet">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-maxLength" />
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="enumeration" id="enumeration">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-enumeration" />
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="xsd:facet">
          <xsd:attributeGroup ref="dfdlx:RepValuesAGQualified" />
          <xsd:attributeGroup ref="xsd:anyOther" />
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>

  <!--
    <xsd:element name="whiteSpace" id="whiteSpace">
    <xsd:annotation>
    <xsd:documentation
    source="http://www.w3.org/TR/xmlschema-2/#element-whiteSpace"/>
    </xsd:annotation>
    <xsd:complexType>
    <xsd:complexContent>
    <xsd:restriction base="xsd:facet">
    <xsd:sequence>
    <xsd:element ref="xsd:annotation" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="value" use="required">
    <xsd:simpleType>
    <xsd:restriction base="xsd:NMTOKEN">
    <xsd:enumeration value="preserve"/>
    <xsd:enumeration value="replace"/>
    <xsd:enumeration value="collapse"/>
    </xsd:restriction>
    </xsd:simpleType>
    </xsd:attribute>
    <xsd:attributeGroup ref="xsd:anyOther"/>
    </xsd:restriction>
    </xsd:complexContent>
    </xsd:complexType>
    </xsd:element>
  -->
  <xsd:element name="pattern" id="pattern">
    <xsd:annotation>
      <xsd:documentation
        source="http://www.w3.org/TR/xmlschema-2/#element-pattern" />
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="xsd:noFixedFacet">
          <xsd:sequence>
            <xsd:element ref="xsd:annotation" minOccurs="0" />
          </xsd:sequence>
          <xsd:attribute name="value" type="xsd:string"
            use="required" />
          <xsd:attributeGroup ref="xsd:anyOther" />
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>

</xsd:schema>
