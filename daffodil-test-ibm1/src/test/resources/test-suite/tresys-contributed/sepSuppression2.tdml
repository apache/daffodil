<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<tdml:testSuite suiteName="sequence" 
  description="Tests for separators and separator suppression."
  xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/" 
  xmlns:daf="urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:ext"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:ex="http://example.com"
  defaultImplementations="ibm daffodil"
  defaultConfig="cfg">
  
  <tdml:defineConfig name="cfg">
    <daf:tunables>
      <daf:suppressSchemaDefinitionWarnings>
        unsupportedAttributeFormDefault 
        encodingErrorPolicyError
      </daf:suppressSchemaDefinitionWarnings>
    </daf:tunables>
  </tdml:defineConfig>

  <tdml:defineSchema name="s0">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd" />

    <dfdl:format ref="ex:GeneralFormatPortable" 
      lengthKind="delimited"
      occursCountKind="implicit"/>

    <xs:element name="ptLax0" dfdl:initiator="%NL;">
      <xs:complexType>
        <xs:sequence dfdl:separator="">
          <xs:element name="record" maxOccurs="unbounded" minOccurs="0"  dfdl:terminator="%NL;%WSP*;" >
            <xs:complexType>
              <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
                <xs:element name="required1" type="xs:string" />    
                <xs:element name="potTrailing2" type="xs:string" minOccurs="0" maxOccurs="2"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </tdml:defineSchema>
    
 
  
  <tdml:unparserTestCase name="ptLax0_1u" root="ptLax0" model="s0"
    description="Test of potentially trailing groups."
    roundTrip="none">

    <tdml:document><![CDATA[
a
]]></tdml:document>   

    <tdml:infoset>
      <tdml:dfdlInfoset xmlns="http://example.com">
        <ptLax0>
         <record>
            <required1>a</required1>
          </record>
        </ptLax0>
      </tdml:dfdlInfoset>
    </tdml:infoset>

  </tdml:unparserTestCase>
  
  <tdml:unparserTestCase name="ptLax0_2u" root="ptLax0" model="s0"
    description="Test of potentially trailing groups."
    roundTrip="none">

    <tdml:document><![CDATA[
a
]]></tdml:document>   

    <tdml:infoset>
      <tdml:dfdlInfoset xmlns="http://example.com">
        <ptLax0>
         <record>
            <required1>a</required1>
            <potTrailing2/> <!-- daffodil detects this is zero length and suppresses separator for it. -->
          </record>
        </ptLax0>
      </tdml:dfdlInfoset>
    </tdml:infoset>

  </tdml:unparserTestCase>
  
  <tdml:unparserTestCase name="ptLax0_3u" root="ptLax0" model="s0"
    description="Test of potentially trailing groups."
    roundTrip="none">

    <tdml:document><![CDATA[
a,,c
]]></tdml:document>   

    <tdml:infoset>
      <tdml:dfdlInfoset xmlns="http://example.com">
        <ptLax0>
         <record>
            <required1>a</required1>
            <potTrailing2/> <!-- must not suppress sep -->
            <potTrailing2>c</potTrailing2> 
          </record>
        </ptLax0>
      </tdml:dfdlInfoset>
    </tdml:infoset>

  </tdml:unparserTestCase>
  
 <tdml:defineSchema name="s1">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd" />

    <dfdl:format ref="ex:GeneralFormatPortable" 
      lengthKind="delimited"
      occursCountKind="implicit"/>
      
    <!-- 
      for exploring when groups are 'potentially trailing' meaning their 
      separator (in enclosing sequence) might be suppressed/not-required.
     -->
    <xs:element name="ptLax" dfdl:initiator="%NL;">
      <xs:complexType>
        <xs:sequence dfdl:separator="">
          <xs:element name="record" maxOccurs="unbounded" minOccurs="0"  dfdl:terminator="%NL;%WSP*;" >
            <xs:complexType>
              <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
                <xs:element name="required1" type="xs:string" />
                <xs:sequence dfdl:separator="*" dfdl:separatorSuppressionPolicy="trailingEmpty"> 
                  <xs:element name="potTrailing2" type="xs:int" minOccurs="0" maxOccurs="3" />
                </xs:sequence>                
                <xs:element name="potTrailing3" type="xs:string" minOccurs="0"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    
  </tdml:defineSchema>
      
  <tdml:parserTestCase name="ptLax1rt" root="ptLax" model="s1"
    description="Test of potentially trailing groups."
    roundTrip="twoPass">

  <!-- should require twoPass to round trip, because unpasing won't produce the
    trailing comma.
   -->
    <tdml:document><![CDATA[
a,2,
]]></tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset xmlns="http://example.com">
        <ptLax>
          <record>
            <required1>a</required1>
            <potTrailing2>2</potTrailing2>
          </record>
        </ptLax>
      </tdml:dfdlInfoset>
    </tdml:infoset>

  </tdml:parserTestCase>
  
  <tdml:parserTestCase name="ptLax2p" root="ptLax" model="s1"
    description="Test of potentially trailing groups."
    roundTrip="none"><!-- twoPass if round tripping -->

  <!-- 
  This should require two passes, because unparse won't produce the trailing comma.
 -->
    <tdml:document><![CDATA[
a,
]]></tdml:document>   


    <tdml:infoset>
      <tdml:dfdlInfoset xmlns="http://example.com">
        <ptLax>
         <record>
            <required1>a</required1>
          </record>
        </ptLax>
      </tdml:dfdlInfoset>
    </tdml:infoset>

  </tdml:parserTestCase>
  
  <tdml:unparserTestCase name="ptLax2u_daf" root="ptLax" model="s1"
    description="Test of potentially trailing groups."
    roundTrip="none"
    implementations="daffodil">

    <tdml:document><![CDATA[
a
]]></tdml:document>   

    <tdml:infoset>
      <tdml:dfdlInfoset xmlns="http://example.com">
        <ptLax>
         <record>
            <required1>a</required1>
            <!--
              The sequence that follows is potentially trailing, and nothing
              is in it, AND it is actually trailing. So it should not generate a separator.  
             -->
          </record>
        </ptLax>
      </tdml:dfdlInfoset>
    </tdml:infoset>

  </tdml:unparserTestCase>
  
  <tdml:unparserTestCase name="ptLax2u_ibm" root="ptLax" model="s1"
    description="Test of potentially trailing groups."
    roundTrip="none"
    implementations="ibm">

    <tdml:document><![CDATA[
a
]]></tdml:document>   

    <tdml:infoset>
      <tdml:dfdlInfoset xmlns="http://example.com">
        <ptLax>
         <record>
            <required1>a</required1>
            <!--
              The sequence that follows is potentially trailing, and nothing
              is in it, AND it is actually trailing. So it should not generate a separator.  
             -->
          </record>
        </ptLax>
      </tdml:dfdlInfoset>
    </tdml:infoset>

  </tdml:unparserTestCase>
  
  
 
  <tdml:parserTestCase name="ptLax3rt" root="ptLax" model="s1"
    description="Test of potentially trailing groups.">

    <tdml:document><![CDATA[
a
]]></tdml:document>   


    <tdml:infoset>
      <tdml:dfdlInfoset xmlns="http://example.com">
        <ptLax>
         <record>
            <required1>a</required1>
          </record>
        </ptLax>
      </tdml:dfdlInfoset>
    </tdml:infoset>

  </tdml:parserTestCase> 
</tdml:testSuite>
