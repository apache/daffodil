<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<tdml:testSuite suiteName="nested-separator-delimited"
  description="Tests separation and nested sequences." xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" 
  xmlns:ex="http://example.com" xmlns="http://example.com"
  defaultImplementations="ibm daffodil">


  <tdml:defineSchema name="baseline">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" occursCountKind="parsed" 
      encodingErrorPolicy="error"/>

    <xs:element name="e1" dfdl:lengthKind="implicit"
      dfdl:terminator=".">
      <xs:complexType>
        <xs:sequence dfdl:separator=";" dfdl:terminator=";">
          <xs:element name="s1" type="xs:int"
            dfdl:lengthKind="delimited" minOccurs="0"
            dfdl:occursCountKind="parsed" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
  </tdml:defineSchema>
  
  <tdml:parserTestCase name="baseline" root="e1"
    model="baseline" description="Baseline. Basic Separators"
    implementations="daffodil">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[5;6;7;8;.]]></tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1>
          <s1>5</s1>
          <s1>6</s1>
          <s1>7</s1>
          <s1>8</s1>
        </e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <tdml:defineSchema name="baseline_ibm">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" occursCountKind="parsed" 
      encodingErrorPolicy="error"/>
    
    <xs:element name="e1a" dfdl:lengthKind="implicit"
      dfdl:terminator=".">
      <xs:complexType>
        <xs:sequence dfdl:separator=";" dfdl:terminator=";">
          <xs:element name="s1" type="xs:int"
            dfdl:lengthKind="delimited" minOccurs="0"
            dfdl:occursCountKind="parsed" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>
  
  
  <tdml:parserTestCase name="baseline_ibm" root="e1a"
    model="baseline_ibm" description="Baseline. Basic Separators"
    implementations="ibm">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[5;6;7;8;.]]></tdml:documentPart>
    </tdml:document>
    
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1a>
          <s1>5</s1>
          <s1>6</s1>
          <s1>7</s1>
          <s1>8</s1>
        </e1a>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    
    <tdml:warnings>
      <tdml:warning>separator</tdml:warning>
      <tdml:warning>terminator</tdml:warning>
    </tdml:warnings>
  </tdml:parserTestCase>
  


  <tdml:defineSchema name="basicNest">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" occursCountKind="parsed" 
      encodingErrorPolicy="error"/>

    <xs:element name="e1" dfdl:lengthKind="implicit"
      dfdl:terminator=".">
      <xs:complexType>
        <xs:sequence dfdl:separator=";" dfdl:terminator="!">
          <xs:element name="s2" dfdl:lengthKind="implicit"
            minOccurs="0" maxOccurs="unbounded" dfdl:occursCountKind="parsed">
            <xs:complexType>
              <xs:sequence dfdl:separator=","
                dfdl:terminator="?">
                <xs:element name="s1" type="xs:int"
                  dfdl:lengthKind="delimited" minOccurs="0"
                  dfdl:occursCountKind="parsed" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:parserTestCase name="basicNest" root="e1"
    model="basicNest" description="Nested sequences, terminators make every transition clear.">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[5,6?;7,8?!.]]></tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1>
          <s2>
            <s1>5</s1>
            <s1>6</s1>
          </s2>
          <s2>
            <s1>7</s1>
            <s1>8</s1>
          </s2>
        </e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="basicNest2">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" occursCountKind="parsed" />

    <xs:element name="e1" dfdl:lengthKind="implicit"
      dfdl:terminator=".">
      <xs:complexType>
        <xs:sequence dfdl:separator=";">
          <xs:element name="s2" dfdl:lengthKind="implicit"
            minOccurs="0" maxOccurs="unbounded" dfdl:occursCountKind="parsed">
            <xs:complexType>
              <xs:sequence dfdl:separator=",">
                <xs:element name="s1" type="xs:int"
                  dfdl:lengthKind="delimited" minOccurs="0"
                  dfdl:occursCountKind="parsed" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:parserTestCase name="basicNest2" root="e1"
    model="basicNest2" description="Nested sequences, with only separators.">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[5,6;7,8.]]></tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1>
          <s2>
            <s1>5</s1>
            <s1>6</s1>
          </s2>
          <s2>
            <s1>7</s1>
            <s1>8</s1>
          </s2>
        </e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>



  <tdml:defineSchema name="nest1">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" occursCountKind="parsed" />

    <xs:element name="nest1" dfdl:lengthKind="implicit"
      dfdl:terminator="!">
      <xs:complexType>
        <xs:sequence dfdl:separator=";">
          <xs:sequence dfdl:separator=",">
            <xs:element name="a" type="xs:int" minOccurs="0"
              maxOccurs="unbounded" dfdl:occursCountKind="parsed"
              dfdl:lengthKind="delimited" />
          </xs:sequence>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </tdml:defineSchema>

  <tdml:parserTestCase name="nest1" root="nest1"
    model="nest1" description="Unambiguous nested separators, no terminators.">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[0,1,2;3,4,5;6,7;8;9!]]></tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <nest1>
          <a>0</a>
          <a>1</a>
          <a>2</a>
          <a>3</a>
          <a>4</a>
          <a>5</a>
          <a>6</a>
          <a>7</a>
          <a>8</a>
          <a>9</a>
        </nest1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>


  <tdml:defineSchema name="nest2">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" occursCountKind="parsed" />
    <!-- test the issue of ambiguous delimiters, which requires the parser
      to keep track of what's got priority over what else. (i.e., that inner
      wins) -->
    <xs:element name="nest2" dfdl:lengthKind="implicit"
      dfdl:terminator="ddd">
      <xs:complexType>
        <xs:sequence dfdl:separator="; ddd">
          <xs:element name="b" minOccurs="0" maxOccurs="unbounded"
            dfdl:occursCountKind="parsed" dfdl:lengthKind="implicit">
            <xs:complexType>
              <xs:sequence dfdl:separator=", ddd">
                <xs:element name="a" type="xs:int" minOccurs="0"
                  maxOccurs="unbounded" dfdl:occursCountKind="parsed"
                  dfdl:lengthKind="delimited" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </tdml:defineSchema>

  <tdml:parserTestCase name="nest2" root="nest2"
    model="nest2" description="Nested separators with same separator at multiple levels">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[0ddd1,2;3ddd4ddd5;6ddd7;8;9!]]></tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <nest2>
          <b>
            <a>0</a>
            <a>1</a>
            <a>2</a>
          </b>
          <b>
            <a>3</a>
            <a>4</a>
            <a>5</a>
          </b>
          <b>
            <a>6</a>
            <a>7</a>
          </b>
          <b>
            <a>8</a>
          </b>
          <b>
            <a>9</a>
          </b>
        </nest2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="nest3">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" occursCountKind="parsed" />
    <!-- test the issue of shared prefixes among the delimiters. This makes
      it challenging to determine longest match, as several contenders must
      be
      kept in consideration as more characters are parsed until it becomes
      unambiguous. -->
    <xs:element name="nest3" dfdl:lengthKind="implicit"
      dfdl:terminator="! ddd">
      <xs:complexType>
        <xs:sequence dfdl:separator="; dd">
          <xs:element name="b" minOccurs="0" maxOccurs="unbounded"
            dfdl:occursCountKind="parsed" dfdl:lengthKind="implicit">
            <xs:complexType>
              <xs:sequence dfdl:separator=", d">
                <xs:element name="a" type="xs:int" minOccurs="0"
                  maxOccurs="unbounded" dfdl:occursCountKind="parsed"
                  dfdl:lengthKind="delimited" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </tdml:defineSchema>

  <tdml:parserTestCase name="nest3" root="nest3"
    model="nest3"
    description="Nested separators with separators that share prefixes at multiple levels">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[0d1d2dd3d4d5dd6d7dd8dd9ddd]]></tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <nest3>
          <b>
            <a>0</a>
            <a>1</a>
            <a>2</a>
          </b>
          <b>
            <a>3</a>
            <a>4</a>
            <a>5</a>
          </b>
          <b>
            <a>6</a>
            <a>7</a>
          </b>
          <b>
            <a>8</a>
          </b>
          <b>
            <a>9</a>
          </b>
        </nest3>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

</tdml:testSuite>
