<?xml version="1.0" encoding="UTF-8"?> 

<xs:schema
  targetNamespace="http://example.com"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:ex="http://example.com"
  xmlns="http://example.com"
  elementFormDefault="unqualified"> 

  <xs:include schemaLocation="edu/illinois/ncsa/daffodil/xsd/built-in-formats.xsd"/>

  <xs:annotation> 
    <xs:appinfo source="http://www.ogf.org/dfdl/" >
      <dfdl:format ref="ex:daffodilTest1" representation="text" />
    </xs:appinfo>
  </xs:annotation>

  <xs:element name="b" type="xs:string" dfdl:length="1" dfdl:lengthKind="explicit" dfdl:lengthUnits="bytes" />
  
  <!-- 'a' is global, so this is in the ex namespce -->
  <xs:element name="a">
    <xs:complexType>
      <xs:sequence>
        <!-- references a global, so 'b' is in the ex namespace -->
        <xs:element ref="ex:b" />
        <!-- elementFormDefault="unqualified" and 'c' is local, so it is in NoNamespace -->
        <xs:element name="c" type="xs:string" dfdl:length="1" dfdl:lengthKind="explicit" dfdl:lengthUnits="bytes" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- this should always work, regardless of unqualifiedPathStepPolicy -->
  <xs:element name="test_01">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ex:a" />
        <xs:element name="s" type="xs:string" dfdl:inputValueCalc="{ ../ex:a/ex:b }" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- this should only work with defaultNamespace and preferDefaultNamespace -->
  <xs:element name="test_02">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ex:a" />
        <xs:element name="s" type="xs:string" dfdl:inputValueCalc="{ ../ex:a/b }" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- this should always fail, regardless of unqualifiedPathStepPolicy -->
  <xs:element name="test_03">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ex:a" />
        <xs:element name="s" type="xs:string" dfdl:inputValueCalc="{ ../ex:a/ex:c }" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- this should only work with noNamespace and preferDefaultNamespace -->
  <xs:element name="test_04">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ex:a" />
        <xs:element name="s" type="xs:string" dfdl:inputValueCalc="{ ../ex:a/c }" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

</xs:schema>
