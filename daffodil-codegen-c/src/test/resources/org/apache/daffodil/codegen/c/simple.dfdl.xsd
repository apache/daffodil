<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<schema
  targetNamespace="urn:simple"
  version="2.1.1"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:net="urn:network/format"
  xmlns:si="urn:simple"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns="http://www.w3.org/2001/XMLSchema">

  <!-- Network order big endian format (net:format) -->

  <import namespace="urn:network/format" schemaLocation="network/format.dfdl.xsd"/>
  <annotation>
    <appinfo source="http://www.ogf.org/dfdl/">
      <dfdl:format ref="net:format"/>
    </appinfo>
  </annotation>

  <!-- Simple type root elements (pick only one) -->

  <element name="simple-boolean" type="si:simple-boolean"/>
  <element name="simple-byte" type="si:simple-byte"/>
  <element name="simple-double" type="si:simple-double"/>
  <element name="simple-float" type="si:simple-float"/>
  <element name="simple-hexBinary" type="si:simple-hexBinary"/>
  <element name="simple-hexBinaryPrefixed" type="si:simple-hexBinaryPrefixed"/>
  <element name="simple-int" type="si:simple-int"/>
  <element name="simple-integer" type="si:simple-integer"/>
  <element name="simple-long" type="si:simple-long"/>
  <element name="simple-nonNegativeInteger" type="si:simple-nonNegativeInteger"/>
  <element name="simple-short" type="si:simple-short"/>
  <element name="simple-unsignedByte" type="si:simple-unsignedByte"/>
  <element name="simple-unsignedInt" type="si:simple-unsignedInt"/>
  <element name="simple-unsignedLong" type="si:simple-unsignedLong"/>
  <element name="simple-unsignedShort" type="si:simple-unsignedShort"/>

  <!-- Enumerations of simple type root elements (pick only one) -->

  <!-- DFDL specification does not allow enumerations of boolean types -->
  <element name="enum-byte" type="si:enum-byte"/>
  <element name="enum-double" type="si:enum-double"/>
  <element name="enum-float" type="si:enum-float"/>
  <element name="enum-hexBinary" type="si:enum-hexBinary"/>
  <element name="enum-hexBinaryPrefixed" type="si:enum-hexBinaryPrefixed"/>
  <element name="enum-int" type="si:enum-int"/>
  <element name="enum-integer" type="si:enum-integer"/>
  <element name="enum-long" type="si:enum-long"/>
  <element name="enum-nonNegativeInteger" type="si:enum-nonNegativeInteger"/>
  <element name="enum-short" type="si:enum-short"/>
  <element name="enum-unsignedByte" type="si:enum-unsignedByte"/>
  <element name="enum-unsignedInt" type="si:enum-unsignedInt"/>
  <element name="enum-unsignedLong" type="si:enum-unsignedLong"/>
  <element name="enum-unsignedShort" type="si:enum-unsignedShort"/>

  <!-- Ranges of simple type root elements (pick only one) -->

  <!-- DFDL specification does not allow ranges of boolean types -->
  <element name="range-byte" type="si:range-byte"/>
  <element name="range-double" type="si:range-double"/>
  <element name="range-float" type="si:range-float"/>
  <!-- DFDL specification does not allow ranges of hexBinary types -->
  <element name="range-int" type="si:range-int"/>
  <element name="range-integer" type="si:range-integer"/>
  <element name="range-long" type="si:range-long"/>
  <element name="range-nonNegativeInteger" type="si:range-nonNegativeInteger"/>
  <element name="range-short" type="si:range-short"/>
  <element name="range-unsignedByte" type="si:range-unsignedByte"/>
  <element name="range-unsignedInt" type="si:range-unsignedInt"/>
  <element name="range-unsignedLong" type="si:range-unsignedLong"/>
  <element name="range-unsignedShort" type="si:range-unsignedShort"/>

  <!-- All-in-one root element (pick when you want everything) -->

  <element name="simple">
    <xs:complexType>
      <sequence>
        <!-- All simple types -->
        <element name="simple-boolean" type="si:simple-boolean"/>
        <element name="simple-byte" type="si:simple-byte"/>
        <element name="simple-double" type="si:simple-double"/>
        <element name="simple-float" type="si:simple-float"/>
        <element name="simple-hexBinary" type="si:simple-hexBinary"/>
        <element name="simple-hexBinaryPrefixed" type="si:simple-hexBinaryPrefixed"/>
        <element name="simple-int" type="si:simple-int"/>
        <element name="simple-integer" type="si:simple-integer"/>
        <element name="simple-long" type="si:simple-long"/>
        <element name="simple-nonNegativeInteger" type="si:simple-nonNegativeInteger"/>
        <element name="simple-short" type="si:simple-short"/>
        <element name="simple-unsignedByte" type="si:simple-unsignedByte"/>
        <element name="simple-unsignedInt" type="si:simple-unsignedInt"/>
        <element name="simple-unsignedLong" type="si:simple-unsignedLong"/>
        <element name="simple-unsignedShort" type="si:simple-unsignedShort"/>
        <!-- All enumerations of simple types -->
        <element name="enum-byte" type="si:enum-byte"/>
        <element name="enum-double" type="si:enum-double"/>
        <element name="enum-float" type="si:enum-float"/>
        <element name="enum-hexBinary" type="si:enum-hexBinary"/>
        <element name="enum-hexBinaryPrefixed" type="si:enum-hexBinaryPrefixed"/>
        <element name="enum-int" type="si:enum-int"/>
        <element name="enum-integer" type="si:enum-integer"/>
        <element name="enum-long" type="si:enum-long"/>
        <element name="enum-nonNegativeInteger" type="si:enum-nonNegativeInteger"/>
        <element name="enum-short" type="si:enum-short"/>
        <element name="enum-unsignedByte" type="si:enum-unsignedByte"/>
        <element name="enum-unsignedInt" type="si:enum-unsignedInt"/>
        <element name="enum-unsignedLong" type="si:enum-unsignedLong"/>
        <element name="enum-unsignedShort" type="si:enum-unsignedShort"/>
        <!-- All ranges of simple types -->
        <element name="range-byte" type="si:range-byte"/>
        <element name="range-double" type="si:range-double"/>
        <element name="range-float" type="si:range-float"/>
        <element name="range-int" type="si:range-int"/>
        <element name="range-integer" type="si:range-integer"/>
        <element name="range-long" type="si:range-long"/>
        <element name="range-nonNegativeInteger" type="si:range-nonNegativeInteger"/>
        <element name="range-short" type="si:range-short"/>
        <element name="range-unsignedByte" type="si:range-unsignedByte"/>
        <element name="range-unsignedInt" type="si:range-unsignedInt"/>
        <element name="range-unsignedLong" type="si:range-unsignedLong"/>
        <element name="range-unsignedShort" type="si:range-unsignedShort"/>
      </sequence>
    </xs:complexType>
  </element>

  <!-- Simple types without any schema facets -->

  <simpleType name="simple-boolean">
    <restriction base="xs:boolean"/>
  </simpleType>
  <simpleType name="simple-byte">
    <restriction base="xs:byte"/>
  </simpleType>
  <simpleType name="simple-double">
    <restriction base="xs:double"/>
  </simpleType>
  <simpleType name="simple-float">
    <restriction base="xs:float"/>
  </simpleType>
  <simpleType name="simple-hexBinary"
              dfdl:length="4"
              dfdl:lengthKind="explicit"
              dfdl:lengthUnits="bytes">
    <restriction base="xs:hexBinary"/>
  </simpleType>
  <simpleType name="simple-hexBinaryPrefixed"
              dfdl:prefixLengthType="si:prefixedCount"
              dfdl:lengthKind="prefixed"
              dfdl:lengthUnits="bytes">
    <restriction base="xs:hexBinary"/>
  </simpleType>
  <simpleType name="simple-int">
    <restriction base="xs:int"/>
  </simpleType>
  <simpleType name="simple-integer"
              dfdl:length="4"
              dfdl:lengthKind="explicit"
              dfdl:lengthUnits="bytes">
    <restriction base="xs:integer"/>
  </simpleType>
  <simpleType name="simple-long">
    <restriction base="xs:long"/>
  </simpleType>
  <simpleType name="simple-nonNegativeInteger"
              dfdl:length="4"
              dfdl:lengthKind="explicit"
              dfdl:lengthUnits="bytes">
    <restriction base="xs:nonNegativeInteger"/>
  </simpleType>
  <simpleType name="simple-short">
    <restriction base="xs:short"/>
  </simpleType>
  <simpleType name="simple-unsignedByte">
    <restriction base="xs:unsignedByte"/>
  </simpleType>
  <simpleType name="simple-unsignedInt">
    <restriction base="xs:unsignedInt"/>
  </simpleType>
  <simpleType name="simple-unsignedLong">
    <restriction base="xs:unsignedLong"/>
  </simpleType>
  <simpleType name="simple-unsignedShort">
    <restriction base="xs:unsignedShort"/>
  </simpleType>

  <!-- Enumerations of simple types -->

  <simpleType name="enum-byte">
    <restriction base="si:simple-byte">
      <enumeration value="1"/>
      <enumeration value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-double">
    <restriction base="si:simple-double">
      <enumeration value="1.0"/>
      <enumeration value="2.0"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-float">
    <restriction base="si:simple-float">
      <enumeration value="1.0"/>
      <enumeration value="2.0"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-hexBinary">
    <restriction base="si:simple-hexBinary">
      <enumeration value="11223344"/>
      <enumeration value="AABBCCDD"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-hexBinaryPrefixed">
    <restriction base="si:simple-hexBinaryPrefixed">
      <enumeration value="11223344"/>
      <enumeration value="AABBCCDD"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-int">
    <restriction base="si:simple-int">
      <enumeration value="1"/>
      <enumeration value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-integer">
    <restriction base="si:simple-integer">
      <enumeration value="1"/>
      <enumeration value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-long">
    <restriction base="si:simple-long">
      <enumeration value="1"/>
      <enumeration value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-nonNegativeInteger">
    <restriction base="si:simple-nonNegativeInteger">
      <enumeration value="1"/>
      <enumeration value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-short">
    <restriction base="si:simple-short">
      <enumeration value="1"/>
      <enumeration value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-unsignedByte">
    <restriction base="si:simple-unsignedByte">
      <enumeration value="1"/>
      <enumeration value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-unsignedInt">
    <restriction base="si:simple-unsignedInt">
      <enumeration value="1"/>
      <enumeration value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-unsignedLong">
    <restriction base="si:simple-unsignedLong">
      <enumeration value="1"/>
      <enumeration value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="enum-unsignedShort">
    <restriction base="si:simple-unsignedShort">
      <enumeration value="1"/>
      <enumeration value="2"/>
    </restriction>
  </simpleType>

  <!-- Ranges of simple types -->

  <simpleType name="range-byte">
    <restriction base="si:simple-byte">
      <minExclusive value="0"/>
      <maxInclusive value="100"/>
    </restriction>
  </simpleType>
  <simpleType name="range-double">
    <restriction base="si:simple-double">
      <minInclusive value="1.0"/>
      <maxInclusive value="2.0"/>
    </restriction>
  </simpleType>
  <simpleType name="range-float">
    <restriction base="si:simple-float">
      <minExclusive value="0.0"/>
      <maxExclusive value="1.0"/>
    </restriction>
  </simpleType>
  <simpleType name="range-int">
    <restriction base="si:simple-int">
      <minInclusive value="1"/>
      <maxExclusive value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="range-integer">
    <restriction base="si:simple-integer">
      <minInclusive value="1"/>
      <maxInclusive value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="range-long">
    <restriction base="si:simple-long">
      <minInclusive value="1"/>
      <maxInclusive value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="range-nonNegativeInteger">
    <restriction base="si:simple-nonNegativeInteger">
      <minInclusive value="1"/>
      <maxInclusive value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="range-short">
    <restriction base="si:simple-short">
      <minInclusive value="1"/>
      <maxInclusive value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="range-unsignedByte">
    <restriction base="si:simple-unsignedByte">
      <minInclusive value="1"/>
      <maxInclusive value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="range-unsignedInt">
    <restriction base="si:simple-unsignedInt">
      <minInclusive value="1"/>
      <maxInclusive value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="range-unsignedLong">
    <restriction base="si:simple-unsignedLong">
      <minInclusive value="1"/>
      <maxInclusive value="2"/>
    </restriction>
  </simpleType>
  <simpleType name="range-unsignedShort">
    <restriction base="si:simple-unsignedShort">
      <minInclusive value="1"/>
      <maxInclusive value="2"/>
    </restriction>
  </simpleType>

  <!-- Size of prefixed count used by prefixed hexBinary elements -->

  <simpleType name="prefixedCount">
    <restriction base="xs:unsignedShort"/>
  </simpleType>

</schema>
