<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<tdml:testSuite suiteName="ProcessingErrorTests"
  description="Section 2.3 - Processing Errors" xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ex="http://example.com"
  defaultRoundTrip="true">

  <!-- ===================================================================== 
    Schemas ======================================================================= -->

  <!--
    Schema name: upaFailure
    Purpose: This schema does not adhere to the Unique Particule Attribution 
    schema constraint
  -->

  <tdml:defineSchema name="upaFailure">

    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" initiator=""
      terminator="" textBidi="no" floating="no" encoding="ascii"
      byteOrder="bigEndian" alignment="1" alignmentUnits="bytes"
      fillByte="f" occursCountKind="implicit"
      truncateSpecifiedLengthString="no" ignoreCase="no" representation="text"
      lengthKind="delimited" nilValueDelimiterPolicy="both"
      emptyValueDelimiterPolicy="none"
      documentFinalTerminatorCanBeMissing="yes" initiatedContent="no"
      separatorSuppressionPolicy="never" separatorPosition="infix"/>

    <xs:element name="root">
      <xs:complexType>
        <xs:choice>
          <xs:element name="a1" type="xs:string"
            dfdl:lengthKind="explicit" dfdl:length="{ 4 }" />
          <xs:element name="a1">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="a1" type="xs:string"
                  dfdl:lengthKind="delimited" minOccurs="0"/>
                <xs:element name="a1" type="xs:string"
                  dfdl:lengthKind="delimited" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:complexType>
    </xs:element>

    <xs:element name="root2">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="a1" type="xs:string"
            dfdl:lengthKind="explicit" dfdl:length="1" minOccurs="1"
            maxOccurs="4" />
          <xs:element name="a1" type="xs:string" minOccurs="2"
            maxOccurs="3" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>
  
  <tdml:defineSchema name="delimiterNotFound">

    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" initiator=""
      terminator="" textBidi="no" floating="no" encoding="utf-8"
      byteOrder="bigEndian" alignment="1" alignmentUnits="bytes"
      fillByte="f" occursCountKind="implicit" lengthUnits="characters"
      truncateSpecifiedLengthString="no" ignoreCase="no" representation="text"
      lengthKind="delimited" nilValueDelimiterPolicy="both"
      emptyValueDelimiterPolicy="none"
      documentFinalTerminatorCanBeMissing="yes" initiatedContent="no"
      separatorSuppressionPolicy="never" separatorPosition="infix" />
  
    <xs:element name="seq01">
      <xs:complexType>
        <xs:sequence dfdl:separator=",">
          <xs:element name="e1" dfdl:lengthKind="explicit" dfdl:length="5" type="xs:string" minOccurs="1"/>
          <xs:element name="e2" dfdl:lengthKind="delimited" type="xs:int" minOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  
  </tdml:defineSchema>
  
  <!--
    Test name: delimiterNotFound01
       Schema: delimiterNotFound
         Root: seq01
      Purpose: This test demonstrates that when a delimiter is expected but is not found, the diagnostic
               message shows what data is found instead of the delimiter.
  -->

  <tdml:parserTestCase name="delimiterNotFound01" root="seq01"
    model="delimiterNotFound" description="">

    <tdml:document>
      <tdml:documentPart type="text">strng11</tdml:documentPart>
    </tdml:document>

    <tdml:errors>
      <tdml:error>Parse Error</tdml:error>
      <tdml:error>Delimiter not found!  Was looking for (,) but found "1" instead</tdml:error>
    </tdml:errors>

  </tdml:parserTestCase>

  <!--
    Test name: upaInvalidSchema
    Schema: upaFailure
    Purpose: This document uses an invalid schema and should fail.
  -->

  <tdml:parserTestCase name="upaInvalidSchema" root="root"
    model="upaFailure" description="Section 2 - Schema Component Constraint - DFDL-2-005R5-1">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[123]]></tdml:documentPart>
    </tdml:document>

    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>Multiple elements with name 'a1', with different types, appear in the model group</tdml:error>
    </tdml:errors>

  </tdml:parserTestCase>

  <!--
    Test name: upaInvalidSchema2
    Schema: upaFailure
    Purpose: This document uses an invalid schema and should fail.
  -->

  <tdml:parserTestCase name="upaInvalidSchema2"
    root="root2" model="upaFailure"
    description="Section 2 - Schema Component Constraint - DFDL-2-005R5-1">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[123gj]]></tdml:documentPart>
    </tdml:document>
    
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>Multiple elements with name 'a1', with different types, appear in the model group</tdml:error>
    </tdml:errors>

  </tdml:parserTestCase>

</tdml:testSuite>
