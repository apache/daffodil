<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<testSuite
  suiteName="pv"
  description="textNumberPattern with P and V"
  xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData"
  xmlns="http://www.ibm.com/xmlns/dfdl/testData"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:ex="http://example.com"
  xmlns:tns="http://example.com"
  defaultRoundTrip="true">

  <tdml:defineSchema name="s1" xmlns="http://www.w3.org/2001/XMLSchema"
                     elementFormDefault="unqualified" useDefaultNamespace="false">
    <include schemaLocation="/org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format
      ref="ex:GeneralFormat"
      representation="text"
      lengthKind="delimited"
      decimalSigned="yes"
      encoding="ISO-8859-1"
      textNumberCheckPolicy="lax"
      textNumberPadCharacter="0"
      textNumberJustification="right"
      textStandardZeroRep="zero Z%WSP*;Z%WSP*;Z"
      textStandardNaNRep="NaN"
      textStandardInfinityRep="Inf"
      textNumberRep="standard"
      lengthUnits="characters"/>

    <element name="money" type="xs:decimal" dfdl:textNumberPattern="######0V00;-######0V00"/>
    <element name="money2" type="xs:decimal" dfdl:textNumberPattern="[######0V00];(######0V00)"/>
    <element name="money3" type="xs:decimal" dfdl:textNumberPattern="[######0V00];(#)"/>


    <element name="bad01" type="xs:decimal" dfdl:textNumberPattern=";-######0V00"/>
    <element name="bad02" type="xs:decimal" dfdl:textNumberPattern="######0V0#"/>
    <element name="bad03" type="xs:decimal" dfdl:textNumberPattern="##0###0V0#"/>

    <!--
    Should produce warning that negative pattern and positive pattern are not matching
    -->
    <element name="warn04" type="xs:decimal" dfdl:textNumberPattern="#0V00;-###"/>

    <element name="float" type="xs:float" dfdl:textNumberPattern="##0V00;-##0V00"/>
    <element name="double" type="xs:double" dfdl:textNumberPattern="##0V00;-##0V00"/>

    <element name="byte" type="xs:byte" dfdl:textNumberPattern="0V0"/>


    <element name="pOnLeft" type="xs:decimal" dfdl:textNumberPattern="PP000;-PP000"/>

    <element name="pOnRight" type="xs:decimal" dfdl:textNumberPattern="##0PP+;##0PP-"/>

  </tdml:defineSchema>

  <parserTestCase name="ppattern_01" root="pOnLeft" model="s1">
    <document>123</document>
    <infoset>
      <dfdlInfoset>
        <ex:pOnLeft>0.00123</ex:pOnLeft>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="ppattern_02" root="pOnRight" model="s1">
    <document>123-</document>
    <infoset>
      <dfdlInfoset>
        <ex:pOnRight>-12300</ex:pOnRight>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>


  <parserTestCase name="vpattern_01" root="money" model="s1">
    <document>999999999</document>
    <infoset>
      <dfdlInfoset>
        <ex:money>9999999.99</ex:money>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_02" root="money" model="s1"
    roundTrip="twoPass">
    <!-- plus sign not recreated on output -->
    <document>+999999999</document>
    <infoset>
      <dfdlInfoset>
        <ex:money>9999999.99</ex:money>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_03" root="money" model="s1">
    <document>-999999999</document>
    <infoset>
      <dfdlInfoset>
        <ex:money>-9999999.99</ex:money>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_04" root="money" model="s1">
    <document>-999</document>
    <infoset>
      <dfdlInfoset>
        <ex:money>-9.99</ex:money>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_05" root="money2" model="s1">
    <document>[999]</document>
    <infoset>
      <dfdlInfoset>
        <ex:money2>9.99</ex:money2>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_06" root="money2" model="s1">
    <document>(999)</document>
    <infoset>
      <dfdlInfoset>
        <ex:money2>-9.99</ex:money2>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_07" root="money3" model="s1">
    <document>(999)</document>
    <infoset>
      <dfdlInfoset>
        <ex:money3>-9.99</ex:money3>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_08" root="money" model="s1">
    <document>9223372036854775808</document>
    <infoset>
      <dfdlInfoset>
        <ex:money>92233720368547758.08</ex:money>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_09" root="money" model="s1">
    <document>99.99</document>
    <errors>
      <error>Parse Error</error>
      <error>Unable to parse</error>
      <error>xs:decimal</error>
    </errors>
  </parserTestCase>

  <parserTestCase name="vpattern_zero" root="money" model="s1">
    <document>zero</document>
    <infoset>
      <dfdlInfoset>
        <ex:money>0</ex:money>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_ZZZ" root="money" model="s1" roundTrip="twoPass">
    <document>Z Z Z</document>
    <infoset>
      <dfdlInfoset>
        <ex:money>0</ex:money>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_float" root="float" model="s1">
    <document>123</document>
    <infoset>
      <dfdlInfoset>
        <ex:float>1.23</ex:float>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_double" root="double" model="s1">
    <document>123</document>
    <infoset>
      <dfdlInfoset>
        <ex:double>1.23</ex:double>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_float_NaN" root="float" model="s1">
    <document>NaN</document>
    <infoset>
      <dfdlInfoset>
        <ex:float>NaN</ex:float>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_double_NaN" root="double" model="s1">
    <document>NaN</document>
    <infoset>
      <dfdlInfoset>
        <ex:double>NaN</ex:double>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_float_Inf" root="float" model="s1">
    <document>Inf</document>
    <infoset>
      <dfdlInfoset>
        <ex:float>INF</ex:float>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_double_Inf" root="double" model="s1">
    <document>Inf</document>
    <infoset>
      <dfdlInfoset>
        <ex:double>INF</ex:double>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="vpattern_bad_01" root="bad01" model="s1">
    <document>999999999</document>
    <errors>
      <error>textNumberPattern</error>
      <error>positive part of the dfdl:textNumberPattern is mandatory</error>
    </errors>
  </parserTestCase>

  <parserTestCase name="vpattern_bad_02" root="bad02" model="s1">
    <document>999999999</document>
    <errors>
      <error>textNumberPattern</error>
      <error>'#', then digits 0-9 then 'V' then digits 0-9</error>
    </errors>
  </parserTestCase>

  <parserTestCase name="vpattern_bad_03" root="bad03" model="s1">
    <document>999999999</document>
    <errors>
      <error>textNumberPattern</error>
      <error>'#', then digits 0-9 then 'V' then digits 0-9</error>
    </errors>
  </parserTestCase>

  <parserTestCase name="vpattern_warn_04" root="warn04" model="s1">
    <document>999999999</document>
    <infoset>
      <dfdlInfoset>
        <ex:warn04>9999999.99</ex:warn04>
      </dfdlInfoset>
    </infoset>
    <warnings>
      <warning>textNumberPattern</warning>
      <warning>negative numeric part</warning>
      <warning>###</warning>
      <warning>#0V00</warning>
    </warnings>
  </parserTestCase>

  <parserTestCase name="float_vpattern_01" root="float" model="s1">
    <document>99999</document>
    <infoset>
      <dfdlInfoset>
        <ex:float>999.99</ex:float>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="double_vpattern_01" root="double" model="s1">
    <document>99999</document>
    <infoset>
      <dfdlInfoset>
        <ex:double>999.99</ex:double>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="bad_byte_vpattern_01" root="byte" model="s1">
    <document>99</document>
    <errors>
      <error>textNumberPattern</error>
      <error>xs:double</error>
      <error>xs:float</error>
      <error>xs:decimal</error>
      <error>xs:byte</error>
    </errors>
  </parserTestCase>


  <tdml:defineSchema name="zoned1" xmlns="http://www.w3.org/2001/XMLSchema"
                     elementFormDefault="unqualified" useDefaultNamespace="false">
    <include schemaLocation="/org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format
      ref="ex:GeneralFormat"
      representation="text"
      lengthKind="delimited"
      decimalSigned="yes"
      encoding="ISO-8859-1"
      textNumberCheckPolicy="lax"
      textNumberPadCharacter="0"
      textNumberJustification="right"
      textNumberRep="zoned"
      textZonedSignStyle="asciiStandard"
      lengthUnits="characters"/>

    <element name="money" type="xs:decimal" dfdl:textNumberPattern="+0000000V00"/>
    <element name="money2" type="xs:decimal" dfdl:textNumberPattern="0000000V00+"/>

    <element name="bad01" type="xs:decimal" dfdl:textNumberPattern=";-######0V00"/>
    <element name="bad02" type="xs:decimal" dfdl:textNumberPattern="######0V0#"/>
    <element name="bad03" type="xs:decimal" dfdl:textNumberPattern="##0###0V0#"/>

    <element name="float" type="xs:float" dfdl:textNumberPattern="##0V00"/>
    <element name="double" type="xs:double" dfdl:textNumberPattern="##0V00"/>

  </tdml:defineSchema>

  <parserTestCase name="zoned_vpattern_01" root="money" model="zoned1">
    <document>999999999</document>
    <infoset>
      <dfdlInfoset>
        <ex:money>9999999.99</ex:money>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="zoned_vpattern_02" root="money" model="zoned1">
    <document>y99999999</document>
    <infoset>
      <dfdlInfoset>
        <ex:money>-9999999.99</ex:money>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="zoned_vpattern_03" root="money2" model="zoned1">
    <document>999999999</document>
    <infoset>
      <dfdlInfoset>
        <ex:money2>9999999.99</ex:money2>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="zoned_vpattern_03b" root="money2" model="zoned1">
    <document>99999999y</document>
    <infoset>
      <dfdlInfoset>
        <ex:money2>-9999999.99</ex:money2>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="zoned_vpattern_04" root="money" model="zoned1">
    <document>y99</document>
    <infoset>
      <dfdlInfoset>
        <ex:money>-9.99</ex:money>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="zoned_vpattern_05" root="money2" model="zoned1">
    <document>99y</document>
    <infoset>
      <dfdlInfoset>
        <ex:money2>-9.99</ex:money2>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <parserTestCase name="zoned_vpattern_bad_01" root="bad01" model="zoned1">
    <document>999999999</document>
    <errors>
      <error>textNumberPattern</error>
      <error>contain only digits 0-9</error>
    </errors>
  </parserTestCase>

  <parserTestCase name="zoned_vpattern_bad_02" root="bad02" model="zoned1">
    <document>999999999</document>
    <errors>
      <error>textNumberPattern</error>
      <error>contain only digits 0-9</error>
    </errors>
  </parserTestCase>

  <parserTestCase name="zoned_vpattern_bad_03" root="bad03" model="zoned1">
    <document>999999999</document>
    <errors>
      <error>textNumberPattern</error>
      <error>contain only digits 0-9</error>
    </errors>
  </parserTestCase>

  <parserTestCase name="zoned_float_vpattern_01" root="float" model="zoned1">
    <document>99999</document>
    <errors>
      <error>cannot be used with xs:float</error>
    </errors>
  </parserTestCase>

  <parserTestCase name="zoned_double_vpattern_01" root="double" model="zoned1">
    <document>99999</document>
    <errors>
      <error>cannot be used with xs:double</error>
    </errors>
  </parserTestCase>


</testSuite>
