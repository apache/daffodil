<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<tdml:testSuite
	xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:ex="http://example.com"
	xmlns:fn="http://www.w3.org/2005/xpath-functions">

	<tdml:defineSchema name="s1" elementFormDefault="unqualified">

		<xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
		<dfdl:format
			ref="ex:GeneralFormat"
			representation="text"
			lengthKind="delimited"
			separatorPosition="infix" />

		<!-- baseline for DAFFODIL-2498. Works. -->
		<xs:element name="file1">
			<xs:complexType>
				<xs:sequence dfdl:separator="/" dfdl:separatorPosition="infix"
										 dfdl:separatorSuppressionPolicy="trailingEmpty">
					<xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="5" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

		<!--
		The same test, except separatorSuppressionPolicy is 'anyEmpty', and minOccurs="1"
		This also works
		 -->
		<xs:element name="file2">
			<xs:complexType>
				<xs:sequence dfdl:separator="/" dfdl:separatorPosition="infix"
										 dfdl:separatorSuppressionPolicy="anyEmpty">
					<xs:element name="value" type="xs:string" minOccurs="1" maxOccurs="5" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

		<!--
		The same, except minOccurs="0"
		This fails in Daffodil 3.0.0, but works in 3.1.0
		-->
		<xs:element name="file3">
			<xs:complexType>
				<xs:sequence dfdl:separator="/" dfdl:separatorPosition="infix"
										 dfdl:separatorSuppressionPolicy="anyEmpty">
					<xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="5" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

	</tdml:defineSchema>

	<tdml:parserTestCase name="test_sep_trailing_1" root="file1" model="s1">
		<tdml:document>/a//</tdml:document>

		<tdml:infoset>
			<tdml:dfdlInfoset>
				<ex:file1>
					<value>a</value>
				</ex:file1>
			</tdml:dfdlInfoset>
		</tdml:infoset>

	</tdml:parserTestCase>

	<tdml:parserTestCase name="test_sep_anyEmpty_1" root="file2" model="s1">
		<tdml:document>/a//</tdml:document>

		<tdml:infoset>
			<tdml:dfdlInfoset>
				<ex:file2>
					<value></value>
					<value>a</value>
				</ex:file2>
			</tdml:dfdlInfoset>
		</tdml:infoset>

	</tdml:parserTestCase>

	<!-- DAFFODIL-2498 - on Daffodil 3.0.0 this was failing. Works on 3.1.0. -->

	<tdml:parserTestCase name="test_sep_anyEmpty_2" root="file3" model="s1">
		<tdml:document>/a//</tdml:document>

		<tdml:infoset>
			<tdml:dfdlInfoset>
				<ex:file3>
					<value>a</value>
				</ex:file3>
			</tdml:dfdlInfoset>
		</tdml:infoset>

	</tdml:parserTestCase>

	<tdml:defineSchema name="s2" elementFormDefault="unqualified">

		<xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
		<dfdl:format
			ref="ex:GeneralFormat"
			representation="text"
			lengthKind="delimited"
			separatorPosition="infix" />

		<!-- DAFFODIL-2217
		  These additional tests give another case where trailingEmptyStrict should be causing a
		  parse error, but it does not in a case where maxOccurs="3" but works correctly when maxOccurs="4".
		  -->

		<!-- maxOccurs='3' fails to detect the trailing "/" i.e., this should fail with a parse error
		due to trailingEmptyStrict -->

		<xs:element name="file1">
			<xs:complexType>
				<xs:sequence dfdl:separator="/" dfdl:separatorPosition="infix"
										 dfdl:separatorSuppressionPolicy="trailingEmptyStrict">
					<xs:element name="value" type="xs:string" minOccurs="1" maxOccurs="3" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

		<!-- same, but maxOccurs is 4. This works, as in detects the error. -->
		<xs:element name="file2">
			<xs:complexType>
				<xs:sequence dfdl:separator="/" dfdl:separatorPosition="infix"
										 dfdl:separatorSuppressionPolicy="trailingEmptyStrict">
					<xs:element name="value" type="xs:string" minOccurs="1" maxOccurs="4" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

	</tdml:defineSchema>

	<tdml:parserTestCase name="test_sep_trailingEmptyStrict_1" root="file1" model="s2">
		<tdml:document>a/b/</tdml:document>
		<tdml:errors>
			<tdml:error>Parse Error</tdml:error>
			<tdml:error>trailingEmptyStrict</tdml:error>
		</tdml:errors>
	</tdml:parserTestCase>

	<tdml:parserTestCase name="test_sep_trailingEmptyStrict_2" root="file2" model="s2">
		<tdml:document>a/b/</tdml:document>
		<tdml:errors>
			<tdml:error>Parse Error</tdml:error>
			<tdml:error>trailingEmptyStrict</tdml:error>
		</tdml:errors>
	</tdml:parserTestCase>

</tdml:testSuite>