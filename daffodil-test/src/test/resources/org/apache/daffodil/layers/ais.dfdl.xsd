<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<xs:schema
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:dfdlx="http://www.ogf.org/dfdl/dfdl-1.0/extensions"
  xmlns:bm="urn:org.apache.daffodil.layers.boundaryMark"
  xmlns:ais="urn:org.apache.daffodil.layers.ais"
  targetNamespace="urn:org.apache.daffodil.layers.ais">

<!-- 
Examples:
!AIVDM,1,1,,A,13aEOK?P00PD2wVMdLDRhgvL289?,0*26
!AIVDM,1,1,,B,16S`2cPP00a3UF6EKT@2:?vOr0S2,0*00
!AIVDM,2,1,9,B,53nFBv01SJ<thHp6220H4heHTf2222222222221?50:454o<`9QSlUDp,0*09
!AIVDM,2,2,9,B,888888888888880,2*2E

   FIXME: there's 4 text fields, then the binary data with the text armoring. But the
    size of this should be fixed, as all the binary fields are fixed size fields.
    That means the above examples, where the size of the ais-armored data varies widely,
    can't be correct. These should all be the exact same number of characters long.

see http://catb.org/gpsd/AIVDM.html

Example:
!AIVDM,1,1,,B,177KQJ5000G?tO`K>RA1wUbN0TKH,0*5C

In the above, after the glop field's trailing boundaryMark comma, the 0 is n fill bits 
required to pad the data payload to a 6-bit boundary. So it is 0 to 5. 

   FIXME: the above statement makes NO SENSE. We've reached the comma, we're back in 8-bits
    per character land, not binary any longer. So there's no padding to 6-bit boundaries. That doesn't
    make any sense.

The *5C is a NMEA 0183 data integrity checksum, preceded by "*" - computed on 
the whole message including the AIVDM, but excluding the "!"

According to the wikipedia article on NMEA 0183, this checksum is just an XOR of the
specific message bytes.

Another role for layers is computing checksums. This schema could be enhanced to do that
(DAFFODIL-2563)

Example Multifragment sentence:
!AIVDM,2,1,3,B,55P5TL01VIaAL@7WKO@mBplU@<PDhh000000001S;AJ::4A80?4i@E53,0*3E
!AIVDM,2,2,3,B,1@0000000000000,2*55

 -->
  <xs:include schemaLocation="/org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
  <xs:import namespace="urn:org.apache.daffodil.layers.boundaryMark"
             schemaLocation="/org/apache/daffodil/layers/xsd/boundaryMarkLayer.dfdl.xsd"/>

  <xs:annotation><xs:appinfo source="http://www.ogf.org/dfdl/">

    <dfdl:defineFormat name="text">
      <dfdl:format
        ref="ais:GeneralFormat"
        lengthKind="delimited"
        encoding="ascii"/>
    </dfdl:defineFormat>

    <dfdl:defineFormat name="binary">
      <dfdl:format
        ref="ais:GeneralFormat"
        encoding="ascii"
        lengthKind="explicit"
        lengthUnits="bits"
        alignment="1"
        alignmentUnits="bits"
        representation="binary"
        byteOrder="bigEndian"
        bitOrder="mostSignificantBitFirst"
        binaryBooleanTrueRep="1"
        binaryBooleanFalseRep="0" />
    </dfdl:defineFormat>

    <dfdl:format ref="ais:binary" />

  </xs:appinfo></xs:annotation>

  <xs:group name="boundaryMarkEncoding">
    <xs:sequence>
      <xs:annotation><xs:appinfo source="http://www.ogf.org/dfdl/">
        <dfdl:setVariable ref="bm:layerEncoding" value="ascii"/>
      </xs:appinfo></xs:annotation>
    </xs:sequence>
  </xs:group>

  <xs:element name="AIVDM" dfdl:initiator="!AIVDM" dfdl:ref="ais:text" dfdl:lengthKind="implicit">
    <xs:complexType>
      <xs:sequence dfdl:separator="">
        <xs:group ref="ais:boundaryMarkEncoding"/>
        <xs:sequence dfdl:separator="," dfdl:separatorPosition="prefix" dfdl:ref="ais:text">
          <xs:element name="numSentences" type="xs:unsignedInt" dfdl:ref="ais:text"/>
          <!-- could add facets minValue is 1 -->
          <xs:element name="sentenceNumber" type="xs:unsignedInt" dfdl:ref="ais:text"/>
          <!-- could add facets minValue is 1 -->
          <xs:element name="sequentialMessageID" type="xs:string" dfdl:ref="ais:text"/>
          <xs:element name="AISChannel" type="xs:string" dfdl:ref="ais:text"/>
          <!-- could add enum. One of A, B, 1, 2 -->
          <xs:sequence dfdlx:layer="bm:boundaryMark">
            <!-- until the ',' is found -->
            <xs:annotation><xs:appinfo source="http://www.ogf.org/dfdl/">
              <dfdl:newVariableInstance ref="bm:boundaryMark" defaultValue=","/>
            </xs:appinfo></xs:annotation>
            <xs:sequence dfdlx:layer="ais:aisPayloadArmor">
              <!-- now using default format which is ais:binary -->
              <xs:element name="messageType" type="xs:unsignedInt" dfdl:length="6"/>
              <xs:element name="repeatIndicator" type="xs:unsignedInt" dfdl:length="2"/>
              <xs:element name="userID" type="xs:unsignedInt" dfdl:length="30"/>
              <xs:element name="navigationStatus" type="xs:unsignedInt" dfdl:length="4"/>
              <xs:element name="rateOfTurn" type="xs:unsignedInt" dfdl:length="8"/>
              <xs:element name="speedOverGround" type="xs:unsignedInt" dfdl:length="10"/>
              <xs:element name="positionAccuracy" type="xs:boolean" dfdl:length="1"/>
              <xs:element name="longitude" type="xs:int" dfdl:length="28"/>
              <xs:element name="latitude" type="xs:int" dfdl:length="27"/>
              <xs:element name="courseOverGround" type="xs:unsignedInt" dfdl:length="12"/>
              <xs:element name="trueHeading" type="xs:unsignedInt" dfdl:length="9"/>
              <xs:element name="timeStamp" type="xs:unsignedInt" dfdl:length="6"/>
              <xs:element name="regional" type="xs:unsignedInt" dfdl:length="2"/>
              <xs:element name="spare" type="xs:unsignedInt" dfdl:length="3"/>
              <xs:element name="RAIM" type="xs:unsignedInt" dfdl:length="1"/>
              <xs:element name="radioStatus" type="xs:unsignedInt" dfdl:length="19"/>
            </xs:sequence><!-- end ais armoring layer -->
          </xs:sequence><!-- end boundary mark layer -->
        </xs:sequence><!-- end of comma separated sequence -->
        <xs:element name="bitsPad" type="xs:unsignedInt" dfdl:ref="ais:text" dfdl:lengthKind="explicit"
                    dfdl:length="1"/>
        <!--  must be 0 to 5 -->
        <!-- DAFFODIL-2563 - recompute this checksum, with another layer transform -->
        <xs:element name="checksum" type="xs:string" dfdl:ref="ais:text" dfdl:initiator="*"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

</xs:schema>
