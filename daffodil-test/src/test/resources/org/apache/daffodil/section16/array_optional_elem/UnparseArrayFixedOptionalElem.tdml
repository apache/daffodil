<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<tdml:testSuite suiteName="Array-OptionalElemTests"
  description="Section 16 - Arrays and Optional Elements" xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ct="http://w3.ibm.com/xmlns/dfdl/ctInfoset"
  xmlns:ex="http://example.com" xmlns:daf="urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:ext">

  <tdml:defineSchema name="s1">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>

    <dfdl:format lengthKind="explicit" length="1" ref="ex:GeneralFormat"
      separator="" initiator="" terminator="" occursCountKind="fixed"
      ignoreCase="no" textNumberRep="standard" representation="text" />
    <dfdl:defineFormat name="root">
      <dfdl:format lengthKind="implicit" ref="ex:GeneralFormat"
        separator="" initiator="" terminator="" representation="text" />
    </dfdl:defineFormat>

    <xs:element name="r1" dfdl:ref="ex:root">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="opt" type="xs:string" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
        <xs:element name="r1a" dfdl:ref="ex:root">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="opt" type="xs:string" minOccurs="3" maxOccurs="3" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="r1b" dfdl:ref="ex:root">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="opt" type="xs:string" minOccurs="0" maxOccurs="0" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r2" dfdl:ref="ex:root">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="opt1" type="xs:string" minOccurs="3" maxOccurs="3"/>
          <xs:element name="opt2" type="xs:string" minOccurs="3" maxOccurs="3"  />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r3" dfdl:ref="ex:root">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="sca" type="xs:string" />
          <xs:element name="opt" type="xs:string" minOccurs="2" maxOccurs="2" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r4" dfdl:ref="ex:root">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="opt" type="xs:string" minOccurs="2" maxOccurs="2" />
          <xs:element name="sca" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

<!--
  Test Name: fixedOptPresent
     Schema: s1
       Root: r1
    Purpose: This test demonsrates unparsing an array with a single required element when occursCountKind="fixed" 
-->

  <tdml:unparserTestCase name="fixedOptPresent" root="r1"
    model="s1">

    <tdml:infoset xmlns="http://example.com">
      <tdml:dfdlInfoset>
        <r1>
          <opt>1</opt>
        </r1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document><![CDATA[1]]></tdml:document>

  </tdml:unparserTestCase>

<!--
  Test Name: fixedUnparseArrayTooManyElements01
     Schema: s1
       Root: r1
    Purpose: This is a negative test. The schema is expecting an array with a single element.
             The infoset is providing too many elements. occursCountKind="fixed"
-->

  <tdml:unparserTestCase name="fixedUnparseArrayTooManyElements01" root="r1"
    model="s1">

    <tdml:infoset xmlns="http://example.com">
      <tdml:dfdlInfoset>
        <r1>
          <opt>1</opt>
          <opt>2</opt>
          <opt>3</opt>
        </r1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:errors>
      <tdml:error>Unparse Error</tdml:error>
      <tdml:error>expected element end</tdml:error>
      <tdml:error>{http://example.com}r1</tdml:error>
      <tdml:error>{http://example.com}opt</tdml:error>
    </tdml:errors>

  </tdml:unparserTestCase>

<!--
  Test Name: fixedUnparseArrayTooFewElements01
     Schema: s1
       Root: r1a
    Purpose: This is a negative test. The schema is expecting an array with 3 elements.
             The infoset is providing a single element. occursCountKind="fixed"
-->

  <tdml:unparserTestCase name="fixedUnparseArrayTooFewElements01" root="r1a"
    model="s1">

    <tdml:infoset xmlns="http://example.com">
      <tdml:dfdlInfoset>
        <r1a>
          <opt>1</opt>
        </r1a>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:errors>
      <tdml:error>Unparse Error</tdml:error>
      <tdml:error>Expected</tdml:error>
      <tdml:error>additional</tdml:error>
      <tdml:error>opt</tdml:error>
      <tdml:error>received array end event</tdml:error>
    </tdml:errors>

  </tdml:unparserTestCase>

<!--
  Test Name: fixedOptPresentArray
     Schema: s1
       Root: r1a
    Purpose: This test demonsrates unparsing an array with three required elements when occursCountKind="fixed"
-->

  <tdml:unparserTestCase name="fixedOptPresentArray" root="r1a"
    model="s1">

    <tdml:infoset xmlns="http://example.com">
      <tdml:dfdlInfoset>
        <r1a>
          <opt>1</opt>
          <opt>2</opt>
          <opt>3</opt>
        </r1a>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document><![CDATA[123]]></tdml:document>

  </tdml:unparserTestCase>

<!--
  Test Name: fixedOptAbsentArray
     Schema: s1
       Root: r1b
    Purpose: This test demonsrates unparsing an array with a single optional element.
             In this case the optional element is not present. occursCountKind="fixed"
-->

  <tdml:unparserTestCase name="fixedOptAbsentArray" root="r1b"
    model="s1">

    <tdml:infoset xmlns="http://example.com">
      <tdml:dfdlInfoset>
        <r1b/>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document />

  </tdml:unparserTestCase>

<!--
  Test Name: fixedOptTwoArrays
     Schema: s1
       Root: r2
    Purpose: This test demonsrates unparsing a sequence of two arrays. Both arrays
             contain 3 required elements. occursCountKind="fixed"
-->

  <tdml:unparserTestCase name="fixedOptTwoArrays" root="r2"
    model="s1">

    <tdml:infoset xmlns="http://example.com">
      <tdml:dfdlInfoset>
        <r2>
          <opt1>1</opt1>
          <opt1>2</opt1>
          <opt1>3</opt1>
          <opt2>1</opt2>
          <opt2>2</opt2>
          <opt2>3</opt2>
        </r2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document><![CDATA[123123]]></tdml:document>

  </tdml:unparserTestCase>

<!--
  Test Name: fixedOptScalarThenArray
     Schema: s1
       Root: r3
    Purpose: This test demonsrates unparsing a sequence of a scalar and an array. The array
             consists of 2 required elements. occursCountKind="fixed"
-->

  <tdml:unparserTestCase name="fixedOptScalarThenArray" root="r3"
    model="s1">

    <tdml:infoset xmlns="http://example.com">
      <tdml:dfdlInfoset>
        <r3>
          <sca>1</sca>
          <opt>2</opt>
          <opt>3</opt>
        </r3>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document><![CDATA[123]]></tdml:document>

  </tdml:unparserTestCase>

<!--
  Test Name: fixedOptArrayThenScalar
     Schema: s1
       Root: r4
    Purpose: This test demonsrates unparsing a sequence of an array then a scalar. The array
             consists of 2 required elements. occursCountKind="fixed"
-->

  <tdml:unparserTestCase name="fixedOptArrayThenScalar" root="r4"
    model="s1">

    <tdml:infoset xmlns="http://example.com">
      <tdml:dfdlInfoset>
        <r4>
          <opt>1</opt>
          <opt>2</opt>
          <sca>3</sca>
        </r4>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document><![CDATA[123]]></tdml:document>

  </tdml:unparserTestCase>

</tdml:testSuite>
