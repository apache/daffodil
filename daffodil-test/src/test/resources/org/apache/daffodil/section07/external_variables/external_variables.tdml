<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<tdml:testSuite xmlns="http://example.com"
	xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/" 
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:ex="http://example.com"
	xmlns:daf="urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:ext">

	<tdml:defineSchema name="predefinedVars">
		<dfdl:defineVariable name="v_no_default" type="xsd:int"
			external="true" />
		<dfdl:defineVariable name="v_with_default" type="xsd:int"
			defaultValue="42" external="true" />
		<dfdl:defineVariable name="myVar1" type="xs:int"
			defaultValue="6" external="true" />
		<xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />

		<xs:element name="accessPreDefs">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="encoding" type="xsd:string"
						dfdl:inputValueCalc="{ $dfdl:encoding }" />
					<xs:element name="byteOrder" type="xsd:string"
						dfdl:inputValueCalc="{ $dfdl:byteOrder }" />
					<xs:element name="binaryFloatRep" type="xsd:string"
						dfdl:inputValueCalc="{ $dfdl:binaryFloatRep }" />
					<xs:element name="outputNewLine" type="xsd:string"
						dfdl:inputValueCalc="{ $dfdl:outputNewLine }" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

		<xs:element name="setAPreDef">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="settingValue" type="xsd:string"
						dfdl:inputValueCalc="{ 'setting a value' }">
						<xs:annotation>
							<xs:appinfo source="http://www.ogf.org/dfdl/">
								<dfdl:setVariable ref="dfdl:outputNewLine"
									value="{ '%NL;' }" />
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="finalValue" type="xsd:string"
						dfdl:inputValueCalc="{ $dfdl:outputNewLine }" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

	</tdml:defineSchema>

	<tdml:parserTestCase name="access_default_predefined_vars"
		root="accessPreDefs" model="predefinedVars" description="Use of predefined vars - DFDL-7-091R">

		<tdml:document />

		<tdml:infoset>
			<tdml:dfdlInfoset>
				<ex:accessPreDefs>
					<encoding>UTF-8</encoding>
					<byteOrder>bigEndian</byteOrder>
					<binaryFloatRep>ieee</binaryFloatRep>
					<outputNewLine><![CDATA[%LF;]]></outputNewLine>
				</ex:accessPreDefs>
			</tdml:dfdlInfoset>
		</tdml:infoset>
	</tdml:parserTestCase>
	
	<tdml:parserTestCase name="set_predefined_var"
		root="setAPreDef" model="predefinedVars" description="Use of predefined vars - DFDL-7-091R">

		<tdml:document />

		<tdml:infoset>
			<tdml:dfdlInfoset>
				<ex:setAPreDef>
					<settingValue><![CDATA[setting a value]]></settingValue>
					<finalValue><![CDATA[%NL;]]></finalValue>
				</ex:setAPreDef>
			</tdml:dfdlInfoset>
		</tdml:infoset>
	</tdml:parserTestCase>

	<tdml:defineSchema name="v">
		<dfdl:defineVariable name="v_no_default" type="xsd:int"
			external="true" />
		<dfdl:defineVariable name="v_with_default" type="xsd:int"
			defaultValue="42" external="true" />
		<dfdl:defineVariable name="myVar1" type="xs:int"
			defaultValue="6" external="true" />
		<xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />

		<xs:element name="c">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="d" type="xsd:int" dfdl:inputValueCalc="{ $ex:v_with_default }">
					</xs:element>
					<xs:element name="e" type="xsd:int" dfdl:inputValueCalc="{ $ex:v_no_default }" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

	</tdml:defineSchema>

	<!-- Overrides define variables -->
	<tdml:defineConfig name="cfg_01">
		<daf:externalVariableBindings>
			<daf:bind name="ex:v_no_default">1</daf:bind>
			<daf:bind name="ex:v_with_default">2</daf:bind>
		</daf:externalVariableBindings>
	</tdml:defineConfig>

	<!-- Overrides define variables -->
	<tdml:parserTestCase name="read_config_from_file"
		root="c" model="v" config="daffodil_config.xml"
		description="Use of defineVariable and extVariable - DFDL-7-091R">

		<tdml:document />

		<tdml:infoset>
			<tdml:dfdlInfoset>
				<ex:c>
					<d xsi:type="xsd:int">2</d>
					<e xsi:type="xsd:int">1</e>
				</ex:c>

			</tdml:dfdlInfoset>
		</tdml:infoset>
	</tdml:parserTestCase>

	<!-- Overrides define variables -->
	<tdml:parserTestCase name="override_define_vars_01"
		root="c" model="v" config="cfg_01"
		description="Use of defineVariable and extVariable - DFDL-7-091R">

		<tdml:document />

		<tdml:infoset>
			<tdml:dfdlInfoset>
				<ex:c>
					<d xsi:type="xsd:int">2</d>
					<e xsi:type="xsd:int">1</e>
				</ex:c>

			</tdml:dfdlInfoset>
		</tdml:infoset>
	</tdml:parserTestCase>

	<tdml:defineConfig name="config_05">
		<daf:externalVariableBindings>
			<daf:bind name="ex:v_with_default">48</daf:bind>
		</daf:externalVariableBindings>
	</tdml:defineConfig>

	<!-- Should error since one external variable was never set -->
	<tdml:parserTestCase name="override_define_vars_05"
		root="c" model="v" config="config_05"
		description="Use of defineVariable and extVariable - DFDL-7-091R">

		<tdml:document />

		<tdml:errors>
			<tdml:error>Schema Definition Error</tdml:error>
			<tdml:error>v_no_default has no value.</tdml:error>
			<tdml:error>It was not set, and has</tdml:error>
			<tdml:error>no default value.</tdml:error>
		</tdml:errors>
	</tdml:parserTestCase>

	<tdml:defineSchema name="v2">
		<dfdl:defineVariable name="v_no_default" type="xsd:int"
			external="true" />
		<dfdl:defineVariable name="v_with_default" type="xsd:int"
			defaultValue="42" external="true" />
		<dfdl:defineVariable name="myVar1" type="xs:int"
			defaultValue="6" />
		<xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />

		<xs:element name="c">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="d" type="xsd:int" dfdl:inputValueCalc="{ $ex:v_with_default }">
						<xs:annotation>
							<xs:appinfo source="http://www.ogf.org/dfdl/">
								<dfdl:setVariable ref="ex:v_no_default">{ . }</dfdl:setVariable>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="e" type="xsd:int" dfdl:inputValueCalc="{ $ex:v_no_default }" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

	</tdml:defineSchema>

	<tdml:defineConfig name="config_02">
		<daf:externalVariableBindings>
			<daf:bind name="ex:v_no_default">1</daf:bind>
			<daf:bind name="ex:v_with_default">2</daf:bind>
		</daf:externalVariableBindings>
	</tdml:defineConfig>

	<!-- Overrides define variables and sets one -->
	<tdml:parserTestCase name="override_define_vars_02"
		root="c" model="v2" config="config_02"
		description="Use of defineVariable, extVariable, and setVariable - DFDL-7-091R">

		<tdml:document />

		<tdml:infoset>
			<tdml:dfdlInfoset>
				<ex:c>
					<d xsi:type="xsd:int">2</d>
					<e xsi:type="xsd:int">2</e>
				</ex:c>

			</tdml:dfdlInfoset>
		</tdml:infoset>
	</tdml:parserTestCase>

	<tdml:defineSchema name="v3">
		<dfdl:defineVariable name="v_no_default" type="xsd:int" />
		<dfdl:defineVariable name="v_with_default" type="xsd:int"
			defaultValue="42" external="true" />
		<dfdl:defineVariable name="myVar1" type="xs:int"
			defaultValue="6" />
		<xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />

		<xs:element name="c">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="d" type="xsd:int" dfdl:inputValueCalc="{ $ex:v_with_default }">
						<xs:annotation>
							<xs:appinfo source="http://www.ogf.org/dfdl/">
								<dfdl:setVariable ref="ex:v_no_default">{ . }</dfdl:setVariable>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="e" type="xsd:int" dfdl:inputValueCalc="{ $ex:v_no_default }" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

	</tdml:defineSchema>

	<tdml:defineConfig name="config_03">
		<daf:externalVariableBindings>
			<daf:bind name="ex:v_no_default">1</daf:bind>
			<daf:bind name="ex:v_with_default">2</daf:bind>
		</daf:externalVariableBindings>
	</tdml:defineConfig>

	<!-- Should error. One of the variables is not set to external, yet we attempt 
		to set it externally. -->
	<tdml:parserTestCase name="override_define_vars_03"
		root="c" model="v3" config="config_03"
		description="Use of defineVariable, extVariable, and setVariable - DFDL-7-091R">

		<tdml:document />

		<tdml:errors>
			<tdml:error>Cannot set variable</tdml:error>
			<tdml:error>v_no_default</tdml:error>
			<tdml:error>externally</tdml:error>
		</tdml:errors>
	</tdml:parserTestCase>

	<tdml:defineSchema name="v4">
		<dfdl:defineVariable name="v_no_default" type="xsd:int"
			external="true" />
		<dfdl:defineVariable name="v_with_default" type="xsd:int"
			defaultValue="42" external="true" />
		<dfdl:defineVariable name="v_with_default2" type="xsd:int"
			external="true">73</dfdl:defineVariable>
		<dfdl:defineVariable name="v_with_global_default"
			type="xsd:int" defaultValue="15" external="true" />
		<xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />

		<xs:element name="c">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="d" type="xsd:int" dfdl:inputValueCalc="{ $ex:v_with_default }" />
					<xs:element name="e" type="xsd:int" dfdl:inputValueCalc="{ $ex:v_no_default }" />
					<xs:element name="f" type="xsd:int" dfdl:inputValueCalc="{ $ex:v_with_default2 }" />
					<xs:element name="g" type="xsd:int"
						dfdl:inputValueCalc="{ $ex:v_with_global_default }" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

	</tdml:defineSchema>

	<tdml:defineConfig name="config_04">
		<daf:externalVariableBindings>
			<daf:bind name="ex:v_no_default">1</daf:bind>
			<daf:bind name="ex:v_with_global_default">48</daf:bind>
		</daf:externalVariableBindings>
	</tdml:defineConfig>

	<!-- Overrides some define variables -->
	<tdml:parserTestCase name="override_define_vars_04"
		root="c" model="v4" config="config_04"
		description="Use of defineVariable and extVariable - DFDL-7-091R">

		<tdml:document />

		<tdml:infoset>
			<tdml:dfdlInfoset>
				<ex:c>
					<d xsi:type="xsd:int">42</d>
					<e xsi:type="xsd:int">1</e>
					<f xsi:type="xsd:int">73</f>
					<g xsi:type="xsd:int">48</g>
				</ex:c>

			</tdml:dfdlInfoset>
		</tdml:infoset>
	</tdml:parserTestCase>
  
  <!-- TODO: The test below doesn't work - left over data.
       Furthermore, TDML runner doesn't currently compare attributes, so 
       cannot detect the error we're trying to detect, which is spurious
       presence of a xmlns="" in the root element of the result infoset. 
       There is a ticket Daffodil-1846 about making the TDML runner not strip
       off the attributes - presumably also namespace bindings. -->
  <tdml:parserTestCase name="testNoRootUnnecessaryBinding"
      root="row2" model="org/apache/daffodil/section07/external_variables/external_variables.dfdl.xsd"
      config="org/apache/daffodil/section07/external_variables/daffodil_config_cli_test.xml"
      description="Root XML should not have xmlns='' in it. "
      roundTrip="false">
  
    <tdml:document></tdml:document>
    <tdml:infoset>
    <tdml:dfdlInfoset>
      <tns:row2 xmlns:tns="http://example.com"> <!-- should not have xmlns="" -->
        <cell>-9</cell>
        <cell>-2</cell>
        <cell>-8</cell>
      </tns:row2>
    </tdml:dfdlInfoset>
    </tdml:infoset>
      
  </tdml:parserTestCase>

</tdml:testSuite>

