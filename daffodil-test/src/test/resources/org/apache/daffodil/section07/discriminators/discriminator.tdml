<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<tdml:testSuite 
  suiteName="Discriminator" 
  description="Section 7 - Discriminator"
  xmlns:ex="http://example.com" xmlns="http://example.com"
  xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/" 
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:fn="http://www.w3.org/2005/xpath-functions"
  defaultRoundTrip="true" 
  defaultValidation="on">

  <tdml:defineSchema name="discrimAssertPlacement">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />

    <xs:element name="root-discrim" dfdl:lengthKind="implicit" >
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorPosition="infix">
          <xs:annotation>
            <xs:appinfo source="http://www.ogf.org/dfdl/">
              <dfdl:discriminator testKind="pattern"
                                  testPattern="\p{L}{3}"
                                  message="discriminator failed for pattern '\p{L}{3}'" />
            </xs:appinfo>
          </xs:annotation>
          <xs:element ref="ex:description" dfdl:lengthKind="delimited"/>
          <xs:element ref="ex:quantity" dfdl:lengthKind="delimited"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="root-assert" dfdl:lengthKind="implicit" >
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorPosition="infix">
          <xs:annotation>
            <xs:appinfo source="http://www.ogf.org/dfdl/">
              <dfdl:assert testKind="pattern"
                                  testPattern="\p{L}{3}"
                                  message="assert failed for pattern '\p{L}{3}'" />
            </xs:appinfo>
          </xs:annotation>
          <xs:element ref="ex:description" dfdl:lengthKind="delimited"/>
          <xs:element ref="ex:quantity" dfdl:lengthKind="delimited"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="description" type="xs:string" />
    <xs:element name="quantity" type="xs:int" />
  </tdml:defineSchema>

  <!--
  Test name: discrimPlacementSDW
  Schema: discrimPlacement, root root-discrim
  Purpose: This test demonstrates the SDW resulting from discouraged discriminator placement
  -->

  <tdml:parserTestCase name="discrimPlacementSDW"
                       root="root-discrim" model="discrimAssertPlacement"
                       description="This test demonstrates the SDW resulting from discouraged discriminator placement">
    <tdml:document>Hat,2</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <root-discrim>
          <description>Hat</description>
          <quantity>2</quantity>
        </root-discrim>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:warnings>
      <tdml:warning>Schema Definition Warning</tdml:warning>
      <tdml:warning>Wrap the discriminator or assert in an empty sequence</tdml:warning>
    </tdml:warnings>
  </tdml:parserTestCase>

  <!--
  Test name: assertPlacementSDW
  Schema: discrimAssertPlacement, root root-assert
  Purpose: This test demonstrates the SDW resulting from discouraged assert placement
  -->

  <tdml:parserTestCase name="assertPlacementSDW"
                       root="root-assert" model="discrimAssertPlacement"
                       description="This test demonstrates the SDW resulting from discouraged assert placement">
    <tdml:document>Hat,2</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <root-assert>
          <description>Hat</description>
          <quantity>2</quantity>
        </root-assert>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:warnings>
      <tdml:warning>Schema Definition Warning</tdml:warning>
      <tdml:warning>Wrap the discriminator or assert in an empty sequence</tdml:warning>
    </tdml:warnings>
  </tdml:parserTestCase>

  <tdml:defineSchema name="s0">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />

    <xs:simpleType name="simpleAssert">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
          <dfdl:discriminator testKind="pattern"
            testPattern="\d;" message="discriminator failed for pattern '\d;'" />
        </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string" />
    </xs:simpleType>

    <xs:group name="namedGroup">
      <xs:sequence>
        <xs:element name="e1" type="xs:string"
          dfdl:lengthKind="delimited" dfdl:terminator="," />
        <xs:element name="e2" type="xs:int" dfdl:lengthKind="delimited" />
      </xs:sequence>
    </xs:group>
    
    <xs:group name="namedGroup2">
      <xs:sequence>
        <xs:element name="e3" type="xs:string"
          dfdl:lengthKind="delimited" dfdl:terminator="|" />
        <xs:element name="e4" type="xs:int" dfdl:lengthKind="delimited" />
      </xs:sequence>
    </xs:group>

    <xs:element name="Item" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:group ref="ex:namedGroup">
          <xs:annotation>
            <xs:appinfo source="http://www.ogf.org/dfdl/">
              <dfdl:discriminator testKind="pattern"
                testPattern="\p{L}{3},\d{3}"
                message="discriminator failed for pattern '\p{L}{3},\d{3}'" />
            </xs:appinfo>
          </xs:annotation>
        </xs:group>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="Item2" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:choice>
          <xs:group ref="ex:namedGroup">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:discriminator testKind="pattern"
                  testPattern="\p{L}{3},\d{3}"
                  message="discriminator failed for pattern '\p{L}{3},\d{3}'" />
              </xs:appinfo>
            </xs:annotation>
          </xs:group>
          <xs:group ref="ex:namedGroup2">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:discriminator testKind="pattern"
                  testPattern="\p{L}{3}|\d{3}"
                  message="discriminator failed for pattern '\p{L}{3}|\d{3}'" />
              </xs:appinfo>
            </xs:annotation>
          </xs:group>
        </xs:choice>
      </xs:complexType>
    </xs:element>

    <xs:element name="e0" dfdl:lengthKind="explicit"
      dfdl:length="2" type="simpleAssert" />
    <xs:element name="description" type="xs:string" />
    <xs:element name="quantity" type="xs:int" />

    <xs:element name="Item_01" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:sequence dfdl:separator=","
          dfdl:separatorPosition="infix">
          <xs:element ref="ex:description" dfdl:lengthKind="delimited">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:discriminator testKind="pattern"
                  testPattern="\p{L}{3}"
                  message="discriminator failed for pattern '\p{L}{3}'" />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="ex:quantity" dfdl:lengthKind="delimited">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:discriminator testKind="pattern"
                  testPattern="\d{3}" message="discriminator failed for pattern '\d{3}'" />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <!--
    Test name: discrimOnSimpleType
    Schema: s0, root e0
    Purpose: This test demonstrates the use of a discriminator on a simple 
    type. The document meets the discriminator and should pass.
  -->

  <tdml:parserTestCase name="discrimOnSimpleType"
    root="e0" model="s0" description="Section 7 - Discriminator on simpleType">
    <tdml:document>3;</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e0>3;</ex:e0>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: discrimOnGroupRef
    Schema: s0, root Item
    Purpose: This test demonstrates the use of a discriminator on a group 
    reference. The document meets the discriminator and should pass.
  -->

  <tdml:parserTestCase name="discrimOnGroupRef"
    root="Item" model="s0"
    description="Section 7 - Discriminator on Group Reference - DFDL-7-071R">
    <tdml:document>Hat,400</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <Item>
          <e1>Hat</e1>
          <e2>400</e2>
        </Item>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <!--
    Test name: discrimOnGroupRef2
    Schema: s0, root Item
    Purpose: This test demonstrates the use of a discriminator on a group 
    reference. The document meets the discriminator and should pass.
  -->

  <tdml:parserTestCase name="discrimOnGroupRef2"
    root="Item2" model="s0"
    description="Section 7 - Discriminator on Group Reference - DFDL-7-071R">
    <tdml:document>Hat|400</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <Item2>
          <e3>Hat</e3>
          <e4>400</e4>
        </Item2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: discrimOnElementRef
    Schema: s0, root Item_01
    Purpose: This test demonstrates the use of a discriminator on an element 
    reference. The document meets the discriminator and should pass.
  -->

  <tdml:parserTestCase name="discrimOnElementRef"
    root="Item_01" model="s0"
    description="Section 7 - Discriminator on Element Reference - DFDL-7-070R">
    <tdml:document>Hat,400</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <Item_01>
          <description>Hat</description>
          <quantity>400</quantity>
        </Item_01>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="choice1">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />
    <xs:element name="c1">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="c">
            <xs:complexType>
              <xs:choice>
                <xs:element name="a1" type="xs:int"
                  dfdl:lengthKind="explicit" dfdl:length="4">
                  <xs:annotation>
                    <xs:appinfo source="http://www.ogf.org/dfdl/">
                      <dfdl:discriminator testKind="pattern"
                        testPattern="\d;"
                        message="discriminator failed for pattern '\d;'" />
                    </xs:appinfo>
                  </xs:annotation>
                </xs:element>
                <xs:element name="a2" type="xs:string"
                  dfdl:lengthKind="explicit" dfdl:initiator="5"
                  dfdl:length="5" dfdl:lengthUnits="characters" />
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </tdml:defineSchema>

  <!--
    Test name: discriminatorGuidesChoice2
    Schema: choice1, root c1
    Purpose: The element should fail, and the discriminator should still 
    be checked. The error message should express
    the discriminator failure.
  -->

  <tdml:parserTestCase name="discriminatorGuidesChoice2"
    root="c1" model="choice1"
    description="Section 7 - Discriminator must evaluate even if element fails">
    <tdml:document>3</tdml:document>
    <tdml:errors>
      <tdml:error>discriminator failed</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:defineSchema name="choice2">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />
    <xs:element name="c1">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="c">
            <xs:complexType>
              <xs:choice>
                <xs:element name="a1">

                  <xs:complexType>
                    <xs:sequence>
                      <xs:annotation>
                        <xs:appinfo source="http://www.ogf.org/dfdl/">
                          <dfdl:discriminator><![CDATA[{ fn:true() }]]></dfdl:discriminator>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:element name="str" type="xs:string"
                        dfdl:lengthKind="explicit" dfdl:length="{ 80 }" /> <!-- fails because there is no data -->
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:sequence>
                  <xs:element name="a2" type="xs:string"
                    dfdl:inputValueCalc="{ 'a2' }" />
                </xs:sequence>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:defineSchema name="s1">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />
    <xs:element name="e1" type="xs:int" dfdl:lengthKind="delimited">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
          <dfdl:discriminator testKind="pattern"
            testPattern="\d\d" message="Discriminator failed for pattern '\d\d'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e2" type="xs:int" dfdl:lengthKind="delimited">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
          <dfdl:discriminator testKind="pattern"
            testPattern="\d\d\d" message="Discriminator failed for pattern '\d\d\d'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e3" type="xs:int" dfdl:lengthKind="pattern"
      dfdl:lengthPattern="\d\d" dfdl:terminator=": ,">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
          <dfdl:discriminator testKind="pattern"
            testPattern="\d\d" message="Discriminator failed for pattern '\d\d'" />
          <dfdl:discriminator testKind="pattern"
            testPattern="\d\d:" message="Discriminator failed for pattern '\d\d:'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e4" type="xs:int" dfdl:lengthKind="pattern"
      dfdl:lengthPattern="\d\d" dfdl:terminator=": ,">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
          <dfdl:discriminator testKind="pattern"
            testPattern="\d\d" message="Discriminator failed for pattern '\d\d'" />
          <dfdl:discriminator testKind="pattern"
            testPattern="\d\d:" message="Discriminator failed for pattern '\d\d:'" />
          <dfdl:discriminator testKind="pattern"
            testPattern="\d\d" message="Discriminator failed for pattern '\d\d'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e5" type="xs:int" dfdl:lengthKind="pattern"
      dfdl:lengthPattern="\d\d" dfdl:terminator=": ,">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
          <dfdl:assert testKind="pattern" testPattern="\d\d"
            message="Assertion failed for pattern '\d\d'" />
          <dfdl:discriminator testKind="pattern"
            testPattern="\d\d" message="Discriminator failed for pattern '\d\d'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e6" type="xs:int" dfdl:lengthKind="pattern"
      dfdl:lengthPattern="\d\d" dfdl:terminator=": ,">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
          <dfdl:assert testKind="pattern" testPattern="\d\d\d"
            message="Assertion failed for pattern '\d\d\d'" />
          <dfdl:discriminator testKind="pattern"
            testPattern="\d\d:" message="Discriminator failed for pattern '\d\d:'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e7">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="c">
            <xs:complexType>
              <xs:choice>
                <xs:element name="a1" type="xs:int"
                  dfdl:lengthKind="explicit" dfdl:length="5">
                  <xs:annotation>
                    <xs:appinfo source="http://www.ogf.org/dfdl/">
                      <dfdl:discriminator testKind="pattern"
                        testPattern="\d{4}"
                        message="discriminator failed for pattern '\d{4}'" />
                    </xs:appinfo>
                  </xs:annotation>
                </xs:element>
                <xs:element name="a2" type="xs:string"
                  dfdl:lengthKind="explicit" dfdl:length="4"
                  dfdl:lengthUnits="characters" />
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="e8">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="c">
            <xs:complexType>
              <xs:choice>
                <xs:element name="a1" type="xs:int"
                  dfdl:lengthKind="explicit" dfdl:length="3">
                  <xs:annotation>
                    <xs:appinfo source="http://www.ogf.org/dfdl/">
                      <dfdl:discriminator testKind="pattern"
                        testPattern="\d{4}"
                        message="discriminator failed for pattern '\d{4}'" />
                    </xs:appinfo>
                  </xs:annotation>
                </xs:element>
                <xs:element name="a2" type="xs:string"
                  dfdl:lengthKind="explicit" dfdl:length="3"
                  dfdl:lengthUnits="characters" />
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:parserTestCase name="discriminatorGuidesChoice"
    root="c1" model="choice2"
    description="Section 7 - Discriminator with boolean test expression - DFDL-7-060R">
    <tdml:document />
    <tdml:errors>
      <tdml:error>Parse Error</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="discrimPatternPass"
    root="e1" model="s1" description="Section 7 - discrim as a pattern - DFDL-7-045R">
    <tdml:document><![CDATA[43]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1>43</e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="discrimPatternFail"
    root="e2" model="s1" description="Section 7 - discrim as a pattern - DFDL-7-045R">
    <tdml:document><![CDATA[43]]></tdml:document>
    <tdml:errors>
      <tdml:error>Discrim</tdml:error>
      <tdml:error>pattern</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="discrimPatternFail2"
    root="e3" model="s1"
    description="Section 7 - multiple discrim as a pattern - DFDL-7-045R">
    <tdml:document><![CDATA[43,]]></tdml:document>
    <tdml:errors>
      <tdml:error>one</tdml:error>
      <tdml:error>discriminator</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="discrimPatternFail3"
    root="e5" model="s1"
    description="Section 7 - verify SDE occurs when both discriminator and assert present - DFDL-7-045R">
    <tdml:document><![CDATA[43,]]></tdml:document>
    <tdml:errors>
      <tdml:error>both</tdml:error>
      <tdml:error>discriminator</tdml:error>
      <tdml:error>assert</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="choiceBranchDiscrimFail" root="e7" model="s1" description="Parser bound to first choice branch by discriminator - DFDL-7-060R, DFDL--15-015R">
    <tdml:document><![CDATA[1234]]></tdml:document>
    <tdml:errors>
      <tdml:error>Parse Error</tdml:error>
      <tdml:error>All Choice Alternatives Failed</tdml:error>
      <tdml:error>Insufficient</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="choiceBranchDiscrim"
    root="e8" model="s1"
    description="Backtracking occurs immediately because discriminator fails- DFDL-7-061R">
    <tdml:document><![CDATA[123]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e8>
          <c>
            <a2>123</a2>
          </c>
        </e8>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:unparserTestCase name="unparseDiscrimIgnored"
    root="e2" model="s1" description="Section 7 - discrim as a pattern - DFDL-7-045R" roundTrip="false">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e2>43</ex:e2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document><![CDATA[43]]></tdml:document>
  </tdml:unparserTestCase>

  <tdml:defineSchema name="invalid">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />
    <xs:element name="e1" type="xs:int" dfdl:lengthKind="delimited">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
          <dfdl:discriminator testKind="pattern"
            test='{. eq "123"}' testPattern="\d\d"
            message="Discriminator failed for pattern '\d\d'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>
  </tdml:defineSchema>

  <tdml:parserTestCase name="discrimInvalidSchema"
    root="e1" model="invalid"
    description="It is a schema definition error if both a test expression and a test pattern are specified - DFDL-7-069R">
    <tdml:document><![CDATA[123]]></tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>
  
  <tdml:defineSchema name="discrimExpression">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />
    <xs:element name="e1" type="xs:int" dfdl:lengthKind="delimited">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
          <dfdl:discriminator testKind="expression"
            test='{. eq 123 }' message="Discriminator failed for expression '{. eq 123 }'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e2" type="xs:string" dfdl:lengthKind="delimited">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
          <dfdl:discriminator testKind="expression"
            test='{. eq fn:lower-case("CATS")}' message="Discriminator failed." />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e3">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="ints" dfdl:occursCountKind="implicit" minOccurs="0" maxOccurs="5">
            <xs:complexType>
              <xs:sequence>
                <xs:annotation>
                  <xs:appinfo source="http://www.ogf.org/dfdl/">
                    <!-- NOTE That this discriminator executes regardless of whether the 
                    sequence content (int element) below parses successfully. So if that int parse fails, 
                    the discriminator still will be true, and we will NOT backtrack to have zero occurrences
                    of the ints array. -->
                    <dfdl:discriminator testKind="expression" test='{ fn:true() }' />
                  </xs:appinfo>
                </xs:annotation>
                <xs:element name="int" type="xs:int" dfdl:lengthKind="explicit" dfdl:length="1" dfdl:lengthUnits="bytes" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="string" type="xs:string" dfdl:lengthKind="explicit" dfdl:length="3" dfdl:lengthUnits="bytes" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>
  
  <tdml:parserTestCase name="discrimExpression_01"
    root="e1" model="discrimExpression"
    description="Property Name: test - DFDL-7-076R">
    <tdml:document><![CDATA[123]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1>123</e1> 
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <tdml:parserTestCase name="discrimExpression_02"
    root="e2" model="discrimExpression"
    description="Property Name: test - DFDL-7-076R">
    <tdml:document>cats</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e2>cats</e2> 
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <tdml:parserTestCase name="discrimExpression_03"
    root="e2" model="discrimExpression"
    description="Property Name: test - DFDL-7-076R">
    <tdml:document>CATS</tdml:document>
    <tdml:errors>
      <tdml:error>Discriminator failed</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="discrimExpression_04"
    root="e3" model="discrimExpression"
    description="Property Name: test - DFDL-7-076R">
    <tdml:document><![CDATA[abc]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e3>
          <string>abc</string>
        </e3>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="choice3">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />
    <xs:element name="c1">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="c">
            <xs:complexType>
              <xs:choice>
                <xs:element name="a1">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:annotation>
                        <xs:appinfo source="http://www.ogf.org/dfdl/">
                          <dfdl:discriminator><![CDATA[{ fn:false() }]]></dfdl:discriminator>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:element name="str" type="xs:string"
                        dfdl:lengthKind="explicit" dfdl:length="{ 3 }" />
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:element name="a2">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="single" type="xs:string"
                        dfdl:lengthKind="explicit" dfdl:length="{ 1 }" />
                      <xs:element name="extra" type="xs:string"
                        dfdl:lengthKind="delimited" />
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </tdml:defineSchema>

  <tdml:parserTestCase name="discriminatorGuidesChoice3"
    root="c1" model="choice3"
    description="Discriminator to be used when resolving a point of uncertainty such as choice branches or optional elements- DFDL-6-011R">
    <tdml:document><![CDATA[123]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <c1>
          <c>
            <a2>
              <single>1</single>
              <extra>23</extra>
            </a2>
          </c>
        </c1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="choice4">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />
    <xs:element name="c1">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="c">
            <xs:complexType>
              <xs:choice>
                <xs:element name="a1">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:annotation>
                        <xs:appinfo source="http://www.ogf.org/dfdl/">
                          <dfdl:discriminator><![CDATA[{ fn:true() }]]></dfdl:discriminator>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:element name="num" dfdl:lengthKind="delimited"
                        type="xs:int" minOccurs="1" maxOccurs="1" />
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:element name="a2">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="single" type="xs:int"
                        dfdl:lengthKind="explicit" dfdl:length="{ 3 }" />
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    <xs:element name="c2">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="c">
            <xs:complexType>
              <xs:choice>
                <xs:element name="a1">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:annotation>
                        <xs:appinfo source="http://www.ogf.org/dfdl/">
                          <dfdl:discriminator><![CDATA[{ fn:false() }]]></dfdl:discriminator>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:element name="num" dfdl:lengthKind="delimited"
                        type="xs:int" minOccurs="1" maxOccurs="1" />
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:element name="a2">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="single" type="xs:int"
                        dfdl:lengthKind="explicit" dfdl:length="{ 3 }" />
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </tdml:defineSchema>

  <tdml:parserTestCase name="discriminatorGuidesChoice4"
    root="c1" model="choice4"
    description="Discriminator to be used when resolving a point of uncertainty such as choice branches or optional elements- DFDL-6-011R">
    <tdml:document><![CDATA[123]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <c1>
          <c>
            <a1>
              <num>123</num>
            </a1>
          </c>
        </c1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="discriminatorGuidesChoice5"
    root="c2" model="choice4"
    description="Discriminator to be used when resolving a point of uncertainty such as choice branches or optional elements- DFDL-6-011R">
    <tdml:document><![CDATA[123]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <c2>
          <c>
            <a2>
              <single>123</single>
            </a2>
          </c>
        </c2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="discrimWithVariable">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />
    <dfdl:defineVariable name="var"/>

    <xs:element name="r1">
      <xs:complexType>
        <xs:sequence>
          <xs:annotation>
            <xs:appinfo source="http://www.ogf.org/dfdl/">
              <dfdl:setVariable ref="ex:var">{ xs:string(41) }</dfdl:setVariable>
              <dfdl:discriminator testKind="pattern" testPattern="o_o" message="Discriminator failed for pattern 'o_o'" />
            </xs:appinfo>
          </xs:annotation>
          <xs:element name="e1" dfdl:lengthKind="explicit" dfdl:length="2" type="xs:int" dfdl:inputValueCalc="{ xs:int($ex:var) }"/>
          <xs:element name="extra" type="xs:string" dfdl:lengthKind="delimited" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="r2">
      <xs:complexType>
        <xs:sequence>
          <xs:annotation>
            <xs:appinfo source="http://www.ogf.org/dfdl/">
              <dfdl:setVariable ref="ex:var">{ xs:string(41) }</dfdl:setVariable>
              <dfdl:discriminator testKind="pattern" testPattern="41" message="Discriminator failed for pattern '41'" />
            </xs:appinfo>
          </xs:annotation>
          <xs:element name="e1" dfdl:lengthKind="explicit" dfdl:length="2" type="xs:int" dfdl:inputValueCalc="{ xs:int($ex:var) }"/>
          <xs:element name="extra" type="xs:string" dfdl:lengthKind="delimited" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>
  
  <!--
    Test name: discrimPatternMatch
    Schema: discrimWithVariable
    Purpose: This test demonstrates that discriminators are evaluated before the data is parsed.
  -->

  <tdml:parserTestCase name="discrimPatternMatch"
    root="r1" model="discrimWithVariable"
    description="Section 7 - asserts/discriminators with testKind='pattern' need to be evaluated before the element">
    <tdml:document><![CDATA[o_o]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <r1>
          <e1>41</e1>
          <extra>o_o</extra>
        </r1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <!--
    Test name: discrimPatternNoMatch
    Schema: discrimWithVariable
    Purpose: This negative test demonstrates that discriminators are evaluated before the data is parsed.
  -->

  <tdml:parserTestCase name="discrimPatternNoMatch"
    root="r2" model="discrimWithVariable"
    description="Section 7 - asserts/discriminators with testKind='pattern' need to be evaluated before the element">
    <tdml:document><![CDATA[o_o]]></tdml:document>
    <tdml:errors>
      <tdml:error>Discriminator failed</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:defineSchema name="iSetNotFound" elementFormDefault="unqualified">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />

    <xs:element name="e1">
      <xs:complexType>
        <xs:sequence>
          <xs:annotation>
            <xs:appinfo source="http://www.ogf.org/dfdl/">
              <dfdl:discriminator testKind="pattern" testPattern="a.*" />
            </xs:appinfo>
          </xs:annotation>
          <xs:sequence>
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert testKind="expression" test="{ fn:false() }" />
              </xs:appinfo>
            </xs:annotation>
          </xs:sequence>
          <xs:element name="opt1" minOccurs="0" maxOccurs="1" 
            dfdl:occursCountKind="implicit" type="xs:string" 
            dfdl:lengthKind="delimited"
            dfdl:terminator=";" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r0">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="flag" type="xs:int" dfdl:length="1" 
            dfdl:lengthKind="explicit" minOccurs="0" 
            dfdl:occursCountKind="implicit" />
          <xs:choice>
            <xs:element name="hasFlag1" type="xs:string" dfdl:lengthKind="delimited">
              <xs:annotation>
                <xs:appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:discriminator>{ 
                    ../flag eq 1 }
                  </dfdl:discriminator>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element name="noFlag" type="xs:string" dfdl:lengthKind="delimited" />
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r1">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="flag" type="xs:int" dfdl:length="1" 
             dfdl:lengthKind="explicit" minOccurs="0" dfdl:occursCountKind="implicit" />
          <xs:choice>
            <xs:element name="hasFlag1" type="xs:string" dfdl:lengthKind="delimited">
              <xs:annotation>
                <xs:appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:assert>{ 
                    ../flag eq 1 }
                  </dfdl:assert>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element name="noFlag" type="xs:string" dfdl:lengthKind="delimited" />
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r2">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="count" type="xs:int" dfdl:length="1" 
            dfdl:lengthKind="explicit" minOccurs="0" dfdl:occursCountKind="implicit" />
          <xs:element name="v" type="xs:string" 
            dfdl:occursCountKind="expression" 
            dfdl:occursCount="{ ../count }" 
            dfdl:lengthKind="delimited"
            maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r3">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="flag" type="xs:int" dfdl:length="1" 
            dfdl:lengthKind="explicit" minOccurs="0" dfdl:occursCountKind="implicit" />
          <xs:choice>
            <xs:element name="hasFlag1" type="xs:string" dfdl:lengthKind="delimited">
              <xs:annotation>
                <xs:appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:discriminator>{ 
                    dfdl:valueLength(../flag, 'bytes') ge 1 }
                  </dfdl:discriminator>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element name="noFlag" type="xs:string" dfdl:lengthKind="delimited" />
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r4">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="flag" type="xs:int" dfdl:length="1" 
            dfdl:lengthKind="explicit" minOccurs="0" dfdl:occursCountKind="implicit" />
          <xs:choice>
            <xs:element name="hasFlag1" type="xs:string" dfdl:lengthKind="delimited">
              <xs:annotation>
                <xs:appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:discriminator>{ 
                    dfdl:valueLength(.., 'bytes') ge 1 }
                  </dfdl:discriminator>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element name="noFlag" type="xs:string" dfdl:lengthKind="delimited" />
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:parserTestCase name="discrimFailStopsFollowingAssert1" model="iSetNotFound" root="e1"
    description="verifies that a failing discriminator stops a following assert from evaluating. Pattern case.">
    <tdml:document>bbbbbb;</tdml:document>
    <tdml:errors>
      <tdml:error>failed</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="discrimPEnotSDE1" model="iSetNotFound" root="r0"
    description="verifies that a missing node doesn't cause an RSDE from a discriinator, but a regular old PE.">
    <tdml:document>bbbbb</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:r0>
          <noFlag>bbbbb</noFlag>
        </ex:r0>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="assertSDENotPE1" model="iSetNotFound" root="r1"
    description="verifies that a missing node DOES cause an RSDE from an assert, not a regular old PE.">
    <tdml:document>bbbbb</tdml:document>
    <tdml:errors>
      <tdml:error>Runtime Schema Definition Error</tdml:error>
      <tdml:error>{}flag</tdml:error>
      <tdml:error>Expression Evaluation Error</tdml:error>
      <tdml:error>hasFlag1</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="occursCountSDENotPE1" model="iSetNotFound" root="r2"
    description="verifies that a missing node DOES cause an RSDE from occursCount, not a regular old PE.">
    <tdml:document>bbbbb</tdml:document>
    <tdml:errors>
      <tdml:error>Runtime Schema Definition Error</tdml:error>
      <tdml:error>Expression Evaluation Error</tdml:error>
      <tdml:error>{}count</tdml:error>
      <tdml:error>ex:r2</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="discrimPEvalueLength1" model="iSetNotFound" root="r3"
    description="verifies that a missing node inside a call to valueLength doesn't cause an RSDE from a discriinator, but a regular old PE.">
    <tdml:document>bbbbb</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:r3>
          <noFlag>bbbbb</noFlag>
        </ex:r3>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="discrimPEvalueLengthEnclosingParent1" model="iSetNotFound" root="r4"
    description="verifies that valueLength of enclosing parent is RSDE from a discriinator.">
    <tdml:document>bbbbb</tdml:document>
    <tdml:errors>
      <tdml:error>Runtime Schema Definition Error</tdml:error>
      <tdml:error>Expression Evaluation Error</tdml:error>
      <tdml:error>Value Length</tdml:error>
      <tdml:error>ex:r4</tdml:error>
      <tdml:error>hasFlag1</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

</tdml:testSuite>
