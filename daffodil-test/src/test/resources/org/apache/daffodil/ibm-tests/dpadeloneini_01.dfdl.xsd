<?xml version="1.0" encoding="utf-8"?>
	<!--
		CT Valid test example of delimited data OOO (all optional), infix
		delimited, separator required, all terminated (same terminator)
	-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
	xmlns:cal="http://www.saf.cal/" elementFormDefault="unqualified"
	attributeFormDefault="unqualified" >
	<xs:include schemaLocation="org/apache/daffodil/xsd/built-in-formats.xsd" />

	<xs:annotation>
		<xs:appinfo source="http://www.ogf.org/dfdl/">
			<dfdl:format ref="daffodilNewProperties1" initiator="" terminator="" leadingSkip="0" trailingSkip="0" truncateSpecifiedLengthString="no"  textBidi="no" floating="no"   encoding="utf-8" byteOrder="bigEndian" alignment="1" alignmentUnits="bytes" fillByte="f" 
				 occursCountKind="implicit"
				ignoreCase="no" representation="text" textStringPadCharacter=" "
				textPadKind="none" textTrimKind="none" textStringJustification="left"
				lengthKind="delimited" sequenceKind="ordered" initiatedContent="yes"
				emptyValueDelimiterPolicy="none"  nilValueDelimiterPolicy="none"   textNumberRep="standard"
				textStandardBase="10" textNumberPattern="##0" textNumberJustification="right"
				textNumberPadCharacter="0" textStandardGroupingSeparator=","
				textStandardDecimalSeparator="." textStandardExponentRep="e"
				textNumberCheckPolicy="strict" textStandardInfinityRep="~"
				textStandardNaNRep="z" textNumberRounding="pattern"
				textStandardZeroRep="0" textOutputMinLength="1" lengthUnits="characters"
				escapeSchemeRef="" documentFinalTerminatorCanBeMissing="no" 
                bitOrder="mostSignificantBitFirst" />

			
		</xs:appinfo>
	</xs:annotation>

	<!-- dataDictionary -->
	
	<xs:element name="groupElem">
		<xs:complexType>
			<xs:sequence dfdl:sequenceKind="ordered"
				dfdl:initiatedContent="no" dfdl:separator="* -"
				dfdl:separatorPosition="infix" dfdl:separatorSuppressionPolicy="trailingEmpty">
				<xs:element name="Test1"  type="xs:int"
					dfdl:initiator="Test1:" dfdl:terminator="+" />
				<xs:element name="Test2" minOccurs="0" maxOccurs="1" type="xs:string"
					dfdl:initiator="Test2:" dfdl:terminator="+" />
				<xs:element name="Test3" minOccurs="0" maxOccurs="1" type="xs:int"
					dfdl:initiator="Test3:" dfdl:terminator="+" />
			</xs:sequence>


		</xs:complexType>
	</xs:element>
	
	<xs:element name="groupElem2">
		<xs:complexType>
			<xs:sequence dfdl:sequenceKind="ordered"
				dfdl:initiatedContent="no" dfdl:separator="* -"
				dfdl:separatorPosition="prefix" dfdl:separatorSuppressionPolicy="never">
				<xs:element name="Test1"  type="xs:int"
					dfdl:initiator="Test1:" dfdl:terminator="+" />
				<xs:element name="Test2" minOccurs="0" maxOccurs="1" type="xs:string"
					dfdl:initiator="Test2:" dfdl:terminator="+" />
				<xs:element name="Test3" minOccurs="0" maxOccurs="1" type="xs:int"
					dfdl:initiator="Test3:" dfdl:terminator="+" />
			</xs:sequence>


		</xs:complexType>
	</xs:element>
	
	<xs:element name="groupElem3">
		<xs:complexType>
			<xs:sequence dfdl:sequenceKind="ordered"
				dfdl:initiatedContent="no" dfdl:separator="* -"
				dfdl:separatorPosition="postfix" dfdl:separatorSuppressionPolicy="anyEmpty">
				<xs:element name="Test1"  type="xs:int"
					dfdl:initiator="Test1:" dfdl:terminator="+" />
				<xs:element name="Test2" minOccurs="0" maxOccurs="1" type="xs:string"
					dfdl:initiator="Test2:" dfdl:terminator="+" />
				<xs:element name="Test3" minOccurs="0" maxOccurs="1" type="xs:int"
					dfdl:initiator="Test3:" dfdl:terminator="+" />
			</xs:sequence>


		</xs:complexType>
	</xs:element>

</xs:schema>
