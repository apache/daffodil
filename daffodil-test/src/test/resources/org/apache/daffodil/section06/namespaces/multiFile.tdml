<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<tdml:testSuite suiteName="multiFile" xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:tns="http://www.example.org/example1/"
  defaultRoundTrip="true">


  
  <tdml:parserTestCase name="simpleInclude" root="e1"
    model="test01sch1.dfdl.xsd"
    description="One schema includes another to get a format. No namespace in included file.">
    <tdml:document><![CDATA[thisIsData]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1>thisIsData</e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
   <tdml:parserTestCase name="simpleImport" root="e1"
    model="test02sch1.dfdl.xsd"
    description="One schema imports another to get a named format from a different namespace.">
    <tdml:document><![CDATA[thisIsData]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1>thisIsData</e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <tdml:parserTestCase name="importWithOverlappingNSPrefixes1" root="e1"
    model="test02sch1.dfdl.xsd"
    description="One schema imports another to get a named format from a different namespace. All the schemas use tns for their own (distinct) namespace.">
    <tdml:document><![CDATA[thisIsData]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1>thisIsData</e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <tdml:parserTestCase name="includeNoNamespace" root="e1"
    model="test03sch1.dfdl.xsd"
    description="One schema includes another to get a named format. Everything is no namespace.">
    <tdml:document><![CDATA[thisIsData]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1 xmlns="">thisIsData</e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <tdml:parserTestCase name="importWithOverlappingNSPrefixes2" root="e1"
    model="test04sch1.dfdl.xsd"
    description="One schema imports another to get a named format from a different namespace. All the schemas use tns for their own (distinct) namespace.">
    <tdml:document><![CDATA[thisIsData]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <tns:e1>thisIsData</tns:e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    This complex schema caused an issue where the "value" element would get a
    redundant xmlns:tns="nsB" prefix mapping when using SAX. Although the
    infoset is still technically valid with the extra mapping (it's redundant
    and nothing uses the prefix), The TDML Runner ensures SAX and non-SAX
    infosets are exactly the same, so this would lead to a failure. This test
    ensures we do not have any regressions with the complex schema and SAX
    namespace issues.
  -->
  <tdml:parserTestCase name="complexIncludesNamespaces_01" root="root"
    model="test05sch1.dfdl.xsd">
    <tdml:document>
      <tdml:documentPart type="text">1ab</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <tns:root xmlns:nsB="nsB" xmlns:tns="nsA">
          <elem>1</elem>
          <tns:elem1 xmlns:tns="nsB">
            <tns:elem1_fields>
              <field_a>
                <value>a</value>
              </field_a>
              <field_b>b</field_b>
            </tns:elem1_fields>
          </tns:elem1>
        </tns:root>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    This complex schema caused an issue where the "value" element would get a
    redundant xmlns:tns="nsB" prefix mapping when using SAX. Although the
    infoset is still technically valid with the extra mapping (it's redundant
    and nothing uses the prefix), The TDML Runner ensures SAX and non-SAX
    infosets are exactly the same, so this would lead to a failure. This test
    ensures we do not have any regressions with the complex schema and SAX
    namespace issues.
  -->
  <tdml:parserTestCase name="complexIncludesNamespaces_02" root="root"
    model="test05sch1.dfdl.xsd">
    <tdml:document>
      <tdml:documentPart type="text">2cd</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <tns:root xmlns:nsB="nsB" xmlns:tns="nsA">
          <elem>2</elem>
          <tns:elem2 xmlns:tns="nsB">
            <tns:elem2_fields>
              <field_c>
                <value>c</value>
              </field_c>
              <field_d>d</field_d>
            </tns:elem2_fields>
          </tns:elem2>
        </tns:root>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  
</tdml:testSuite>
