<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<tdml:testSuite suiteName="Delimiter Props Unparse" description="Section 12"
  xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/" xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:fn="http://www.w3.org/2005/xpath-functions"
  xmlns:ex="http://example.com">
  
  <tdml:defineSchema name="delimitedStrings">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd" />

    <dfdl:format ref="ex:GeneralFormat" encoding="ascii" 
        lengthUnits="bytes" outputNewLine="%CR;%LF;" initiatedContent="no" lengthKind="delimited"/>

    <xs:element name="e1" type="xs:string" dfdl:lengthKind="delimited" dfdl:initiator="! ? ."/>
    <xs:element name="e2" type="xs:string" dfdl:lengthKind="delimited" dfdl:initiator="? . !"/>
    <xs:element name="e3" type="xs:string" dfdl:lengthKind="delimited" dfdl:initiator="%NL; . !"/>
    <xs:element name="e4" type="xs:string" dfdl:lengthKind="delimited" dfdl:initiator="%ES; %NL; !"/>
    <xs:element name="e5" type="xs:string" dfdl:lengthKind="delimited" dfdl:initiator="! %ES;"/>
    <xs:element name="e6" type="xs:string" dfdl:lengthKind="delimited" dfdl:initiator="!%ES;"/>
    <xs:element name="e7" type="xs:string" dfdl:lengthKind="delimited" dfdl:initiator="%WSP; *"/>

    <xs:element name="e8" type="xs:string" dfdl:lengthKind="delimited" dfdl:terminator="* %WSP;"/>
    <xs:element name="e9" type="xs:string" dfdl:lengthKind="delimited" dfdl:terminator="? ! *"/>
    <xs:element name="e10" type="xs:string" dfdl:lengthKind="delimited" dfdl:terminator="? ! %ES;"/>
    <xs:element name="e11" type="xs:string" dfdl:lengthKind="delimited" dfdl:terminator="%WSP+; * )"/>
    <xs:element name="e12" type="xs:string" dfdl:lengthKind="delimited" dfdl:terminator="&amp; &lt; &gt;"/>

    <xs:element name="e13">
      <xs:complexType>
        <xs:sequence dfdl:separator=". , |">
          <xs:element name="a" type="xs:string" dfdl:initiator=", . |" dfdl:terminator="+ - /"/>
          <xs:element name="b" type="xs:string" dfdl:initiator="| , ." dfdl:terminator="1 2 3"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="e14">
      <xs:complexType>
        <xs:sequence dfdl:separator=". %ES;">
          <xs:element name="a" type="xs:string" dfdl:initiator=", . |" dfdl:terminator="+ - /"/>
          <xs:element name="b" type="xs:string" dfdl:initiator="| , ." dfdl:terminator="1 2 3"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="e15">
      <xs:complexType>
        <xs:sequence dfdl:separator=" . , |">
          <xs:element name="a" type="xs:string" dfdl:initiator=", . |" dfdl:terminator="+ - /"/>
          <xs:element name="b" type="xs:string" dfdl:initiator="| , ." dfdl:terminator="1 2 3"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="e16">
      <xs:complexType>
        <xs:sequence dfdl:separator="%SP; [ ]">
          <xs:element name="a" type="xs:string" dfdl:initiator="a:" dfdl:terminator="1 %SP; 3"/>
          <xs:element name="b" type="xs:string" dfdl:initiator="b:" dfdl:terminator="4 %SP; 6"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

<!--
      Test Name: unparseMultipleInitiators01
      Schema: delimitedStrings
      Root: e1
      Purpose: This test demonstrates that when you unparse an element with multiple initiators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleInitiators01" model="delimitedStrings" root="e1" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e1>exclaim</ex:e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>!exclaim</tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleInitiators02
      Schema: delimitedStrings
      Root: e2
      Purpose: This test demonstrates that when you unparse an element with multiple initiators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleInitiators02" model="delimitedStrings" root="e2" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e2>question</ex:e2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>?question</tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleInitiators03
      Schema: delimitedStrings
      Root: e3
      Purpose: This test demonstrates that when you unparse an element with multiple initiators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleInitiators03" model="delimitedStrings" root="e3" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e3>a</ex:e3>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>
      <tdml:documentPart type="byte">0d0a61</tdml:documentPart>
    </tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleInitiators04
      Schema: delimitedStrings
      Root: e4
      Purpose: This test demonstrates that when you unparse an element with multiple initiators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleInitiators04" model="delimitedStrings" root="e4" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e4>a</ex:e4>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>a</tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleInitiators05
      Schema: delimitedStrings
      Root: e5
      Purpose: This test demonstrates that when you unparse an element with multiple initiators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleInitiators05" model="delimitedStrings" root="e5" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e5>a</ex:e5>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>!a</tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleInitiators06
      Schema: delimitedStrings
      Root: e6
      Purpose: This test demonstrates that when you unparse an element with multiple initiators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleInitiators06" model="delimitedStrings" root="e6" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e6>a</ex:e6>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>!a</tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleInitiators07
      Schema: delimitedStrings
      Root: e7
      Purpose: This test demonstrates that when you unparse an element with multiple initiators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleInitiators07" model="delimitedStrings" root="e7" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e7>a</ex:e7>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document> a</tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleTerminators01
      Schema: delimitedStrings
      Root: e8
      Purpose: This test demonstrates that when you unparse an element with multiple terminators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleTerminators01" model="delimitedStrings" root="e8" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e8>terminated</ex:e8>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>terminated*</tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleTerminators02
      Schema: delimitedStrings
      Root: e9
      Purpose: This test demonstrates that when you unparse an element with multiple terminators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleTerminators02" model="delimitedStrings" root="e9" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e9>terminated</ex:e9>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>terminated?</tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleTerminators03
      Schema: delimitedStrings
      Root: e10
      Purpose: This test demonstrates that when you unparse an element with multiple terminators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleTerminators03" model="delimitedStrings" root="e10" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e10>terminated</ex:e10>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>dfdl:terminator</tdml:error>
      <tdml:error>cannot</tdml:error>
      <tdml:error>own</tdml:error>
      <tdml:error>ES</tdml:error>
    </tdml:errors>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleTerminators04
      Schema: delimitedStrings
      Root: e11
      Purpose: This test demonstrates that when you unparse an element with multiple terminators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleTerminators04" model="delimitedStrings" root="e11" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e11>terminated</ex:e11>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>terminated </tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleTerminators05
      Schema: delimitedStrings
      Root: e12
      Purpose: This test demonstrates that when you unparse an element with multiple terminators defined, the first
               one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleTerminators05" model="delimitedStrings" root="e12" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e12>terminated</ex:e12>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>terminated&amp;</tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleSeparators01
      Schema: delimitedStrings
      Root: e13
      Purpose: This test demonstrates that when you unparse an element with multiple separators, the first one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleSeparators01" model="delimitedStrings" root="e13" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e13>
          <ex:a>apple</ex:a>
          <ex:b>banana</ex:b>
        </ex:e13>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>,apple+.|banana1</tdml:document>
  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleSeparators02
      Schema: delimitedStrings
      Root: e14
      Purpose: This test demonstrates that when you unparse an element with multiple separators, the first one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleSeparators02" model="delimitedStrings" root="e14" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e14>
          <ex:a>apple</ex:a>
          <ex:b>banana</ex:b>
        </ex:e14>
      </tdml:dfdlInfoset>
    </tdml:infoset>

  <tdml:errors>
    <tdml:error>Schema Definition Error</tdml:error>
    <tdml:error>Separator</tdml:error>
    <tdml:error>contains</tdml:error>
    <tdml:error>disallowed</tdml:error>
    <tdml:error>ES</tdml:error>
  </tdml:errors>

  </tdml:unparserTestCase>

<!--
      Test Name: unparseSeparatorLeadingSpace
      Schema: delimitedStrings
      Root: e15
      Purpose: This test demonstrates the scenario where the list of separators has a leading space
-->

  <tdml:unparserTestCase name="unparseSeparatorLeadingSpace" model="delimitedStrings" root="e15" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e15>
          <ex:a>apple</ex:a>
          <ex:b>banana</ex:b>
        </ex:e15>
      </tdml:dfdlInfoset>
    </tdml:infoset>

    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
    </tdml:errors>

  </tdml:unparserTestCase>

<!--
      Test Name: unparseMultipleSeparators03
      Schema: delimitedStrings
      Root: e16
      Purpose: This test demonstrates that when you unparse an element with multiple separators, the first one is used.
-->

  <tdml:unparserTestCase name="unparseMultipleSeparators03" model="delimitedStrings" root="e16" roundTrip="true">
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e16>
          <ex:a>apple</ex:a>
          <ex:b>banana</ex:b>
        </ex:e16>
      </tdml:dfdlInfoset>
    </tdml:infoset>
    <tdml:document>a:apple1 b:banana4</tdml:document>
  </tdml:unparserTestCase>

</tdml:testSuite>
