<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<tdml:testSuite xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ex="http://example.com"
  xmlns:fn="http://www.w3.org/2005/xpath-functions" defaultRoundTrip="true">

  <tdml:defineSchema name="s1">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />

    <xs:element name="r1">
      <xs:complexType>
        <xs:sequence dfdl:separator=",">
          <xs:element name="a" type="xs:int" minOccurs='2' dfdl:lengthKind="explicit" dfdl:length="1"
            maxOccurs='unbounded' dfdl:occursCountKind="implicit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r2">
      <xs:complexType>
        <xs:sequence dfdl:separator="">
          <xs:element name="a" type="xs:int" minOccurs='2' dfdl:lengthKind="explicit" dfdl:length="1"
            maxOccurs='unbounded' 
            dfdl:initiator="(" dfdl:terminator=")" dfdl:occursCountKind="implicit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r3">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmptyStrict">
          <xs:element name="a" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit"
            dfdl:initiator="(" dfdl:terminator=")">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="b" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit"
            dfdl:initiator="(" dfdl:terminator=")">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r4">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmptyStrict" >
          <xs:element name="b" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit" >
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r5">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
          <xs:element name="b" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit"
            dfdl:initiator="(" dfdl:terminator=")">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:sequence dfdl:separator=";" dfdl:separatorSuppressionPolicy="trailingEmpty" dfdl:initiator="[" dfdl:terminator="]">
            <xs:element name="c" minOccurs="0" maxOccurs="unbounded" dfdl:occursCountKind="implicit">
              <xs:annotation>
                <xs:appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                    message="Assertion failed for dfdl:checkConstraints(.)" />
                </xs:appinfo>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="2" />
                  <xs:minLength value="2" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r6">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
          <xs:element name="b" minOccurs="1" maxOccurs="5" dfdl:occursCountKind="implicit"
            dfdl:initiator="(" dfdl:terminator=")">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:sequence dfdl:separator=";" dfdl:separatorSuppressionPolicy="trailingEmpty" >
            <xs:element name="c" minOccurs="0" maxOccurs="unbounded" dfdl:occursCountKind="implicit">
              <xs:annotation>
                <xs:appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                    message="Assertion failed for dfdl:checkConstraints(.)" />
                </xs:appinfo>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="2" />
                  <xs:minLength value="2" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r7">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
          <xs:element name="b" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit"
            dfdl:initiator="(" dfdl:terminator=")">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:sequence dfdl:separator=";" dfdl:separatorSuppressionPolicy="trailingEmpty" >
            <xs:element name="c" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit">
              <xs:annotation>
                <xs:appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                    message="Assertion failed for dfdl:checkConstraints(.)" />
                </xs:appinfo>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="2" />
                  <xs:minLength value="2" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r8">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
          <xs:element name="b" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit"
            dfdl:initiator="(" dfdl:terminator=")">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:choice>
            <xs:element name="c" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit">
              <xs:annotation>
                <xs:appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                    message="Assertion failed for dfdl:checkConstraints(.)" />
                </xs:appinfo>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="2" />
                  <xs:minLength value="2" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="d" type="xs:int" minOccurs="1" dfdl:lengthKind="explicit" dfdl:length="2" />
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r9">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
          <xs:element name="b" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit"
            dfdl:initiator="(" dfdl:terminator=")">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:choice>
            <xs:element name="c" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit">
              <xs:annotation>
                <xs:appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                    message="Assertion failed for dfdl:checkConstraints(.)" />
                </xs:appinfo>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="2" />
                  <xs:minLength value="2" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="d" type="xs:int" minOccurs="1" dfdl:lengthKind="explicit" dfdl:length="2" />
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r10">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
          <xs:element name="b" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit"
            dfdl:initiator="(" dfdl:terminator=")">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:choice>
            <xs:element name="c" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit"
              dfdl:initiator="(" dfdl:terminator=")">
              <xs:annotation>
                <xs:appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                    message="Assertion failed for dfdl:checkConstraints(.)" />
                </xs:appinfo>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="2" />
                  <xs:minLength value="2" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="d" type="xs:int" minOccurs="0" dfdl:lengthKind="explicit" dfdl:length="2" dfdl:occursCountKind="implicit"/>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r11">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
          <xs:element name="b" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit"
            dfdl:initiator="(" dfdl:terminator=")">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:choice>
            <xs:element name="c" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit">
              <xs:annotation>
                <xs:appinfo source="http://www.ogf.org/dfdl/">
                  <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                    message="Assertion failed for dfdl:checkConstraints(.)" />
                </xs:appinfo>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="2" />
                  <xs:minLength value="2" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="d" type="xs:string" minOccurs="1" dfdl:lengthKind="explicit" dfdl:length="2" dfdl:occursCountKind="implicit"/>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r12">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmptyStrict" >
          <xs:element name="b" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit"
            dfdl:initiator="(" dfdl:terminator=")">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="d" type="xs:string" minOccurs="1" dfdl:lengthKind="pattern"
            dfdl:lengthPattern=".+" dfdl:occursCountKind="implicit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r13">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmptyStrict" >
          <xs:element name="b" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit"
            dfdl:initiator="(" dfdl:terminator=")">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:assert test="{ dfdl:checkConstraints(.) }"
                  message="Assertion failed for dfdl:checkConstraints(.)" />
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2" />
                <xs:minLength value="2" />
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="d" type="xs:string" minOccurs="1" dfdl:lengthKind="pattern"
            dfdl:lengthPattern="ab" dfdl:occursCountKind="implicit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="r14">
      <xs:complexType>
        <xs:sequence dfdl:separator=",">
          <xs:element name="a" type="xs:string" minOccurs='2' dfdl:lengthKind="explicit" dfdl:length="1"
            maxOccurs='unbounded' dfdl:occursCountKind="implicit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="r15">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
          <xs:element name="one" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit">
            <xs:complexType>
              <xs:sequence dfdl:separator="," dfdl:alignmentUnits="bits" dfdl:alignment="1">
                <xs:element name="b" type="xs:int" dfdl:representation="text" minOccurs="1" maxOccurs="1" 
                  dfdl:lengthKind="explicit" dfdl:lengthUnits="bytes" dfdl:length="1" dfdl:occursCountKind="implicit"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="d" type="xs:string" minOccurs="1" dfdl:lengthKind="explicit" dfdl:length="2" dfdl:lengthUnits="bytes" dfdl:occursCountKind="implicit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="r16">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
          <xs:element name="one" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit">
            <xs:complexType>
              <xs:sequence dfdl:separator="," dfdl:alignmentUnits="bytes" dfdl:alignment="2">
                <xs:element name="b" type="xs:int" dfdl:representation="text" minOccurs="1" maxOccurs="1" 
                  dfdl:lengthKind="explicit" dfdl:lengthUnits="bytes" dfdl:length="1" dfdl:occursCountKind="implicit"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="d" type="xs:string" minOccurs="1" dfdl:lengthKind="explicit" dfdl:length="2" dfdl:lengthUnits="bytes" dfdl:occursCountKind="implicit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="r17">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
          <xs:element name="one" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit">
            <xs:complexType>
              <xs:sequence dfdl:separator="," dfdl:alignmentUnits="bytes" dfdl:alignment="1">
                <xs:element name="b" type="xs:int" dfdl:representation="text" minOccurs="1" maxOccurs="1" 
                  dfdl:lengthKind="explicit" dfdl:lengthUnits="bytes" dfdl:length="1" dfdl:occursCountKind="implicit"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="r18">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmpty">
          <xs:element name="one" minOccurs="1" maxOccurs="unbounded" dfdl:occursCountKind="implicit">
            <xs:complexType>
              <xs:sequence dfdl:separator="," dfdl:alignmentUnits="bytes" dfdl:alignment="2">
                <xs:element name="b" type="xs:int" dfdl:representation="text" minOccurs="1" maxOccurs="1" 
                  dfdl:lengthKind="explicit" dfdl:lengthUnits="bytes" dfdl:length="1" dfdl:occursCountKind="implicit"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="d" type="xs:string" minOccurs="1" dfdl:lengthKind="explicit" dfdl:length="2" dfdl:lengthUnits="bytes" dfdl:occursCountKind="implicit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="r19">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmptyStrict">
          <xs:element name="a" type="xs:string" dfdl:initiator="(" dfdl:terminator=")" minOccurs='2' dfdl:emptyValueDelimiterPolicy="none" dfdl:lengthKind="delimited"
            maxOccurs='unbounded' dfdl:occursCountKind="implicit"/>
          <xs:element name="d" type="xs:string" minOccurs="1" dfdl:lengthKind="pattern"
            dfdl:lengthPattern="ab" dfdl:occursCountKind="implicit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="r20">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmptyStrict">
          <xs:element name="a" type="xs:string" dfdl:lengthKind="delimited" maxOccurs='unbounded' dfdl:occursCountKind="implicit"/>
          <xs:element name="d" type="xs:string" minOccurs="1" dfdl:lengthKind="pattern" dfdl:lengthPattern="ab" dfdl:occursCountKind="implicit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="r21">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:separatorSuppressionPolicy="trailingEmptyStrict">
          <xs:element name="a" type="xs:hexBinary" dfdl:lengthKind="explicit" dfdl:length="5" minOccurs="1" maxOccurs='unbounded' dfdl:occursCountKind="implicit"/>
          <xs:element name="d" type="xs:string" minOccurs="1" dfdl:lengthKind="pattern" dfdl:lengthPattern="ab" dfdl:occursCountKind="implicit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="r22">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="rep" minOccurs="0" maxOccurs="unbounded" dfdl:occursCountKind="implicit">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="missing" type="xs:int" minOccurs="0" maxOccurs="1" dfdl:length="1" dfdl:lengthUnits="bytes" dfdl:lengthKind="explicit" dfdl:occursCountKind="implicit">
                  <xs:annotation>
                    <xs:appinfo source="http://www.ogf.org/dfdl/">
                      <dfdl:discriminator>{ fn:false() }</dfdl:discriminator>
                    </xs:appinfo>
                  </xs:annotation>
                </xs:element>
                <xs:element name="ivcMissing" type="xs:int" dfdl:inputValueCalc="{ ../ex:missing }" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <!--
    Test name: ockImplicit1
       Schema: s1
         Root: r1
      Purpose: This test shows minOccurs is respected for occursCountKind implicit, 
               even when maxOccurs is unbounded."
  -->

  <tdml:parserTestCase name="ockImplicit1" root="r1"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[1,1,2,2,2]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <r1>
        <a>1</a>
        <a>1</a>
        <a>2</a>
        <a>2</a>
        <a>2</a>
        </r1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <tdml:parserTestCase name="ockImplicit2" root="r1"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[1]]></tdml:document>
    <tdml:errors>
      <tdml:error>Failed to populate</tdml:error>
      <tdml:error>ex:a[2]</tdml:error>
      <tdml:error>Separator ',' not found</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>
  
  <!--
    Test name: ockImplicit3
       Schema: s1
         Root: r2
      Purpose: This test shows that maxOccurs "unbounded" is allowed when occursCountKind is implicit for the last element
               in the sequence.
  -->
  
  <tdml:parserTestCase name="ockImplicit3" root="r2"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[(1)(1)(2)(2)(2)]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <r2>
        <a>1</a>
        <a>1</a>
        <a>2</a>
        <a>2</a>
        <a>2</a>
        </r2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <tdml:parserTestCase name="ockImplicit4" root="r2"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[(1)]]></tdml:document>
    <tdml:errors>
      <tdml:error>Failed to populate</tdml:error>
      <tdml:error>ex:a[2]</tdml:error>
      <tdml:error>Initiator '(' not found</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit5
    Schema: s1
    Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
    is only allowed on the last required element of a sequence.  In this case there are
    two unbounded, required elements
  -->

  <tdml:parserTestCase name="ockImplicit5" root="r3"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[(12),(23),24,25]]></tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit6
    Schema: s1
    Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
    is only allowed on the last required element of a sequence.  In this case only the
    last unbounded element is required
  -->
  <tdml:parserTestCase name="ockImplicit6" root="r4"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[23,25]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <r4>
          <b>23</b>
          <b>25</b>
        </r4>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit7
    Schema: s1
    Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
    is only allowed on the last required element of a sequence.  In this case there is
    a required unbounded element followed by a sequence that has an initiator/terminator
    which means it has required syntax.
  -->

  <tdml:parserTestCase name="ockImplicit7" root="r5"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[(23),(25),[48]]]></tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit8
    Schema: s1
    Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
    is only allowed on the last required element of a sequence.  In this case there is
    a required unbounded element followed by a sequence that doesn't have an initiator/terminator
    or contains a required element which means it doesn't have required syntax.
  -->

  <tdml:parserTestCase name="ockImplicit8" root="r6"
    model="s1" description="Section 14.2.2"
    roundTrip="onePass">
    <tdml:document><![CDATA[(23),(25),,,,48]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <r6>
          <b>23</b>
          <b>25</b>
          <c>48</c>
        </r6>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit9
    Schema: s1
    Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
    is only allowed on the last required element of a sequence.  In this case there is
    a required unbounded element followed by a sequence that contains a required
    element.
  -->

  <tdml:parserTestCase name="ockImplicit9" root="r7"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[(23),(25),48]]></tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit10
    Schema: s1
    Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
    is only allowed on the last required element of a sequence.  In this case there is
    a required unbounded element followed by a choice that doesn't have an initiator/terminator
    and not every option contains a required element which means it doesn't have required syntax.
  -->

  <tdml:parserTestCase name="ockImplicit10" root="r8"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[(23),(25),ab]]></tdml:document>
    <tdml:errors>
    <tdml:error>Schema Definition Error</tdml:error>
     <tdml:error>occursCountKind</tdml:error>
     <tdml:error>implicit</tdml:error>
     <tdml:error>maxOccurs</tdml:error>
     <tdml:error>unbounded</tdml:error>
     <tdml:error>only allowed for last element</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit11
    Schema: s1
    Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
    is only allowed on the last required element of a sequence.  In this case there is
    a required unbounded element followed by a choice that contains a required
    element in every option.
  -->

  <tdml:parserTestCase name="ockImplicit11" root="r9"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[(23),(25),48]]></tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit12
    Schema: s1
    Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
    is only allowed on the last required element of a sequence.  In this case there is
    a required unbounded element followed by a choice that doesn't contain a required
    element in every option.  However, the option selected does contain a required
    element which should case an SDE at runtime.
  -->

  <tdml:parserTestCase name="ockImplicit12" root="r10"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[(23),(25),ab]]></tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit13
    Schema: s1
    Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
    is only allowed on the last required element of a sequence.  In this case there is
    a required unbounded element followed by a choice that contains a required element
    in every option. In this case one of the required choice options is a string that
    has a length known to be greater than 0, making it required.
  -->

  <tdml:parserTestCase name="ockImplicit13" root="r11"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[(23),(25),ab]]></tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit14
    Schema: s1
    Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
    is only allowed on the last required element of a sequence.  In this case there is
    a required unbounded element followed by an element with lengthKind="pattern" with
    a pattern that will match an empty string.  This should generate an SDE at runtime.
  -->

  <tdml:parserTestCase name="ockImplicit14" root="r12"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[(23),(25),ab]]></tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit15
    Schema: s1
    Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
    is only allowed on the last required element of a sequence.  In this case there is
    a required unbounded element followed by an element with lengthKind="pattern" with
    a pattern that won't match an empty string.  This should generate an SDE at compile.
  -->
  <tdml:parserTestCase name="ockImplicit15" root="r13"
    model="s1" description="Section 14.2.2">
    <tdml:document><![CDATA[(23),(25),ab]]></tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>
  
  <!--
    Test name: ockImplicit16
       Schema: s1
         Root: r14
      Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
               is only allowed on the last required element of a sequence.  In this case there is
               a required unbounded element (string with minOccurs > 0 and explicit length > 0)
  -->

  <tdml:parserTestCase name="ockImplicit16" root="r14" model="s1" description="Section 14.2.2">
    <tdml:document>a,b,c,d,e,f,g</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <r14>
          <a>a</a>
          <a>b</a>
          <a>c</a>
          <a>d</a>
          <a>e</a>
          <a>f</a>
          <a>g</a>
        </r14>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <!--
    Test name: ockImplicit17
       Schema: s1
         Root: r15
      Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
               is only allowed on the last required element of a sequence.  In this case there is
               a required unbounded element (alignment = 1 bit)
  -->

  <tdml:parserTestCase name="ockImplicit17" root="r15" model="s1" description="Section 14.2.2">
    <tdml:document>
      <tdml:documentPart type="text">32,ab</tdml:documentPart>
    </tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>
  
  <!--
    Test name: ockImplicit18
       Schema: s1
         Root: r16
      Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
               is only allowed on the last required element of a sequence.  In this case there is
               a required unbounded element (alignment = 1 byte)
  -->

  <tdml:parserTestCase name="ockImplicit18" root="r16" model="s1" description="Section 14.2.2">
    <tdml:document>
      <tdml:documentPart type="text">32,ab</tdml:documentPart>
    </tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>
  
  <!--
    Test name: ockImplicit19
       Schema: s1
         Root: r17
      Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
               is only allowed on the last required element of a sequence.  In this case there is
               a required unbounded element (alignment = 1 byte) but it is the last element and should
               parse successfully
  -->

  <tdml:parserTestCase name="ockImplicit19" root="r17" model="s1" description="Section 14.2.2">
    <tdml:document>
      <tdml:documentPart type="text">3,2,3,2,3,4</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <r17>
          <one>
            <b>3</b>
          </one>
          <one>
            <b>2</b>
          </one>
          <one>
            <b>3</b>
          </one>
          <one>
            <b>2</b>
          </one>
          <one>
            <b>3</b>
          </one>
          <one>
            <b>4</b>
          </one>
        </r17>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <!--
    Test name: ockImplicit20
       Schema: s1
         Root: r18
      Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
               is only allowed on the last required element of a sequence.  In this case there is
               a required unbounded element (alignment = 2 bytes & isKnownToBePrecededByAllByteLengthItems)
  -->

  <tdml:parserTestCase name="ockImplicit20" root="r18" model="s1" description="Section 14.2.2">
    <tdml:document>
      <tdml:documentPart type="text">32,ab</tdml:documentPart>
    </tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>
  
  <!--
    Test name: ockImplicit21
       Schema: s1
         Root: r19
      Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
               is only allowed on the last required element of a sequence.  In this case there is
               a required unbounded element (emptyValueDelimiterPolicy="none") followed by another.
  -->

  <tdml:parserTestCase name="ockImplicit21" root="r19" model="s1" description="Section 14.2.2">
    <tdml:document>
      <tdml:documentPart type="text">(32),(533),ab</tdml:documentPart>
    </tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>
  
  <!--
    Test name: ockImplicit22
       Schema: s1
         Root: r20
      Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
               is only allowed on the last required element of a sequence.  In this case there is
               a required unbounded element (minOccurs > 0 and isEmptyAnObservableConcept) followed by another.
  -->

  <tdml:parserTestCase name="ockImplicit22" root="r20" model="s1" description="Section 14.2.2">
    <tdml:document>
      <tdml:documentPart type="text">(32),(533),ab</tdml:documentPart>
    </tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>
  
  <!--
    Test name: ockImplicit23
       Schema: s1
         Root: r21
      Purpose: This test shows that maxOccurs="unbounded" and occursCountKind="implicit"
               is only allowed on the last required element of a sequence.  In this case there is
               a required unbounded element (minOccurs > 0, hexBinary, isContentRegionLengthKnownToBeGreaterThanZero) followed by another.
  -->

  <tdml:parserTestCase name="ockImplicit23" root="r21" model="s1" description="Section 14.2.2">
    <tdml:document>
      <tdml:documentPart type="byte">AB3E34</tdml:documentPart>
    </tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>occursCountKind='implicit' with unbounded maxOccurs only allowed for last element of a positional sequence</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: ockImplicit24
       Schema: s1
         Root: r21
      Purpose: This test shows that when an SDE occurs inside a repetition parser, the mark pool is correctly cleaned up and the SDE is displayed
  -->
  <tdml:parserTestCase name="ockImplicit24" root="r22" model="s1" description="Section 14.2.2">
    <tdml:document></tdml:document>
    <tdml:errors>
      <tdml:error>Schema Definition Error</tdml:error>
      <tdml:error>expression evaluation error</tdml:error>
      <tdml:error>missing</tdml:error>
      <tdml:error>does not exist</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

</tdml:testSuite>
